// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sampleRNN_GRU,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.564083,HLS_SYN_LAT=34724,HLS_SYN_TPT=none,HLS_SYN_MEM=72,HLS_SYN_DSP=96,HLS_SYN_FF=5533,HLS_SYN_LUT=9700,HLS_VERSION=2018_2}" *)

module sampleRNN_GRU (
        ap_clk,
        ap_rst_n,
        input_r_TDATA,
        input_r_TVALID,
        input_r_TREADY,
        input_r_TLAST,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY,
        output_r_TLAST
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_pp0_stage0 = 29'd2;
parameter    ap_ST_fsm_state6 = 29'd4;
parameter    ap_ST_fsm_pp1_stage0 = 29'd8;
parameter    ap_ST_fsm_state11 = 29'd16;
parameter    ap_ST_fsm_pp2_stage0 = 29'd32;
parameter    ap_ST_fsm_state16 = 29'd64;
parameter    ap_ST_fsm_pp3_stage0 = 29'd128;
parameter    ap_ST_fsm_state21 = 29'd256;
parameter    ap_ST_fsm_pp4_stage0 = 29'd512;
parameter    ap_ST_fsm_state26 = 29'd1024;
parameter    ap_ST_fsm_pp5_stage0 = 29'd2048;
parameter    ap_ST_fsm_state31 = 29'd4096;
parameter    ap_ST_fsm_state32 = 29'd8192;
parameter    ap_ST_fsm_state33 = 29'd16384;
parameter    ap_ST_fsm_state34 = 29'd32768;
parameter    ap_ST_fsm_state35 = 29'd65536;
parameter    ap_ST_fsm_state36 = 29'd131072;
parameter    ap_ST_fsm_state37 = 29'd262144;
parameter    ap_ST_fsm_state38 = 29'd524288;
parameter    ap_ST_fsm_state39 = 29'd1048576;
parameter    ap_ST_fsm_state40 = 29'd2097152;
parameter    ap_ST_fsm_state41 = 29'd4194304;
parameter    ap_ST_fsm_state42 = 29'd8388608;
parameter    ap_ST_fsm_state43 = 29'd16777216;
parameter    ap_ST_fsm_state44 = 29'd33554432;
parameter    ap_ST_fsm_state45 = 29'd67108864;
parameter    ap_ST_fsm_pp6_stage0 = 29'd134217728;
parameter    ap_ST_fsm_state57 = 29'd268435456;

input   ap_clk;
input   ap_rst_n;
input  [31:0] input_r_TDATA;
input   input_r_TVALID;
output   input_r_TREADY;
input   input_r_TLAST;
output  [31:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;
output   output_r_TLAST;

 reg    ap_rst_n_inv;
reg   [31:0] input_data_0_data_out;
wire    input_data_0_vld_in;
wire    input_data_0_vld_out;
wire    input_data_0_ack_in;
reg    input_data_0_ack_out;
reg   [31:0] input_data_0_payload_A;
reg   [31:0] input_data_0_payload_B;
reg    input_data_0_sel_rd;
reg    input_data_0_sel_wr;
wire    input_data_0_sel;
wire    input_data_0_load_A;
wire    input_data_0_load_B;
reg   [1:0] input_data_0_state;
wire    input_data_0_state_cmp_full;
wire    input_last_0_vld_in;
reg    input_last_0_ack_out;
reg   [1:0] input_last_0_state;
reg   [31:0] output_data_1_data_out;
reg    output_data_1_vld_in;
wire    output_data_1_vld_out;
wire    output_data_1_ack_in;
wire    output_data_1_ack_out;
reg   [31:0] output_data_1_payload_A;
reg   [31:0] output_data_1_payload_B;
reg    output_data_1_sel_rd;
reg    output_data_1_sel_wr;
wire    output_data_1_sel;
wire    output_data_1_load_A;
wire    output_data_1_load_B;
reg   [1:0] output_data_1_state;
wire    output_data_1_state_cmp_full;
reg    output_last_1_data_out;
reg    output_last_1_vld_in;
wire    output_last_1_vld_out;
wire    output_last_1_ack_in;
wire    output_last_1_ack_out;
reg    output_last_1_payload_A;
reg    output_last_1_payload_B;
reg    output_last_1_sel_rd;
reg    output_last_1_sel_wr;
wire    output_last_1_sel;
wire    output_last_1_load_A;
wire    output_last_1_load_B;
reg   [1:0] output_last_1_state;
wire    output_last_1_state_cmp_full;
wire   [8:0] last_address0;
reg    last_ce0;
wire   [0:0] last_q0;
reg    input_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond1_reg_4482;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond2_reg_4547;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond3_reg_4612;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond4_reg_4677;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] exitcond5_reg_4742;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] exitcond6_reg_4807;
reg    output_r_TDATA_blk_n;
reg    ap_enable_reg_pp6_iter9;
wire    ap_block_pp6_stage0;
reg   [0:0] exitcond_reg_5509;
reg   [0:0] exitcond_reg_5509_pp6_iter8_reg;
reg    ap_enable_reg_pp6_iter10;
reg   [0:0] exitcond_reg_5509_pp6_iter9_reg;
reg   [6:0] i_reg_867;
reg   [6:0] i_reg_867_pp0_iter1_reg;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [6:0] i_reg_867_pp0_iter2_reg;
reg   [6:0] i_1_reg_879;
reg   [6:0] i_1_reg_879_pp1_iter1_reg;
wire    ap_block_state7_pp1_stage0_iter0;
reg    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_state9_pp1_stage0_iter2;
wire    ap_block_state10_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [6:0] i_1_reg_879_pp1_iter2_reg;
reg   [13:0] i_2_reg_891;
reg   [13:0] i_2_reg_891_pp2_iter1_reg;
wire    ap_block_state12_pp2_stage0_iter0;
reg    ap_block_state13_pp2_stage0_iter1;
wire    ap_block_state14_pp2_stage0_iter2;
wire    ap_block_state15_pp2_stage0_iter3;
reg    ap_block_pp2_stage0_11001;
reg   [13:0] i_2_reg_891_pp2_iter2_reg;
reg   [13:0] i_3_reg_903;
reg   [13:0] i_3_reg_903_pp3_iter1_reg;
wire    ap_block_state17_pp3_stage0_iter0;
reg    ap_block_state18_pp3_stage0_iter1;
wire    ap_block_state19_pp3_stage0_iter2;
wire    ap_block_state20_pp3_stage0_iter3;
reg    ap_block_pp3_stage0_11001;
reg   [13:0] i_3_reg_903_pp3_iter2_reg;
reg   [7:0] i_4_reg_915;
reg   [7:0] i_4_reg_915_pp4_iter1_reg;
wire    ap_block_state22_pp4_stage0_iter0;
reg    ap_block_state23_pp4_stage0_iter1;
wire    ap_block_state24_pp4_stage0_iter2;
wire    ap_block_state25_pp4_stage0_iter3;
reg    ap_block_pp4_stage0_11001;
reg   [7:0] i_4_reg_915_pp4_iter2_reg;
reg   [7:0] i_5_reg_927;
reg   [7:0] i_5_reg_927_pp5_iter1_reg;
wire    ap_block_state27_pp5_stage0_iter0;
reg    ap_block_state28_pp5_stage0_iter1;
wire    ap_block_state29_pp5_stage0_iter2;
wire    ap_block_state30_pp5_stage0_iter3;
reg    ap_block_pp5_stage0_11001;
reg   [7:0] i_5_reg_927_pp5_iter2_reg;
reg   [8:0] i_7_reg_1008;
wire   [31:0] w_ih_V_q0;
reg   [31:0] reg_1030;
wire    ap_CS_fsm_state34;
wire   [31:0] w_ih_V_q1;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire   [31:0] x_V_q0;
reg   [31:0] reg_1035;
wire   [31:0] x_V_q1;
wire   [31:0] w_hh_V_q0;
reg   [31:0] reg_1040;
wire   [31:0] w_hh_V_q1;
wire   [31:0] h0_V_q0;
reg   [31:0] reg_1045;
wire   [31:0] h0_V_q1;
reg   [31:0] reg_1050;
reg   [31:0] reg_1055;
reg   [31:0] reg_1060;
reg   [31:0] reg_1065;
wire   [0:0] exitcond1_fu_1070_p2;
reg   [0:0] exitcond1_reg_4482_pp0_iter1_reg;
reg   [0:0] exitcond1_reg_4482_pp0_iter2_reg;
wire   [6:0] i_8_fu_1076_p2;
reg   [6:0] i_8_reg_4486;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] isneg_reg_4491;
reg   [0:0] isneg_reg_4491_pp0_iter2_reg;
reg   [10:0] exp_tmp_V_reg_4497;
wire   [51:0] tmp_22_fu_1108_p1;
reg   [51:0] tmp_22_reg_4502;
wire   [0:0] tmp_9_fu_1112_p2;
reg   [0:0] tmp_9_reg_4507;
reg   [0:0] tmp_9_reg_4507_pp0_iter2_reg;
wire   [53:0] man_V_2_fu_1138_p3;
reg   [53:0] man_V_2_reg_4513;
wire  signed [11:0] sh_amt_fu_1169_p3;
reg  signed [11:0] sh_amt_reg_4518;
wire   [0:0] tmp_6_fu_1177_p2;
reg   [0:0] tmp_6_reg_4524;
wire   [31:0] tmp_24_fu_1183_p1;
reg   [31:0] tmp_24_reg_4529;
wire   [0:0] sel_tmp7_fu_1214_p2;
reg   [0:0] sel_tmp7_reg_4535;
wire   [0:0] sel_tmp4_fu_1232_p2;
reg   [0:0] sel_tmp4_reg_4541;
wire   [0:0] exitcond2_fu_1350_p2;
reg   [0:0] exitcond2_reg_4547_pp1_iter1_reg;
reg   [0:0] exitcond2_reg_4547_pp1_iter2_reg;
wire   [6:0] i_9_fu_1356_p2;
reg   [6:0] i_9_reg_4551;
reg    ap_enable_reg_pp1_iter0;
reg   [0:0] isneg_1_reg_4556;
reg   [0:0] isneg_1_reg_4556_pp1_iter2_reg;
reg   [10:0] exp_tmp_V_1_reg_4562;
wire   [51:0] tmp_50_fu_1388_p1;
reg   [51:0] tmp_50_reg_4567;
wire   [0:0] tmp_15_fu_1392_p2;
reg   [0:0] tmp_15_reg_4572;
reg   [0:0] tmp_15_reg_4572_pp1_iter2_reg;
wire   [53:0] man_V_5_fu_1418_p3;
reg   [53:0] man_V_5_reg_4578;
wire  signed [11:0] sh_amt_1_fu_1449_p3;
reg  signed [11:0] sh_amt_1_reg_4583;
wire   [0:0] tmp_21_fu_1457_p2;
reg   [0:0] tmp_21_reg_4589;
wire   [31:0] tmp_56_fu_1463_p1;
reg   [31:0] tmp_56_reg_4594;
wire   [0:0] sel_tmp12_fu_1494_p2;
reg   [0:0] sel_tmp12_reg_4600;
wire   [0:0] sel_tmp17_fu_1512_p2;
reg   [0:0] sel_tmp17_reg_4606;
wire   [0:0] exitcond3_fu_1630_p2;
reg   [0:0] exitcond3_reg_4612_pp2_iter1_reg;
reg   [0:0] exitcond3_reg_4612_pp2_iter2_reg;
wire   [13:0] i_10_fu_1636_p2;
reg   [13:0] i_10_reg_4616;
reg    ap_enable_reg_pp2_iter0;
reg   [0:0] isneg_2_reg_4621;
reg   [0:0] isneg_2_reg_4621_pp2_iter2_reg;
reg   [10:0] exp_tmp_V_2_reg_4627;
wire   [51:0] tmp_77_fu_1668_p1;
reg   [51:0] tmp_77_reg_4632;
wire   [0:0] tmp_30_fu_1672_p2;
reg   [0:0] tmp_30_reg_4637;
reg   [0:0] tmp_30_reg_4637_pp2_iter2_reg;
wire   [53:0] man_V_8_fu_1698_p3;
reg   [53:0] man_V_8_reg_4643;
wire  signed [11:0] sh_amt_2_fu_1729_p3;
reg  signed [11:0] sh_amt_2_reg_4648;
wire   [0:0] tmp_38_fu_1737_p2;
reg   [0:0] tmp_38_reg_4654;
wire   [31:0] tmp_88_fu_1743_p1;
reg   [31:0] tmp_88_reg_4659;
wire   [0:0] sel_tmp21_fu_1774_p2;
reg   [0:0] sel_tmp21_reg_4665;
wire   [0:0] sel_tmp26_fu_1792_p2;
reg   [0:0] sel_tmp26_reg_4671;
wire   [0:0] exitcond4_fu_1910_p2;
reg   [0:0] exitcond4_reg_4677_pp3_iter1_reg;
reg   [0:0] exitcond4_reg_4677_pp3_iter2_reg;
wire   [13:0] i_11_fu_1916_p2;
reg   [13:0] i_11_reg_4681;
reg    ap_enable_reg_pp3_iter0;
reg   [0:0] isneg_3_reg_4686;
reg   [0:0] isneg_3_reg_4686_pp3_iter2_reg;
reg   [10:0] exp_tmp_V_3_reg_4692;
wire   [51:0] tmp_142_fu_1948_p1;
reg   [51:0] tmp_142_reg_4697;
wire   [0:0] tmp_48_fu_1952_p2;
reg   [0:0] tmp_48_reg_4702;
reg   [0:0] tmp_48_reg_4702_pp3_iter2_reg;
wire   [53:0] man_V_11_fu_1978_p3;
reg   [53:0] man_V_11_reg_4708;
wire  signed [11:0] sh_amt_3_fu_2009_p3;
reg  signed [11:0] sh_amt_3_reg_4713;
wire   [0:0] tmp_53_fu_2017_p2;
reg   [0:0] tmp_53_reg_4719;
wire   [31:0] tmp_143_fu_2023_p1;
reg   [31:0] tmp_143_reg_4724;
wire   [0:0] sel_tmp30_fu_2054_p2;
reg   [0:0] sel_tmp30_reg_4730;
wire   [0:0] sel_tmp35_fu_2072_p2;
reg   [0:0] sel_tmp35_reg_4736;
wire   [0:0] exitcond5_fu_2190_p2;
reg   [0:0] exitcond5_reg_4742_pp4_iter1_reg;
reg   [0:0] exitcond5_reg_4742_pp4_iter2_reg;
wire   [7:0] i_12_fu_2196_p2;
reg   [7:0] i_12_reg_4746;
reg    ap_enable_reg_pp4_iter0;
reg   [0:0] isneg_4_reg_4751;
reg   [0:0] isneg_4_reg_4751_pp4_iter2_reg;
reg   [10:0] exp_tmp_V_4_reg_4757;
wire   [51:0] tmp_148_fu_2228_p1;
reg   [51:0] tmp_148_reg_4762;
wire   [0:0] tmp_65_fu_2232_p2;
reg   [0:0] tmp_65_reg_4767;
reg   [0:0] tmp_65_reg_4767_pp4_iter2_reg;
wire   [53:0] man_V_14_fu_2258_p3;
reg   [53:0] man_V_14_reg_4773;
wire  signed [11:0] sh_amt_4_fu_2289_p3;
reg  signed [11:0] sh_amt_4_reg_4778;
wire   [0:0] tmp_69_fu_2297_p2;
reg   [0:0] tmp_69_reg_4784;
wire   [31:0] tmp_149_fu_2303_p1;
reg   [31:0] tmp_149_reg_4789;
wire   [0:0] sel_tmp39_fu_2334_p2;
reg   [0:0] sel_tmp39_reg_4795;
wire   [0:0] sel_tmp44_fu_2352_p2;
reg   [0:0] sel_tmp44_reg_4801;
wire   [0:0] exitcond6_fu_2470_p2;
reg   [0:0] exitcond6_reg_4807_pp5_iter1_reg;
reg   [0:0] exitcond6_reg_4807_pp5_iter2_reg;
wire   [7:0] i_13_fu_2476_p2;
reg   [7:0] i_13_reg_4811;
reg    ap_enable_reg_pp5_iter0;
reg   [0:0] isneg_5_reg_4816;
reg   [0:0] isneg_5_reg_4816_pp5_iter2_reg;
reg   [10:0] exp_tmp_V_5_reg_4822;
wire   [51:0] tmp_154_fu_2508_p1;
reg   [51:0] tmp_154_reg_4827;
wire   [0:0] tmp_80_fu_2512_p2;
reg   [0:0] tmp_80_reg_4832;
reg   [0:0] tmp_80_reg_4832_pp5_iter2_reg;
wire   [53:0] man_V_17_fu_2538_p3;
reg   [53:0] man_V_17_reg_4838;
wire  signed [11:0] sh_amt_5_fu_2569_p3;
reg  signed [11:0] sh_amt_5_reg_4843;
wire   [0:0] tmp_84_fu_2577_p2;
reg   [0:0] tmp_84_reg_4849;
wire   [31:0] tmp_155_fu_2583_p1;
reg   [31:0] tmp_155_reg_4854;
wire   [0:0] sel_tmp48_fu_2614_p2;
reg   [0:0] sel_tmp48_reg_4860;
wire   [0:0] sel_tmp53_fu_2632_p2;
reg   [0:0] sel_tmp53_reg_4866;
wire   [8:0] i_6_cast_fu_2750_p1;
reg   [8:0] i_6_cast_reg_4872;
wire    ap_CS_fsm_state32;
wire   [0:0] exitcond7_fu_2754_p2;
wire   [7:0] i_15_fu_2760_p2;
reg   [7:0] i_15_reg_4881;
wire   [63:0] tmp_91_fu_2766_p1;
reg   [63:0] tmp_91_reg_4886;
wire   [13:0] counter_1_fu_2770_p2;
reg   [13:0] counter_1_reg_4893;
wire    ap_CS_fsm_state33;
wire   [0:0] exitcond8_fu_2776_p2;
wire   [5:0] tmp_160_fu_2800_p1;
reg   [5:0] tmp_160_reg_4921;
wire   [6:0] j_1_15_fu_2822_p2;
reg   [6:0] j_1_15_reg_4959;
wire   [47:0] p_Val2_8_fu_2882_p2;
reg   [47:0] p_Val2_8_reg_5014;
wire   [47:0] p_Val2_12_fu_2896_p2;
reg   [47:0] p_Val2_12_reg_5019;
wire   [47:0] p_Val2_19_1_fu_2910_p2;
reg   [47:0] p_Val2_19_1_reg_5024;
wire   [47:0] p_Val2_22_1_fu_2924_p2;
reg   [47:0] p_Val2_22_1_reg_5029;
wire   [47:0] p_Val2_19_2_fu_3056_p2;
reg   [47:0] p_Val2_19_2_reg_5074;
reg   [31:0] tmp_110_reg_5079;
wire   [47:0] p_Val2_22_2_fu_3080_p2;
reg   [47:0] p_Val2_22_2_reg_5084;
reg   [31:0] tmp_111_reg_5089;
wire   [47:0] p_Val2_19_3_fu_3104_p2;
reg   [47:0] p_Val2_19_3_reg_5094;
wire   [47:0] p_Val2_22_3_fu_3118_p2;
reg   [47:0] p_Val2_22_3_reg_5099;
wire   [47:0] p_Val2_19_4_fu_3248_p2;
reg   [47:0] p_Val2_19_4_reg_5144;
reg   [31:0] tmp_114_reg_5149;
wire   [47:0] p_Val2_22_4_fu_3272_p2;
reg   [47:0] p_Val2_22_4_reg_5154;
reg   [31:0] tmp_115_reg_5159;
wire   [47:0] p_Val2_19_5_fu_3296_p2;
reg   [47:0] p_Val2_19_5_reg_5164;
wire   [47:0] p_Val2_22_5_fu_3310_p2;
reg   [47:0] p_Val2_22_5_reg_5169;
wire   [47:0] p_Val2_19_6_fu_3440_p2;
reg   [47:0] p_Val2_19_6_reg_5214;
reg   [31:0] tmp_118_reg_5219;
wire   [47:0] p_Val2_22_6_fu_3464_p2;
reg   [47:0] p_Val2_22_6_reg_5224;
reg   [31:0] tmp_119_reg_5229;
wire   [47:0] p_Val2_19_7_fu_3488_p2;
reg   [47:0] p_Val2_19_7_reg_5234;
wire   [47:0] p_Val2_22_7_fu_3502_p2;
reg   [47:0] p_Val2_22_7_reg_5239;
wire   [47:0] p_Val2_19_8_fu_3632_p2;
reg   [47:0] p_Val2_19_8_reg_5284;
reg   [31:0] tmp_122_reg_5289;
wire   [47:0] p_Val2_22_8_fu_3656_p2;
reg   [47:0] p_Val2_22_8_reg_5294;
reg   [31:0] tmp_123_reg_5299;
wire   [47:0] p_Val2_19_9_fu_3680_p2;
reg   [47:0] p_Val2_19_9_reg_5304;
wire   [47:0] p_Val2_22_9_fu_3694_p2;
reg   [47:0] p_Val2_22_9_reg_5309;
wire   [47:0] p_Val2_19_s_fu_3824_p2;
reg   [47:0] p_Val2_19_s_reg_5354;
reg   [31:0] tmp_126_reg_5359;
wire   [47:0] p_Val2_22_s_fu_3848_p2;
reg   [47:0] p_Val2_22_s_reg_5364;
reg   [31:0] tmp_127_reg_5369;
wire   [47:0] p_Val2_19_10_fu_3872_p2;
reg   [47:0] p_Val2_19_10_reg_5374;
wire   [47:0] p_Val2_22_10_fu_3886_p2;
reg   [47:0] p_Val2_22_10_reg_5379;
wire   [13:0] tmp_136_15_fu_3938_p2;
reg   [13:0] tmp_136_15_reg_5424;
wire   [47:0] p_Val2_19_11_fu_4022_p2;
reg   [47:0] p_Val2_19_11_reg_5429;
reg   [31:0] tmp_130_reg_5434;
wire   [47:0] p_Val2_22_11_fu_4046_p2;
reg   [47:0] p_Val2_22_11_reg_5439;
reg   [31:0] tmp_131_reg_5444;
wire   [47:0] p_Val2_19_12_fu_4070_p2;
reg   [47:0] p_Val2_19_12_reg_5449;
wire   [47:0] p_Val2_22_12_fu_4084_p2;
reg   [47:0] p_Val2_22_12_reg_5454;
wire   [47:0] p_Val2_19_13_fu_4168_p2;
reg   [47:0] p_Val2_19_13_reg_5459;
wire    ap_CS_fsm_state42;
reg   [31:0] tmp_134_reg_5464;
wire   [47:0] p_Val2_22_13_fu_4192_p2;
reg   [47:0] p_Val2_22_13_reg_5469;
reg   [31:0] tmp_135_reg_5474;
wire   [47:0] p_Val2_19_14_fu_4216_p2;
reg   [47:0] p_Val2_19_14_reg_5479;
wire   [47:0] p_Val2_22_14_fu_4230_p2;
reg   [47:0] p_Val2_22_14_reg_5484;
wire    ap_CS_fsm_state43;
wire   [31:0] b_ih_V_q0;
reg   [31:0] p_Val2_19_reg_5499;
wire    ap_CS_fsm_state44;
wire   [31:0] b_hh_V_q0;
reg   [31:0] p_Val2_20_reg_5504;
wire   [0:0] exitcond_fu_4348_p2;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state46_pp6_stage0_iter0;
wire    ap_block_state47_pp6_stage0_iter1;
wire    ap_block_state48_pp6_stage0_iter2;
wire    ap_block_state49_pp6_stage0_iter3;
wire    ap_block_state50_pp6_stage0_iter4;
wire    ap_block_state51_pp6_stage0_iter5;
wire    ap_block_state52_pp6_stage0_iter6;
wire    ap_block_state53_pp6_stage0_iter7;
wire    ap_block_state54_pp6_stage0_iter8;
wire    ap_block_state55_pp6_stage0_iter9;
reg    ap_block_state55_io;
wire    ap_block_state56_pp6_stage0_iter10;
reg    ap_block_state56_io;
reg    ap_block_pp6_stage0_11001;
reg   [0:0] exitcond_reg_5509_pp6_iter1_reg;
reg   [0:0] exitcond_reg_5509_pp6_iter2_reg;
reg   [0:0] exitcond_reg_5509_pp6_iter3_reg;
reg   [0:0] exitcond_reg_5509_pp6_iter4_reg;
reg   [0:0] exitcond_reg_5509_pp6_iter5_reg;
reg   [0:0] exitcond_reg_5509_pp6_iter6_reg;
reg   [0:0] exitcond_reg_5509_pp6_iter7_reg;
wire   [8:0] i_14_fu_4354_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [31:0] out1_V_q0;
reg   [31:0] p_Val2_10_reg_5528;
reg    ap_enable_reg_pp6_iter1;
reg   [0:0] is_neg_reg_5534;
reg   [0:0] is_neg_reg_5534_pp6_iter2_reg;
reg   [0:0] is_neg_reg_5534_pp6_iter3_reg;
reg   [0:0] is_neg_reg_5534_pp6_iter4_reg;
reg   [0:0] is_neg_reg_5534_pp6_iter5_reg;
reg   [0:0] is_neg_reg_5534_pp6_iter6_reg;
reg   [0:0] is_neg_reg_5534_pp6_iter7_reg;
reg   [0:0] is_neg_reg_5534_pp6_iter8_reg;
wire   [31:0] tmp_96_fu_4374_p2;
reg   [31:0] tmp_96_reg_5540;
reg   [0:0] last_load_reg_5545;
reg   [0:0] last_load_reg_5545_pp6_iter2_reg;
reg   [0:0] last_load_reg_5545_pp6_iter3_reg;
reg   [0:0] last_load_reg_5545_pp6_iter4_reg;
reg   [0:0] last_load_reg_5545_pp6_iter5_reg;
reg   [0:0] last_load_reg_5545_pp6_iter6_reg;
reg   [0:0] last_load_reg_5545_pp6_iter7_reg;
reg   [0:0] last_load_reg_5545_pp6_iter8_reg;
wire   [0:0] tmp_95_fu_4380_p2;
reg   [0:0] tmp_95_reg_5550;
reg   [0:0] tmp_95_reg_5550_pp6_iter3_reg;
reg   [0:0] tmp_95_reg_5550_pp6_iter4_reg;
reg   [0:0] tmp_95_reg_5550_pp6_iter5_reg;
reg   [0:0] tmp_95_reg_5550_pp6_iter6_reg;
reg   [0:0] tmp_95_reg_5550_pp6_iter7_reg;
reg   [0:0] tmp_95_reg_5550_pp6_iter8_reg;
wire   [31:0] tmp32_V_1_fu_4408_p2;
reg   [31:0] tmp32_V_1_reg_5555;
wire   [7:0] tmp_159_fu_4414_p1;
reg   [7:0] tmp_159_reg_5560;
reg   [7:0] tmp_159_reg_5560_pp6_iter3_reg;
reg   [7:0] tmp_159_reg_5560_pp6_iter4_reg;
reg   [7:0] tmp_159_reg_5560_pp6_iter5_reg;
reg   [7:0] tmp_159_reg_5560_pp6_iter6_reg;
reg   [7:0] tmp_159_reg_5560_pp6_iter7_reg;
reg   [7:0] tmp_159_reg_5560_pp6_iter8_reg;
wire   [31:0] tmp32_V_fu_4418_p1;
reg   [31:0] tmp32_V_reg_5565;
wire   [0:0] tmp_97_fu_4432_p2;
reg   [0:0] tmp_97_reg_5570;
wire   [31:0] p_03_i_fu_4474_p3;
wire    ap_CS_fsm_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire    ap_CS_fsm_state11;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state12;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
wire    ap_CS_fsm_state16;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state17;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
wire    ap_CS_fsm_state21;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state22;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
wire    ap_CS_fsm_state26;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state27;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter3;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state46;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
reg    ap_enable_reg_pp6_iter4;
reg    ap_enable_reg_pp6_iter5;
reg    ap_enable_reg_pp6_iter6;
reg    ap_enable_reg_pp6_iter7;
reg    ap_enable_reg_pp6_iter8;
reg   [5:0] x_V_address0;
reg    x_V_ce0;
reg    x_V_we0;
wire   [31:0] x_V_d0;
reg   [5:0] x_V_address1;
reg    x_V_ce1;
reg   [5:0] h0_V_address0;
reg    h0_V_ce0;
reg    h0_V_we0;
wire   [31:0] h0_V_d0;
reg   [5:0] h0_V_address1;
reg    h0_V_ce1;
reg   [8:0] out1_V_address0;
reg    out1_V_ce0;
reg    out1_V_we0;
wire   [31:0] out1_V_d0;
wire   [8:0] out1_V_address1;
reg    out1_V_ce1;
reg    out1_V_we1;
wire   [31:0] out1_V_d1;
reg   [13:0] w_ih_V_address0;
reg    w_ih_V_ce0;
reg    w_ih_V_we0;
wire   [31:0] w_ih_V_d0;
reg   [13:0] w_ih_V_address1;
reg    w_ih_V_ce1;
reg   [7:0] b_ih_V_address0;
reg    b_ih_V_ce0;
reg    b_ih_V_we0;
wire   [31:0] b_ih_V_d0;
reg   [13:0] w_hh_V_address0;
reg    w_hh_V_ce0;
reg    w_hh_V_we0;
wire   [31:0] w_hh_V_d0;
reg   [13:0] w_hh_V_address1;
reg    w_hh_V_ce1;
reg   [7:0] b_hh_V_address0;
reg    b_hh_V_ce0;
reg    b_hh_V_we0;
wire   [31:0] b_hh_V_d0;
reg   [6:0] ap_phi_mux_i_phi_fu_871_p4;
reg   [6:0] ap_phi_mux_i_1_phi_fu_883_p4;
reg   [13:0] ap_phi_mux_i_2_phi_fu_895_p4;
reg   [13:0] ap_phi_mux_i_3_phi_fu_907_p4;
reg   [7:0] ap_phi_mux_i_4_phi_fu_919_p4;
reg   [7:0] ap_phi_mux_i_5_phi_fu_931_p4;
reg   [7:0] i_6_reg_939;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state31;
reg   [13:0] counter_reg_950;
reg   [31:0] p_Val2_9_reg_962;
reg   [31:0] p_Val2_6_reg_974;
reg   [6:0] j_reg_986;
reg   [13:0] counter_s_reg_997;
wire   [63:0] tmp_fu_1238_p1;
wire   [63:0] tmp_7_fu_1518_p1;
wire   [63:0] tmp_25_fu_1798_p1;
wire   [63:0] tmp_45_fu_2078_p1;
wire   [63:0] tmp_62_fu_2358_p1;
wire   [63:0] tmp_76_fu_2638_p1;
wire   [63:0] tmp_104_fu_2782_p1;
wire   [63:0] tmp_105_fu_2788_p1;
wire   [63:0] tmp_124_1_fu_2810_p1;
wire   [63:0] tmp_125_1_fu_2816_p1;
wire   [63:0] tmp_124_2_fu_2839_p1;
wire   [63:0] tmp_125_2_fu_2845_p1;
wire   [63:0] tmp_124_3_fu_2862_p1;
wire   [63:0] tmp_125_3_fu_2868_p1;
wire   [63:0] tmp_124_4_fu_2941_p1;
wire   [63:0] tmp_125_4_fu_2947_p1;
wire   [63:0] tmp_124_5_fu_2964_p1;
wire   [63:0] tmp_125_5_fu_2970_p1;
wire   [63:0] tmp_124_6_fu_3135_p1;
wire   [63:0] tmp_125_6_fu_3141_p1;
wire   [63:0] tmp_124_7_fu_3158_p1;
wire   [63:0] tmp_125_7_fu_3164_p1;
wire   [63:0] tmp_124_8_fu_3327_p1;
wire   [63:0] tmp_125_8_fu_3333_p1;
wire   [63:0] tmp_124_9_fu_3350_p1;
wire   [63:0] tmp_125_9_fu_3356_p1;
wire   [63:0] tmp_124_s_fu_3519_p1;
wire   [63:0] tmp_125_s_fu_3525_p1;
wire   [63:0] tmp_124_10_fu_3542_p1;
wire   [63:0] tmp_125_10_fu_3548_p1;
wire   [63:0] tmp_124_11_fu_3711_p1;
wire   [63:0] tmp_125_11_fu_3717_p1;
wire   [63:0] tmp_124_12_fu_3734_p1;
wire   [63:0] tmp_125_12_fu_3740_p1;
wire   [63:0] tmp_124_13_fu_3903_p1;
wire   [63:0] tmp_125_13_fu_3909_p1;
wire   [63:0] tmp_124_14_fu_3926_p1;
wire   [63:0] tmp_125_14_fu_3932_p1;
wire   [63:0] tmp_103_fu_4337_p1;
wire   [63:0] tmp_94_fu_4360_p1;
wire    ap_block_pp6_stage0_01001;
wire   [63:0] grp_fu_1022_p1;
wire   [63:0] ireg_V_fu_1082_p1;
wire   [62:0] tmp_8_fu_1086_p1;
wire   [52:0] tmp_s_fu_1121_p3;
wire   [53:0] p_Result_s_fu_1128_p1;
wire   [53:0] man_V_1_fu_1132_p2;
wire   [11:0] tmp_4_fu_1118_p1;
wire   [11:0] F2_fu_1145_p2;
wire   [0:0] tmp_1_fu_1151_p2;
wire   [11:0] tmp_3_fu_1157_p2;
wire   [11:0] tmp_5_fu_1163_p2;
wire   [6:0] tmp_31_fu_1187_p4;
wire   [0:0] sel_tmp6_demorgan_fu_1203_p2;
wire   [0:0] sel_tmp6_fu_1208_p2;
wire   [0:0] sel_tmp21_demorgan_fu_1220_p2;
wire   [0:0] icmp_fu_1197_p2;
wire   [0:0] sel_tmp3_fu_1226_p2;
wire  signed [31:0] sh_amt_cast_fu_1243_p1;
wire   [53:0] tmp_14_fu_1251_p1;
wire   [53:0] tmp_16_fu_1255_p2;
wire   [0:0] sel_tmp1_fu_1276_p2;
wire   [0:0] tmp_10_fu_1246_p2;
wire   [0:0] sel_tmp8_fu_1286_p2;
wire   [31:0] tmp_17_fu_1271_p2;
wire   [31:0] tmp_34_fu_1260_p1;
wire   [0:0] sel_tmp_fu_1297_p2;
wire   [0:0] sel_tmp9_fu_1292_p2;
wire   [31:0] storemerge_fu_1264_p3;
wire   [0:0] sel_tmp2_fu_1281_p2;
wire   [0:0] or_cond_fu_1309_p2;
wire   [31:0] newSel_fu_1302_p3;
wire   [31:0] newSel1_fu_1314_p3;
wire   [0:0] or_cond1_fu_1321_p2;
wire   [0:0] or_cond2_fu_1335_p2;
wire   [31:0] newSel2_fu_1327_p3;
wire   [63:0] ireg_V_1_fu_1362_p1;
wire   [62:0] tmp_40_fu_1366_p1;
wire   [52:0] tmp_13_fu_1401_p3;
wire   [53:0] p_Result_1_fu_1408_p1;
wire   [53:0] man_V_4_fu_1412_p2;
wire   [11:0] tmp_12_fu_1398_p1;
wire   [11:0] F2_1_fu_1425_p2;
wire   [0:0] tmp_18_fu_1431_p2;
wire   [11:0] tmp_19_fu_1437_p2;
wire   [11:0] tmp_20_fu_1443_p2;
wire   [6:0] tmp_58_fu_1467_p4;
wire   [0:0] sel_tmp31_demorgan_fu_1483_p2;
wire   [0:0] sel_tmp11_fu_1488_p2;
wire   [0:0] sel_tmp46_demorgan_fu_1500_p2;
wire   [0:0] icmp1_fu_1477_p2;
wire   [0:0] sel_tmp16_fu_1506_p2;
wire  signed [31:0] sh_amt_1_cast_fu_1523_p1;
wire   [53:0] tmp_29_fu_1531_p1;
wire   [53:0] tmp_32_fu_1535_p2;
wire   [0:0] sel_tmp5_fu_1556_p2;
wire   [0:0] tmp_23_fu_1526_p2;
wire   [0:0] sel_tmp13_fu_1566_p2;
wire   [31:0] tmp_33_fu_1551_p2;
wire   [31:0] tmp_61_fu_1540_p1;
wire   [0:0] sel_tmp15_fu_1577_p2;
wire   [0:0] sel_tmp14_fu_1572_p2;
wire   [31:0] storemerge2_fu_1544_p3;
wire   [0:0] sel_tmp10_fu_1561_p2;
wire   [0:0] or_cond3_fu_1589_p2;
wire   [31:0] newSel4_fu_1582_p3;
wire   [31:0] newSel5_fu_1594_p3;
wire   [0:0] or_cond4_fu_1601_p2;
wire   [0:0] or_cond5_fu_1615_p2;
wire   [31:0] newSel6_fu_1607_p3;
wire   [63:0] ireg_V_2_fu_1642_p1;
wire   [62:0] tmp_72_fu_1646_p1;
wire   [52:0] tmp_28_fu_1681_p3;
wire   [53:0] p_Result_2_fu_1688_p1;
wire   [53:0] man_V_7_fu_1692_p2;
wire   [11:0] tmp_27_fu_1678_p1;
wire   [11:0] F2_2_fu_1705_p2;
wire   [0:0] tmp_35_fu_1711_p2;
wire   [11:0] tmp_36_fu_1717_p2;
wire   [11:0] tmp_37_fu_1723_p2;
wire   [6:0] tmp_90_fu_1747_p4;
wire   [0:0] sel_tmp56_demorgan_fu_1763_p2;
wire   [0:0] sel_tmp20_fu_1768_p2;
wire   [0:0] sel_tmp71_demorgan_fu_1780_p2;
wire   [0:0] icmp2_fu_1757_p2;
wire   [0:0] sel_tmp25_fu_1786_p2;
wire  signed [31:0] sh_amt_2_cast_fu_1803_p1;
wire   [53:0] tmp_41_fu_1811_p1;
wire   [53:0] tmp_42_fu_1815_p2;
wire   [0:0] sel_tmp18_fu_1836_p2;
wire   [0:0] tmp_39_fu_1806_p2;
wire   [0:0] sel_tmp22_fu_1846_p2;
wire   [31:0] tmp_43_fu_1831_p2;
wire   [31:0] tmp_93_fu_1820_p1;
wire   [0:0] sel_tmp24_fu_1857_p2;
wire   [0:0] sel_tmp23_fu_1852_p2;
wire   [31:0] storemerge4_fu_1824_p3;
wire   [0:0] sel_tmp19_fu_1841_p2;
wire   [0:0] or_cond6_fu_1869_p2;
wire   [31:0] newSel8_fu_1862_p3;
wire   [31:0] newSel9_fu_1874_p3;
wire   [0:0] or_cond7_fu_1881_p2;
wire   [0:0] or_cond8_fu_1895_p2;
wire   [31:0] newSel10_fu_1887_p3;
wire   [63:0] ireg_V_3_fu_1922_p1;
wire   [62:0] tmp_101_fu_1926_p1;
wire   [52:0] tmp_47_fu_1961_p3;
wire   [53:0] p_Result_3_fu_1968_p1;
wire   [53:0] man_V_10_fu_1972_p2;
wire   [11:0] tmp_46_fu_1958_p1;
wire   [11:0] F2_3_fu_1985_p2;
wire   [0:0] tmp_49_fu_1991_p2;
wire   [11:0] tmp_51_fu_1997_p2;
wire   [11:0] tmp_52_fu_2003_p2;
wire   [6:0] tmp_144_fu_2027_p4;
wire   [0:0] sel_tmp81_demorgan_fu_2043_p2;
wire   [0:0] sel_tmp29_fu_2048_p2;
wire   [0:0] sel_tmp96_demorgan_fu_2060_p2;
wire   [0:0] icmp3_fu_2037_p2;
wire   [0:0] sel_tmp34_fu_2066_p2;
wire  signed [31:0] sh_amt_3_cast_fu_2083_p1;
wire   [53:0] tmp_55_fu_2091_p1;
wire   [53:0] tmp_57_fu_2095_p2;
wire   [0:0] sel_tmp27_fu_2116_p2;
wire   [0:0] tmp_54_fu_2086_p2;
wire   [0:0] sel_tmp31_fu_2126_p2;
wire   [31:0] tmp_59_fu_2111_p2;
wire   [31:0] tmp_145_fu_2100_p1;
wire   [0:0] sel_tmp33_fu_2137_p2;
wire   [0:0] sel_tmp32_fu_2132_p2;
wire   [31:0] storemerge6_fu_2104_p3;
wire   [0:0] sel_tmp28_fu_2121_p2;
wire   [0:0] or_cond9_fu_2149_p2;
wire   [31:0] newSel12_fu_2142_p3;
wire   [31:0] newSel13_fu_2154_p3;
wire   [0:0] or_cond10_fu_2161_p2;
wire   [0:0] or_cond11_fu_2175_p2;
wire   [31:0] newSel14_fu_2167_p3;
wire   [63:0] ireg_V_4_fu_2202_p1;
wire   [62:0] tmp_146_fu_2206_p1;
wire   [52:0] tmp_64_fu_2241_p3;
wire   [53:0] p_Result_5_fu_2248_p1;
wire   [53:0] man_V_13_fu_2252_p2;
wire   [11:0] tmp_63_fu_2238_p1;
wire   [11:0] F2_4_fu_2265_p2;
wire   [0:0] tmp_66_fu_2271_p2;
wire   [11:0] tmp_67_fu_2277_p2;
wire   [11:0] tmp_68_fu_2283_p2;
wire   [6:0] tmp_150_fu_2307_p4;
wire   [0:0] sel_tmp106_demorgan_fu_2323_p2;
wire   [0:0] sel_tmp38_fu_2328_p2;
wire   [0:0] sel_tmp121_demorgan_fu_2340_p2;
wire   [0:0] icmp4_fu_2317_p2;
wire   [0:0] sel_tmp43_fu_2346_p2;
wire  signed [31:0] sh_amt_4_cast_fu_2363_p1;
wire   [53:0] tmp_71_fu_2371_p1;
wire   [53:0] tmp_73_fu_2375_p2;
wire   [0:0] sel_tmp36_fu_2396_p2;
wire   [0:0] tmp_70_fu_2366_p2;
wire   [0:0] sel_tmp40_fu_2406_p2;
wire   [31:0] tmp_74_fu_2391_p2;
wire   [31:0] tmp_151_fu_2380_p1;
wire   [0:0] sel_tmp42_fu_2417_p2;
wire   [0:0] sel_tmp41_fu_2412_p2;
wire   [31:0] storemerge8_fu_2384_p3;
wire   [0:0] sel_tmp37_fu_2401_p2;
wire   [0:0] or_cond12_fu_2429_p2;
wire   [31:0] newSel16_fu_2422_p3;
wire   [31:0] newSel17_fu_2434_p3;
wire   [0:0] or_cond13_fu_2441_p2;
wire   [0:0] or_cond14_fu_2455_p2;
wire   [31:0] newSel18_fu_2447_p3;
wire   [63:0] ireg_V_5_fu_2482_p1;
wire   [62:0] tmp_152_fu_2486_p1;
wire   [52:0] tmp_79_fu_2521_p3;
wire   [53:0] p_Result_6_fu_2528_p1;
wire   [53:0] man_V_16_fu_2532_p2;
wire   [11:0] tmp_78_fu_2518_p1;
wire   [11:0] F2_5_fu_2545_p2;
wire   [0:0] tmp_81_fu_2551_p2;
wire   [11:0] tmp_82_fu_2557_p2;
wire   [11:0] tmp_83_fu_2563_p2;
wire   [6:0] tmp_156_fu_2587_p4;
wire   [0:0] sel_tmp131_demorgan_fu_2603_p2;
wire   [0:0] sel_tmp47_fu_2608_p2;
wire   [0:0] sel_tmp146_demorgan_fu_2620_p2;
wire   [0:0] icmp5_fu_2597_p2;
wire   [0:0] sel_tmp52_fu_2626_p2;
wire  signed [31:0] sh_amt_5_cast_fu_2643_p1;
wire   [53:0] tmp_86_fu_2651_p1;
wire   [53:0] tmp_87_fu_2655_p2;
wire   [0:0] sel_tmp45_fu_2676_p2;
wire   [0:0] tmp_85_fu_2646_p2;
wire   [0:0] sel_tmp49_fu_2686_p2;
wire   [31:0] tmp_89_fu_2671_p2;
wire   [31:0] tmp_157_fu_2660_p1;
wire   [0:0] sel_tmp51_fu_2697_p2;
wire   [0:0] sel_tmp50_fu_2692_p2;
wire   [31:0] storemerge1_fu_2664_p3;
wire   [0:0] sel_tmp46_fu_2681_p2;
wire   [0:0] or_cond15_fu_2709_p2;
wire   [31:0] newSel20_fu_2702_p3;
wire   [31:0] newSel21_fu_2714_p3;
wire   [0:0] or_cond16_fu_2721_p2;
wire   [0:0] or_cond17_fu_2735_p2;
wire   [31:0] newSel22_fu_2727_p3;
wire   [13:0] tmp_136_s_fu_2794_p2;
wire   [5:0] j_1_s_fu_2804_p2;
wire   [13:0] tmp_136_1_fu_2828_p2;
wire   [5:0] j_1_1_fu_2834_p2;
wire   [13:0] tmp_136_2_fu_2851_p2;
wire   [5:0] j_1_2_fu_2857_p2;
wire  signed [31:0] p_Val2_8_fu_2882_p0;
wire  signed [31:0] p_Val2_8_fu_2882_p1;
wire  signed [31:0] p_Val2_12_fu_2896_p0;
wire  signed [31:0] p_Val2_12_fu_2896_p1;
wire  signed [31:0] p_Val2_19_1_fu_2910_p0;
wire  signed [31:0] p_Val2_19_1_fu_2910_p1;
wire  signed [31:0] p_Val2_22_1_fu_2924_p0;
wire  signed [31:0] p_Val2_22_1_fu_2924_p1;
wire   [13:0] tmp_136_3_fu_2930_p2;
wire   [5:0] j_1_3_fu_2936_p2;
wire   [13:0] tmp_136_4_fu_2953_p2;
wire   [5:0] j_1_4_fu_2959_p2;
wire   [47:0] tmp_106_fu_2976_p3;
wire   [47:0] tmp_107_fu_2989_p3;
wire   [47:0] p_Val2_11_fu_2984_p2;
wire   [31:0] tmp_108_fu_3002_p4;
wire   [47:0] tmp_127_1_fu_3012_p3;
wire   [47:0] p_Val2_13_fu_2997_p2;
wire   [31:0] tmp_109_fu_3025_p4;
wire   [47:0] tmp_132_1_fu_3035_p3;
wire  signed [31:0] p_Val2_19_2_fu_3056_p0;
wire  signed [31:0] p_Val2_19_2_fu_3056_p1;
wire   [47:0] p_Val2_20_1_fu_3020_p2;
wire  signed [31:0] p_Val2_22_2_fu_3080_p0;
wire  signed [31:0] p_Val2_22_2_fu_3080_p1;
wire   [47:0] p_Val2_23_1_fu_3043_p2;
wire  signed [31:0] p_Val2_19_3_fu_3104_p0;
wire  signed [31:0] p_Val2_19_3_fu_3104_p1;
wire  signed [31:0] p_Val2_22_3_fu_3118_p0;
wire  signed [31:0] p_Val2_22_3_fu_3118_p1;
wire   [13:0] tmp_136_5_fu_3124_p2;
wire   [5:0] j_1_5_fu_3130_p2;
wire   [13:0] tmp_136_6_fu_3147_p2;
wire   [5:0] j_1_6_fu_3153_p2;
wire   [47:0] tmp_127_2_fu_3170_p3;
wire   [47:0] tmp_132_2_fu_3182_p3;
wire   [47:0] p_Val2_20_2_fu_3177_p2;
wire   [31:0] tmp_112_fu_3194_p4;
wire   [47:0] tmp_127_3_fu_3204_p3;
wire   [47:0] p_Val2_23_2_fu_3189_p2;
wire   [31:0] tmp_113_fu_3217_p4;
wire   [47:0] tmp_132_3_fu_3227_p3;
wire  signed [31:0] p_Val2_19_4_fu_3248_p0;
wire  signed [31:0] p_Val2_19_4_fu_3248_p1;
wire   [47:0] p_Val2_20_3_fu_3212_p2;
wire  signed [31:0] p_Val2_22_4_fu_3272_p0;
wire  signed [31:0] p_Val2_22_4_fu_3272_p1;
wire   [47:0] p_Val2_23_3_fu_3235_p2;
wire  signed [31:0] p_Val2_19_5_fu_3296_p0;
wire  signed [31:0] p_Val2_19_5_fu_3296_p1;
wire  signed [31:0] p_Val2_22_5_fu_3310_p0;
wire  signed [31:0] p_Val2_22_5_fu_3310_p1;
wire   [13:0] tmp_136_7_fu_3316_p2;
wire   [5:0] j_1_7_fu_3322_p2;
wire   [13:0] tmp_136_8_fu_3339_p2;
wire   [5:0] j_1_8_fu_3345_p2;
wire   [47:0] tmp_127_4_fu_3362_p3;
wire   [47:0] tmp_132_4_fu_3374_p3;
wire   [47:0] p_Val2_20_4_fu_3369_p2;
wire   [31:0] tmp_116_fu_3386_p4;
wire   [47:0] tmp_127_5_fu_3396_p3;
wire   [47:0] p_Val2_23_4_fu_3381_p2;
wire   [31:0] tmp_117_fu_3409_p4;
wire   [47:0] tmp_132_5_fu_3419_p3;
wire  signed [31:0] p_Val2_19_6_fu_3440_p0;
wire  signed [31:0] p_Val2_19_6_fu_3440_p1;
wire   [47:0] p_Val2_20_5_fu_3404_p2;
wire  signed [31:0] p_Val2_22_6_fu_3464_p0;
wire  signed [31:0] p_Val2_22_6_fu_3464_p1;
wire   [47:0] p_Val2_23_5_fu_3427_p2;
wire  signed [31:0] p_Val2_19_7_fu_3488_p0;
wire  signed [31:0] p_Val2_19_7_fu_3488_p1;
wire  signed [31:0] p_Val2_22_7_fu_3502_p0;
wire  signed [31:0] p_Val2_22_7_fu_3502_p1;
wire   [13:0] tmp_136_9_fu_3508_p2;
wire   [5:0] j_1_9_fu_3514_p2;
wire   [13:0] tmp_136_10_fu_3531_p2;
wire   [5:0] j_1_10_fu_3537_p2;
wire   [47:0] tmp_127_6_fu_3554_p3;
wire   [47:0] tmp_132_6_fu_3566_p3;
wire   [47:0] p_Val2_20_6_fu_3561_p2;
wire   [31:0] tmp_120_fu_3578_p4;
wire   [47:0] tmp_127_7_fu_3588_p3;
wire   [47:0] p_Val2_23_6_fu_3573_p2;
wire   [31:0] tmp_121_fu_3601_p4;
wire   [47:0] tmp_132_7_fu_3611_p3;
wire  signed [31:0] p_Val2_19_8_fu_3632_p0;
wire  signed [31:0] p_Val2_19_8_fu_3632_p1;
wire   [47:0] p_Val2_20_7_fu_3596_p2;
wire  signed [31:0] p_Val2_22_8_fu_3656_p0;
wire  signed [31:0] p_Val2_22_8_fu_3656_p1;
wire   [47:0] p_Val2_23_7_fu_3619_p2;
wire  signed [31:0] p_Val2_19_9_fu_3680_p0;
wire  signed [31:0] p_Val2_19_9_fu_3680_p1;
wire  signed [31:0] p_Val2_22_9_fu_3694_p0;
wire  signed [31:0] p_Val2_22_9_fu_3694_p1;
wire   [13:0] tmp_136_11_fu_3700_p2;
wire   [5:0] j_1_11_fu_3706_p2;
wire   [13:0] tmp_136_12_fu_3723_p2;
wire   [5:0] j_1_12_fu_3729_p2;
wire   [47:0] tmp_127_8_fu_3746_p3;
wire   [47:0] tmp_132_8_fu_3758_p3;
wire   [47:0] p_Val2_20_8_fu_3753_p2;
wire   [31:0] tmp_124_fu_3770_p4;
wire   [47:0] tmp_127_9_fu_3780_p3;
wire   [47:0] p_Val2_23_8_fu_3765_p2;
wire   [31:0] tmp_125_fu_3793_p4;
wire   [47:0] tmp_132_9_fu_3803_p3;
wire  signed [31:0] p_Val2_19_s_fu_3824_p0;
wire  signed [31:0] p_Val2_19_s_fu_3824_p1;
wire   [47:0] p_Val2_20_9_fu_3788_p2;
wire  signed [31:0] p_Val2_22_s_fu_3848_p0;
wire  signed [31:0] p_Val2_22_s_fu_3848_p1;
wire   [47:0] p_Val2_23_9_fu_3811_p2;
wire  signed [31:0] p_Val2_19_10_fu_3872_p0;
wire  signed [31:0] p_Val2_19_10_fu_3872_p1;
wire  signed [31:0] p_Val2_22_10_fu_3886_p0;
wire  signed [31:0] p_Val2_22_10_fu_3886_p1;
wire   [13:0] tmp_136_13_fu_3892_p2;
wire   [5:0] j_1_13_fu_3898_p2;
wire   [13:0] tmp_136_14_fu_3915_p2;
wire   [5:0] j_1_14_fu_3921_p2;
wire   [47:0] tmp_127_s_fu_3944_p3;
wire   [47:0] tmp_132_s_fu_3956_p3;
wire   [47:0] p_Val2_20_s_fu_3951_p2;
wire   [31:0] tmp_128_fu_3968_p4;
wire   [47:0] tmp_127_10_fu_3978_p3;
wire   [47:0] p_Val2_23_s_fu_3963_p2;
wire   [31:0] tmp_129_fu_3991_p4;
wire   [47:0] tmp_132_10_fu_4001_p3;
wire  signed [31:0] p_Val2_19_11_fu_4022_p0;
wire  signed [31:0] p_Val2_19_11_fu_4022_p1;
wire   [47:0] p_Val2_20_10_fu_3986_p2;
wire  signed [31:0] p_Val2_22_11_fu_4046_p0;
wire  signed [31:0] p_Val2_22_11_fu_4046_p1;
wire   [47:0] p_Val2_23_10_fu_4009_p2;
wire  signed [31:0] p_Val2_19_12_fu_4070_p0;
wire  signed [31:0] p_Val2_19_12_fu_4070_p1;
wire  signed [31:0] p_Val2_22_12_fu_4084_p0;
wire  signed [31:0] p_Val2_22_12_fu_4084_p1;
wire   [47:0] tmp_127_11_fu_4090_p3;
wire   [47:0] tmp_132_11_fu_4102_p3;
wire   [47:0] p_Val2_20_11_fu_4097_p2;
wire   [31:0] tmp_132_fu_4114_p4;
wire   [47:0] tmp_127_12_fu_4124_p3;
wire   [47:0] p_Val2_23_11_fu_4109_p2;
wire   [31:0] tmp_133_fu_4137_p4;
wire   [47:0] tmp_132_12_fu_4147_p3;
wire  signed [31:0] p_Val2_19_13_fu_4168_p0;
wire  signed [31:0] p_Val2_19_13_fu_4168_p1;
wire   [47:0] p_Val2_20_12_fu_4132_p2;
wire  signed [31:0] p_Val2_22_13_fu_4192_p0;
wire  signed [31:0] p_Val2_22_13_fu_4192_p1;
wire   [47:0] p_Val2_23_12_fu_4155_p2;
wire  signed [31:0] p_Val2_19_14_fu_4216_p0;
wire  signed [31:0] p_Val2_19_14_fu_4216_p1;
wire  signed [31:0] p_Val2_22_14_fu_4230_p0;
wire  signed [31:0] p_Val2_22_14_fu_4230_p1;
wire   [47:0] tmp_127_13_fu_4236_p3;
wire   [47:0] tmp_132_13_fu_4248_p3;
wire   [47:0] p_Val2_20_13_fu_4243_p2;
wire   [31:0] tmp_136_fu_4260_p4;
wire   [47:0] tmp_127_14_fu_4270_p3;
wire   [47:0] p_Val2_20_14_fu_4278_p2;
wire   [47:0] p_Val2_23_13_fu_4255_p2;
wire   [31:0] tmp_137_fu_4293_p4;
wire   [47:0] tmp_132_14_fu_4303_p3;
wire   [47:0] p_Val2_23_14_fu_4311_p2;
wire   [8:0] tmp_102_fu_4332_p2;
wire   [31:0] p_Val2_s_35_fu_4385_p3;
reg   [31:0] p_Result_7_fu_4390_p4;
reg   [31:0] num_zeros_fu_4400_p3;
wire   [31:0] grp_fu_1019_p1;
wire   [7:0] p_Result_4_fu_4422_p4;
wire   [7:0] tmp_98_fu_4438_p2;
wire   [7:0] tmp_99_fu_4443_p1;
wire   [7:0] p_Repl2_1_trunc_fu_4446_p2;
wire   [8:0] tmp_100_fu_4452_p3;
wire   [31:0] p_Result_8_fu_4459_p5;
wire   [31:0] f_fu_4470_p1;
reg    grp_fu_1019_ce;
reg   [28:0] ap_NS_fsm;
wire    ap_CS_fsm_state57;
reg    ap_block_state57;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;

// power-on initialization
initial begin
#0 input_data_0_sel_rd = 1'b0;
#0 input_data_0_sel_wr = 1'b0;
#0 input_data_0_state = 2'd0;
#0 input_last_0_state = 2'd0;
#0 output_data_1_sel_rd = 1'b0;
#0 output_data_1_sel_wr = 1'b0;
#0 output_data_1_state = 2'd0;
#0 output_last_1_sel_rd = 1'b0;
#0 output_last_1_sel_wr = 1'b0;
#0 output_last_1_state = 2'd0;
#0 ap_CS_fsm = 29'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter9 = 1'b0;
#0 ap_enable_reg_pp6_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter5 = 1'b0;
#0 ap_enable_reg_pp6_iter6 = 1'b0;
#0 ap_enable_reg_pp6_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter8 = 1'b0;
end

sampleRNN_GRU_last #(
    .DataWidth( 1 ),
    .AddressRange( 384 ),
    .AddressWidth( 9 ))
last_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(last_address0),
    .ce0(last_ce0),
    .q0(last_q0)
);

sampleRNN_GRU_x_V #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
x_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_V_address0),
    .ce0(x_V_ce0),
    .we0(x_V_we0),
    .d0(x_V_d0),
    .q0(x_V_q0),
    .address1(x_V_address1),
    .ce1(x_V_ce1),
    .q1(x_V_q1)
);

sampleRNN_GRU_x_V #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
h0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(h0_V_address0),
    .ce0(h0_V_ce0),
    .we0(h0_V_we0),
    .d0(h0_V_d0),
    .q0(h0_V_q0),
    .address1(h0_V_address1),
    .ce1(h0_V_ce1),
    .q1(h0_V_q1)
);

sampleRNN_GRU_outbkb #(
    .DataWidth( 32 ),
    .AddressRange( 384 ),
    .AddressWidth( 9 ))
out1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out1_V_address0),
    .ce0(out1_V_ce0),
    .we0(out1_V_we0),
    .d0(out1_V_d0),
    .q0(out1_V_q0),
    .address1(out1_V_address1),
    .ce1(out1_V_ce1),
    .we1(out1_V_we1),
    .d1(out1_V_d1)
);

sampleRNN_GRU_w_icud #(
    .DataWidth( 32 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
w_ih_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(w_ih_V_address0),
    .ce0(w_ih_V_ce0),
    .we0(w_ih_V_we0),
    .d0(w_ih_V_d0),
    .q0(w_ih_V_q0),
    .address1(w_ih_V_address1),
    .ce1(w_ih_V_ce1),
    .q1(w_ih_V_q1)
);

sampleRNN_GRU_b_idEe #(
    .DataWidth( 32 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
b_ih_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_ih_V_address0),
    .ce0(b_ih_V_ce0),
    .we0(b_ih_V_we0),
    .d0(b_ih_V_d0),
    .q0(b_ih_V_q0)
);

sampleRNN_GRU_w_icud #(
    .DataWidth( 32 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
w_hh_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(w_hh_V_address0),
    .ce0(w_hh_V_ce0),
    .we0(w_hh_V_we0),
    .d0(w_hh_V_d0),
    .q0(w_hh_V_q0),
    .address1(w_hh_V_address1),
    .ce1(w_hh_V_ce1),
    .q1(w_hh_V_q1)
);

sampleRNN_GRU_b_idEe #(
    .DataWidth( 32 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
b_hh_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_hh_V_address0),
    .ce0(b_hh_V_ce0),
    .we0(b_hh_V_we0),
    .d0(b_hh_V_d0),
    .q0(b_hh_V_q0)
);

sampleRNN_GRU_uitg8j #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sampleRNN_GRU_uitg8j_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp32_V_1_reg_5555),
    .ce(grp_fu_1019_ce),
    .dout(grp_fu_1019_p1)
);

sampleRNN_GRU_fpehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sampleRNN_GRU_fpehbi_U2(
    .din0(input_data_0_data_out),
    .dout(grp_fu_1022_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state7)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state12) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state12)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state17) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state17)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state17);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state22) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state22)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state22);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp4_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state27) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state27)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state27);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp5_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state46) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((exitcond7_fu_2754_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state46)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state46);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter10 <= ap_enable_reg_pp6_iter9;
        end else if (((exitcond7_fu_2754_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            ap_enable_reg_pp6_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter5 <= ap_enable_reg_pp6_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter6 <= ap_enable_reg_pp6_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter7 <= ap_enable_reg_pp6_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter8 <= ap_enable_reg_pp6_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter9 <= ap_enable_reg_pp6_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        input_data_0_sel_rd <= 1'b0;
    end else begin
        if (((input_data_0_ack_out == 1'b1) & (input_data_0_vld_out == 1'b1))) begin
            input_data_0_sel_rd <= ~input_data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        input_data_0_sel_wr <= 1'b0;
    end else begin
        if (((input_data_0_ack_in == 1'b1) & (input_data_0_vld_in == 1'b1))) begin
            input_data_0_sel_wr <= ~input_data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        input_data_0_state <= 2'd0;
    end else begin
        if ((((input_data_0_state == 2'd2) & (input_data_0_vld_in == 1'b0)) | ((input_data_0_state == 2'd3) & (input_data_0_vld_in == 1'b0) & (input_data_0_ack_out == 1'b1)))) begin
            input_data_0_state <= 2'd2;
        end else if ((((input_data_0_state == 2'd1) & (input_data_0_ack_out == 1'b0)) | ((input_data_0_state == 2'd3) & (input_data_0_ack_out == 1'b0) & (input_data_0_vld_in == 1'b1)))) begin
            input_data_0_state <= 2'd1;
        end else if (((~((input_data_0_vld_in == 1'b0) & (input_data_0_ack_out == 1'b1)) & ~((input_data_0_ack_out == 1'b0) & (input_data_0_vld_in == 1'b1)) & (input_data_0_state == 2'd3)) | ((input_data_0_state == 2'd1) & (input_data_0_ack_out == 1'b1)) | ((input_data_0_state == 2'd2) & (input_data_0_vld_in == 1'b1)))) begin
            input_data_0_state <= 2'd3;
        end else begin
            input_data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        input_last_0_state <= 2'd0;
    end else begin
        if ((((input_last_0_state == 2'd2) & (input_last_0_vld_in == 1'b0)) | ((input_last_0_state == 2'd3) & (input_last_0_vld_in == 1'b0) & (input_last_0_ack_out == 1'b1)))) begin
            input_last_0_state <= 2'd2;
        end else if ((((input_last_0_state == 2'd1) & (input_last_0_ack_out == 1'b0)) | ((input_last_0_state == 2'd3) & (input_last_0_ack_out == 1'b0) & (input_last_0_vld_in == 1'b1)))) begin
            input_last_0_state <= 2'd1;
        end else if (((~((input_last_0_vld_in == 1'b0) & (input_last_0_ack_out == 1'b1)) & ~((input_last_0_ack_out == 1'b0) & (input_last_0_vld_in == 1'b1)) & (input_last_0_state == 2'd3)) | ((input_last_0_state == 2'd1) & (input_last_0_ack_out == 1'b1)) | ((input_last_0_state == 2'd2) & (input_last_0_vld_in == 1'b1)))) begin
            input_last_0_state <= 2'd3;
        end else begin
            input_last_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_data_1_sel_rd <= 1'b0;
    end else begin
        if (((output_data_1_ack_out == 1'b1) & (output_data_1_vld_out == 1'b1))) begin
            output_data_1_sel_rd <= ~output_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_data_1_sel_wr <= 1'b0;
    end else begin
        if (((output_data_1_ack_in == 1'b1) & (output_data_1_vld_in == 1'b1))) begin
            output_data_1_sel_wr <= ~output_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_data_1_state <= 2'd0;
    end else begin
        if ((((output_data_1_state == 2'd2) & (output_data_1_vld_in == 1'b0)) | ((output_data_1_state == 2'd3) & (output_data_1_vld_in == 1'b0) & (output_data_1_ack_out == 1'b1)))) begin
            output_data_1_state <= 2'd2;
        end else if ((((output_data_1_state == 2'd1) & (output_data_1_ack_out == 1'b0)) | ((output_data_1_state == 2'd3) & (output_data_1_ack_out == 1'b0) & (output_data_1_vld_in == 1'b1)))) begin
            output_data_1_state <= 2'd1;
        end else if (((~((output_data_1_vld_in == 1'b0) & (output_data_1_ack_out == 1'b1)) & ~((output_data_1_ack_out == 1'b0) & (output_data_1_vld_in == 1'b1)) & (output_data_1_state == 2'd3)) | ((output_data_1_state == 2'd1) & (output_data_1_ack_out == 1'b1)) | ((output_data_1_state == 2'd2) & (output_data_1_vld_in == 1'b1)))) begin
            output_data_1_state <= 2'd3;
        end else begin
            output_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_last_1_sel_rd <= 1'b0;
    end else begin
        if (((output_last_1_ack_out == 1'b1) & (output_last_1_vld_out == 1'b1))) begin
            output_last_1_sel_rd <= ~output_last_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_last_1_sel_wr <= 1'b0;
    end else begin
        if (((output_last_1_ack_in == 1'b1) & (output_last_1_vld_in == 1'b1))) begin
            output_last_1_sel_wr <= ~output_last_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_last_1_state <= 2'd0;
    end else begin
        if ((((output_last_1_state == 2'd2) & (output_last_1_vld_in == 1'b0)) | ((output_last_1_state == 2'd3) & (output_last_1_vld_in == 1'b0) & (output_last_1_ack_out == 1'b1)))) begin
            output_last_1_state <= 2'd2;
        end else if ((((output_last_1_state == 2'd1) & (output_last_1_ack_out == 1'b0)) | ((output_last_1_state == 2'd3) & (output_last_1_ack_out == 1'b0) & (output_last_1_vld_in == 1'b1)))) begin
            output_last_1_state <= 2'd1;
        end else if (((~((output_last_1_vld_in == 1'b0) & (output_last_1_ack_out == 1'b1)) & ~((output_last_1_ack_out == 1'b0) & (output_last_1_vld_in == 1'b1)) & (output_last_1_state == 2'd3)) | ((output_last_1_state == 2'd1) & (output_last_1_ack_out == 1'b1)) | ((output_last_1_state == 2'd2) & (output_last_1_vld_in == 1'b1)))) begin
            output_last_1_state <= 2'd3;
        end else begin
            output_last_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        counter_reg_950 <= 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        counter_reg_950 <= counter_1_reg_4893;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        counter_s_reg_997 <= tmp_136_15_reg_5424;
    end else if (((exitcond7_fu_2754_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        counter_s_reg_997 <= counter_reg_950;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_1_reg_879 <= 7'd0;
    end else if (((exitcond2_reg_4547 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_879 <= i_9_reg_4551;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_2_reg_891 <= 14'd0;
    end else if (((exitcond3_reg_4612 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_2_reg_891 <= i_10_reg_4616;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_3_reg_903 <= 14'd0;
    end else if (((exitcond4_reg_4677 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_3_reg_903 <= i_11_reg_4681;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_4_reg_915 <= 8'd0;
    end else if (((exitcond5_reg_4742 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_4_reg_915 <= i_12_reg_4746;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_5_reg_927 <= 8'd0;
    end else if (((exitcond6_reg_4807 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_5_reg_927 <= i_13_reg_4811;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_6_reg_939 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        i_6_reg_939 <= i_15_reg_4881;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_2754_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        i_7_reg_1008 <= 9'd0;
    end else if (((exitcond_fu_4348_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        i_7_reg_1008 <= i_14_fu_4354_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_867 <= 7'd0;
    end else if (((exitcond1_reg_4482 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_867 <= i_8_reg_4486;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        j_reg_986 <= j_1_15_reg_4959;
    end else if (((exitcond7_fu_2754_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        j_reg_986 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        p_Val2_6_reg_974 <= {{p_Val2_23_14_fu_4311_p2[47:16]}};
    end else if (((exitcond7_fu_2754_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        p_Val2_6_reg_974 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        p_Val2_9_reg_962 <= {{p_Val2_20_14_fu_4278_p2[47:16]}};
    end else if (((exitcond7_fu_2754_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        p_Val2_9_reg_962 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_1030 <= w_ih_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_1030 <= w_ih_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_1035 <= x_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_1035 <= x_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_1040 <= w_hh_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_1040 <= w_hh_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_1045 <= h0_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_1045 <= h0_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_1050 <= w_ih_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_1050 <= w_ih_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_1055 <= x_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_1055 <= x_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_1060 <= w_hh_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_1060 <= w_hh_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_1065 <= h0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_1065 <= h0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_2754_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        counter_1_reg_4893 <= counter_1_fu_2770_p2;
        tmp_91_reg_4886[7 : 0] <= tmp_91_fu_2766_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond1_reg_4482 <= exitcond1_fu_1070_p2;
        exitcond1_reg_4482_pp0_iter1_reg <= exitcond1_reg_4482;
        i_reg_867_pp0_iter1_reg <= i_reg_867;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond1_reg_4482_pp0_iter2_reg <= exitcond1_reg_4482_pp0_iter1_reg;
        i_reg_867_pp0_iter2_reg <= i_reg_867_pp0_iter1_reg;
        isneg_reg_4491_pp0_iter2_reg <= isneg_reg_4491;
        tmp_9_reg_4507_pp0_iter2_reg <= tmp_9_reg_4507;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond2_reg_4547 <= exitcond2_fu_1350_p2;
        exitcond2_reg_4547_pp1_iter1_reg <= exitcond2_reg_4547;
        i_1_reg_879_pp1_iter1_reg <= i_1_reg_879;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond2_reg_4547_pp1_iter2_reg <= exitcond2_reg_4547_pp1_iter1_reg;
        i_1_reg_879_pp1_iter2_reg <= i_1_reg_879_pp1_iter1_reg;
        isneg_1_reg_4556_pp1_iter2_reg <= isneg_1_reg_4556;
        tmp_15_reg_4572_pp1_iter2_reg <= tmp_15_reg_4572;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond3_reg_4612 <= exitcond3_fu_1630_p2;
        exitcond3_reg_4612_pp2_iter1_reg <= exitcond3_reg_4612;
        i_2_reg_891_pp2_iter1_reg <= i_2_reg_891;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond3_reg_4612_pp2_iter2_reg <= exitcond3_reg_4612_pp2_iter1_reg;
        i_2_reg_891_pp2_iter2_reg <= i_2_reg_891_pp2_iter1_reg;
        isneg_2_reg_4621_pp2_iter2_reg <= isneg_2_reg_4621;
        tmp_30_reg_4637_pp2_iter2_reg <= tmp_30_reg_4637;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond4_reg_4677 <= exitcond4_fu_1910_p2;
        exitcond4_reg_4677_pp3_iter1_reg <= exitcond4_reg_4677;
        i_3_reg_903_pp3_iter1_reg <= i_3_reg_903;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        exitcond4_reg_4677_pp3_iter2_reg <= exitcond4_reg_4677_pp3_iter1_reg;
        i_3_reg_903_pp3_iter2_reg <= i_3_reg_903_pp3_iter1_reg;
        isneg_3_reg_4686_pp3_iter2_reg <= isneg_3_reg_4686;
        tmp_48_reg_4702_pp3_iter2_reg <= tmp_48_reg_4702;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond5_reg_4742 <= exitcond5_fu_2190_p2;
        exitcond5_reg_4742_pp4_iter1_reg <= exitcond5_reg_4742;
        i_4_reg_915_pp4_iter1_reg <= i_4_reg_915;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        exitcond5_reg_4742_pp4_iter2_reg <= exitcond5_reg_4742_pp4_iter1_reg;
        i_4_reg_915_pp4_iter2_reg <= i_4_reg_915_pp4_iter1_reg;
        isneg_4_reg_4751_pp4_iter2_reg <= isneg_4_reg_4751;
        tmp_65_reg_4767_pp4_iter2_reg <= tmp_65_reg_4767;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        exitcond6_reg_4807 <= exitcond6_fu_2470_p2;
        exitcond6_reg_4807_pp5_iter1_reg <= exitcond6_reg_4807;
        i_5_reg_927_pp5_iter1_reg <= i_5_reg_927;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        exitcond6_reg_4807_pp5_iter2_reg <= exitcond6_reg_4807_pp5_iter1_reg;
        i_5_reg_927_pp5_iter2_reg <= i_5_reg_927_pp5_iter1_reg;
        isneg_5_reg_4816_pp5_iter2_reg <= isneg_5_reg_4816;
        tmp_80_reg_4832_pp5_iter2_reg <= tmp_80_reg_4832;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        exitcond_reg_5509 <= exitcond_fu_4348_p2;
        exitcond_reg_5509_pp6_iter1_reg <= exitcond_reg_5509;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        exitcond_reg_5509_pp6_iter2_reg <= exitcond_reg_5509_pp6_iter1_reg;
        exitcond_reg_5509_pp6_iter3_reg <= exitcond_reg_5509_pp6_iter2_reg;
        exitcond_reg_5509_pp6_iter4_reg <= exitcond_reg_5509_pp6_iter3_reg;
        exitcond_reg_5509_pp6_iter5_reg <= exitcond_reg_5509_pp6_iter4_reg;
        exitcond_reg_5509_pp6_iter6_reg <= exitcond_reg_5509_pp6_iter5_reg;
        exitcond_reg_5509_pp6_iter7_reg <= exitcond_reg_5509_pp6_iter6_reg;
        exitcond_reg_5509_pp6_iter8_reg <= exitcond_reg_5509_pp6_iter7_reg;
        exitcond_reg_5509_pp6_iter9_reg <= exitcond_reg_5509_pp6_iter8_reg;
        is_neg_reg_5534_pp6_iter2_reg <= is_neg_reg_5534;
        is_neg_reg_5534_pp6_iter3_reg <= is_neg_reg_5534_pp6_iter2_reg;
        is_neg_reg_5534_pp6_iter4_reg <= is_neg_reg_5534_pp6_iter3_reg;
        is_neg_reg_5534_pp6_iter5_reg <= is_neg_reg_5534_pp6_iter4_reg;
        is_neg_reg_5534_pp6_iter6_reg <= is_neg_reg_5534_pp6_iter5_reg;
        is_neg_reg_5534_pp6_iter7_reg <= is_neg_reg_5534_pp6_iter6_reg;
        is_neg_reg_5534_pp6_iter8_reg <= is_neg_reg_5534_pp6_iter7_reg;
        last_load_reg_5545_pp6_iter2_reg <= last_load_reg_5545;
        last_load_reg_5545_pp6_iter3_reg <= last_load_reg_5545_pp6_iter2_reg;
        last_load_reg_5545_pp6_iter4_reg <= last_load_reg_5545_pp6_iter3_reg;
        last_load_reg_5545_pp6_iter5_reg <= last_load_reg_5545_pp6_iter4_reg;
        last_load_reg_5545_pp6_iter6_reg <= last_load_reg_5545_pp6_iter5_reg;
        last_load_reg_5545_pp6_iter7_reg <= last_load_reg_5545_pp6_iter6_reg;
        last_load_reg_5545_pp6_iter8_reg <= last_load_reg_5545_pp6_iter7_reg;
        tmp_159_reg_5560_pp6_iter3_reg <= tmp_159_reg_5560;
        tmp_159_reg_5560_pp6_iter4_reg <= tmp_159_reg_5560_pp6_iter3_reg;
        tmp_159_reg_5560_pp6_iter5_reg <= tmp_159_reg_5560_pp6_iter4_reg;
        tmp_159_reg_5560_pp6_iter6_reg <= tmp_159_reg_5560_pp6_iter5_reg;
        tmp_159_reg_5560_pp6_iter7_reg <= tmp_159_reg_5560_pp6_iter6_reg;
        tmp_159_reg_5560_pp6_iter8_reg <= tmp_159_reg_5560_pp6_iter7_reg;
        tmp_95_reg_5550_pp6_iter3_reg <= tmp_95_reg_5550;
        tmp_95_reg_5550_pp6_iter4_reg <= tmp_95_reg_5550_pp6_iter3_reg;
        tmp_95_reg_5550_pp6_iter5_reg <= tmp_95_reg_5550_pp6_iter4_reg;
        tmp_95_reg_5550_pp6_iter6_reg <= tmp_95_reg_5550_pp6_iter5_reg;
        tmp_95_reg_5550_pp6_iter7_reg <= tmp_95_reg_5550_pp6_iter6_reg;
        tmp_95_reg_5550_pp6_iter8_reg <= tmp_95_reg_5550_pp6_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_4547 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exp_tmp_V_1_reg_4562 <= {{ireg_V_1_fu_1362_p1[62:52]}};
        isneg_1_reg_4556 <= ireg_V_1_fu_1362_p1[32'd63];
        tmp_15_reg_4572 <= tmp_15_fu_1392_p2;
        tmp_50_reg_4567 <= tmp_50_fu_1388_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_4612 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exp_tmp_V_2_reg_4627 <= {{ireg_V_2_fu_1642_p1[62:52]}};
        isneg_2_reg_4621 <= ireg_V_2_fu_1642_p1[32'd63];
        tmp_30_reg_4637 <= tmp_30_fu_1672_p2;
        tmp_77_reg_4632 <= tmp_77_fu_1668_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_4677 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exp_tmp_V_3_reg_4692 <= {{ireg_V_3_fu_1922_p1[62:52]}};
        isneg_3_reg_4686 <= ireg_V_3_fu_1922_p1[32'd63];
        tmp_142_reg_4697 <= tmp_142_fu_1948_p1;
        tmp_48_reg_4702 <= tmp_48_fu_1952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_4742 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exp_tmp_V_4_reg_4757 <= {{ireg_V_4_fu_2202_p1[62:52]}};
        isneg_4_reg_4751 <= ireg_V_4_fu_2202_p1[32'd63];
        tmp_148_reg_4762 <= tmp_148_fu_2228_p1;
        tmp_65_reg_4767 <= tmp_65_fu_2232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_reg_4807 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        exp_tmp_V_5_reg_4822 <= {{ireg_V_5_fu_2482_p1[62:52]}};
        isneg_5_reg_4816 <= ireg_V_5_fu_2482_p1[32'd63];
        tmp_154_reg_4827 <= tmp_154_fu_2508_p1;
        tmp_80_reg_4832 <= tmp_80_fu_2512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_4482 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_tmp_V_reg_4497 <= {{ireg_V_fu_1082_p1[62:52]}};
        isneg_reg_4491 <= ireg_V_fu_1082_p1[32'd63];
        tmp_22_reg_4502 <= tmp_22_fu_1108_p1;
        tmp_9_reg_4507 <= tmp_9_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_10_reg_4616 <= i_10_fu_1636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_11_reg_4681 <= i_11_fu_1916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_12_reg_4746 <= i_12_fu_2196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_13_reg_4811 <= i_13_fu_2476_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        i_15_reg_4881 <= i_15_fu_2760_p2;
        i_6_cast_reg_4872[7 : 0] <= i_6_cast_fu_2750_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_8_reg_4486 <= i_8_fu_1076_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_9_reg_4551 <= i_9_fu_1356_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((input_data_0_load_A == 1'b1)) begin
        input_data_0_payload_A <= input_r_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((input_data_0_load_B == 1'b1)) begin
        input_data_0_payload_B <= input_r_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_5509 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        is_neg_reg_5534 <= out1_V_q0[32'd31];
        last_load_reg_5545 <= last_q0;
        tmp_96_reg_5540 <= tmp_96_fu_4374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_2776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        j_1_15_reg_4959 <= j_1_15_fu_2822_p2;
        tmp_160_reg_4921 <= tmp_160_fu_2800_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_4677_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        man_V_11_reg_4708 <= man_V_11_fu_1978_p3;
        sel_tmp30_reg_4730 <= sel_tmp30_fu_2054_p2;
        sel_tmp35_reg_4736 <= sel_tmp35_fu_2072_p2;
        sh_amt_3_reg_4713 <= sh_amt_3_fu_2009_p3;
        tmp_143_reg_4724 <= tmp_143_fu_2023_p1;
        tmp_53_reg_4719 <= tmp_53_fu_2017_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_reg_4742_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        man_V_14_reg_4773 <= man_V_14_fu_2258_p3;
        sel_tmp39_reg_4795 <= sel_tmp39_fu_2334_p2;
        sel_tmp44_reg_4801 <= sel_tmp44_fu_2352_p2;
        sh_amt_4_reg_4778 <= sh_amt_4_fu_2289_p3;
        tmp_149_reg_4789 <= tmp_149_fu_2303_p1;
        tmp_69_reg_4784 <= tmp_69_fu_2297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_reg_4807_pp5_iter1_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        man_V_17_reg_4838 <= man_V_17_fu_2538_p3;
        sel_tmp48_reg_4860 <= sel_tmp48_fu_2614_p2;
        sel_tmp53_reg_4866 <= sel_tmp53_fu_2632_p2;
        sh_amt_5_reg_4843 <= sh_amt_5_fu_2569_p3;
        tmp_155_reg_4854 <= tmp_155_fu_2583_p1;
        tmp_84_reg_4849 <= tmp_84_fu_2577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_4482_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        man_V_2_reg_4513 <= man_V_2_fu_1138_p3;
        sel_tmp4_reg_4541 <= sel_tmp4_fu_1232_p2;
        sel_tmp7_reg_4535 <= sel_tmp7_fu_1214_p2;
        sh_amt_reg_4518 <= sh_amt_fu_1169_p3;
        tmp_24_reg_4529 <= tmp_24_fu_1183_p1;
        tmp_6_reg_4524 <= tmp_6_fu_1177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_4547_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        man_V_5_reg_4578 <= man_V_5_fu_1418_p3;
        sel_tmp12_reg_4600 <= sel_tmp12_fu_1494_p2;
        sel_tmp17_reg_4606 <= sel_tmp17_fu_1512_p2;
        sh_amt_1_reg_4583 <= sh_amt_1_fu_1449_p3;
        tmp_21_reg_4589 <= tmp_21_fu_1457_p2;
        tmp_56_reg_4594 <= tmp_56_fu_1463_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_4612_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        man_V_8_reg_4643 <= man_V_8_fu_1698_p3;
        sel_tmp21_reg_4665 <= sel_tmp21_fu_1774_p2;
        sel_tmp26_reg_4671 <= sel_tmp26_fu_1792_p2;
        sh_amt_2_reg_4648 <= sh_amt_2_fu_1729_p3;
        tmp_38_reg_4654 <= tmp_38_fu_1737_p2;
        tmp_88_reg_4659 <= tmp_88_fu_1743_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((output_data_1_load_A == 1'b1)) begin
        output_data_1_payload_A <= p_03_i_fu_4474_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((output_data_1_load_B == 1'b1)) begin
        output_data_1_payload_B <= p_03_i_fu_4474_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((output_last_1_load_A == 1'b1)) begin
        output_last_1_payload_A <= last_load_reg_5545_pp6_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((output_last_1_load_B == 1'b1)) begin
        output_last_1_payload_B <= last_load_reg_5545_pp6_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_5509 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        p_Val2_10_reg_5528 <= out1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        p_Val2_12_reg_5019 <= p_Val2_12_fu_2896_p2;
        p_Val2_19_1_reg_5024 <= p_Val2_19_1_fu_2910_p2;
        p_Val2_22_1_reg_5029 <= p_Val2_22_1_fu_2924_p2;
        p_Val2_8_reg_5014 <= p_Val2_8_fu_2882_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        p_Val2_19_10_reg_5374 <= p_Val2_19_10_fu_3872_p2;
        p_Val2_19_s_reg_5354 <= p_Val2_19_s_fu_3824_p2;
        p_Val2_22_10_reg_5379 <= p_Val2_22_10_fu_3886_p2;
        p_Val2_22_s_reg_5364 <= p_Val2_22_s_fu_3848_p2;
        tmp_126_reg_5359 <= {{p_Val2_20_9_fu_3788_p2[47:16]}};
        tmp_127_reg_5369 <= {{p_Val2_23_9_fu_3811_p2[47:16]}};
        tmp_136_15_reg_5424 <= tmp_136_15_fu_3938_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        p_Val2_19_11_reg_5429 <= p_Val2_19_11_fu_4022_p2;
        p_Val2_19_12_reg_5449 <= p_Val2_19_12_fu_4070_p2;
        p_Val2_22_11_reg_5439 <= p_Val2_22_11_fu_4046_p2;
        p_Val2_22_12_reg_5454 <= p_Val2_22_12_fu_4084_p2;
        tmp_130_reg_5434 <= {{p_Val2_20_10_fu_3986_p2[47:16]}};
        tmp_131_reg_5444 <= {{p_Val2_23_10_fu_4009_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        p_Val2_19_13_reg_5459 <= p_Val2_19_13_fu_4168_p2;
        p_Val2_19_14_reg_5479 <= p_Val2_19_14_fu_4216_p2;
        p_Val2_22_13_reg_5469 <= p_Val2_22_13_fu_4192_p2;
        p_Val2_22_14_reg_5484 <= p_Val2_22_14_fu_4230_p2;
        tmp_134_reg_5464 <= {{p_Val2_20_12_fu_4132_p2[47:16]}};
        tmp_135_reg_5474 <= {{p_Val2_23_12_fu_4155_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        p_Val2_19_2_reg_5074 <= p_Val2_19_2_fu_3056_p2;
        p_Val2_19_3_reg_5094 <= p_Val2_19_3_fu_3104_p2;
        p_Val2_22_2_reg_5084 <= p_Val2_22_2_fu_3080_p2;
        p_Val2_22_3_reg_5099 <= p_Val2_22_3_fu_3118_p2;
        tmp_110_reg_5079 <= {{p_Val2_20_1_fu_3020_p2[47:16]}};
        tmp_111_reg_5089 <= {{p_Val2_23_1_fu_3043_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        p_Val2_19_4_reg_5144 <= p_Val2_19_4_fu_3248_p2;
        p_Val2_19_5_reg_5164 <= p_Val2_19_5_fu_3296_p2;
        p_Val2_22_4_reg_5154 <= p_Val2_22_4_fu_3272_p2;
        p_Val2_22_5_reg_5169 <= p_Val2_22_5_fu_3310_p2;
        tmp_114_reg_5149 <= {{p_Val2_20_3_fu_3212_p2[47:16]}};
        tmp_115_reg_5159 <= {{p_Val2_23_3_fu_3235_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        p_Val2_19_6_reg_5214 <= p_Val2_19_6_fu_3440_p2;
        p_Val2_19_7_reg_5234 <= p_Val2_19_7_fu_3488_p2;
        p_Val2_22_6_reg_5224 <= p_Val2_22_6_fu_3464_p2;
        p_Val2_22_7_reg_5239 <= p_Val2_22_7_fu_3502_p2;
        tmp_118_reg_5219 <= {{p_Val2_20_5_fu_3404_p2[47:16]}};
        tmp_119_reg_5229 <= {{p_Val2_23_5_fu_3427_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        p_Val2_19_8_reg_5284 <= p_Val2_19_8_fu_3632_p2;
        p_Val2_19_9_reg_5304 <= p_Val2_19_9_fu_3680_p2;
        p_Val2_22_8_reg_5294 <= p_Val2_22_8_fu_3656_p2;
        p_Val2_22_9_reg_5309 <= p_Val2_22_9_fu_3694_p2;
        tmp_122_reg_5289 <= {{p_Val2_20_7_fu_3596_p2[47:16]}};
        tmp_123_reg_5299 <= {{p_Val2_23_7_fu_3619_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        p_Val2_19_reg_5499 <= b_ih_V_q0;
        p_Val2_20_reg_5504 <= b_hh_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_5509_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        tmp32_V_1_reg_5555 <= tmp32_V_1_fu_4408_p2;
        tmp_159_reg_5560 <= tmp_159_fu_4414_p1;
        tmp_95_reg_5550 <= tmp_95_fu_4380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_95_reg_5550_pp6_iter7_reg == 1'd0) & (exitcond_reg_5509_pp6_iter7_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        tmp32_V_reg_5565 <= tmp32_V_fu_4418_p1;
        tmp_97_reg_5570 <= tmp_97_fu_4432_p2;
    end
end

always @ (*) begin
    if ((exitcond1_fu_1070_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_1350_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_1630_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_1910_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_fu_2190_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond6_fu_2470_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_4348_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state46 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state46 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter10 == 1'b0) & (ap_enable_reg_pp6_iter9 == 1'b0) & (ap_enable_reg_pp6_iter8 == 1'b0) & (ap_enable_reg_pp6_iter7 == 1'b0) & (ap_enable_reg_pp6_iter6 == 1'b0) & (ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_4547 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_1_phi_fu_883_p4 = i_9_reg_4551;
    end else begin
        ap_phi_mux_i_1_phi_fu_883_p4 = i_1_reg_879;
    end
end

always @ (*) begin
    if (((exitcond3_reg_4612 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_2_phi_fu_895_p4 = i_10_reg_4616;
    end else begin
        ap_phi_mux_i_2_phi_fu_895_p4 = i_2_reg_891;
    end
end

always @ (*) begin
    if (((exitcond4_reg_4677 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_i_3_phi_fu_907_p4 = i_11_reg_4681;
    end else begin
        ap_phi_mux_i_3_phi_fu_907_p4 = i_3_reg_903;
    end
end

always @ (*) begin
    if (((exitcond5_reg_4742 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_i_4_phi_fu_919_p4 = i_12_reg_4746;
    end else begin
        ap_phi_mux_i_4_phi_fu_919_p4 = i_4_reg_915;
    end
end

always @ (*) begin
    if (((exitcond6_reg_4807 == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        ap_phi_mux_i_5_phi_fu_931_p4 = i_13_reg_4811;
    end else begin
        ap_phi_mux_i_5_phi_fu_931_p4 = i_5_reg_927;
    end
end

always @ (*) begin
    if (((exitcond1_reg_4482 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_871_p4 = i_8_reg_4486;
    end else begin
        ap_phi_mux_i_phi_fu_871_p4 = i_reg_867;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        b_hh_V_address0 = tmp_91_reg_4886;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter3 == 1'b1))) begin
        b_hh_V_address0 = tmp_76_fu_2638_p1;
    end else begin
        b_hh_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter3 == 1'b1)))) begin
        b_hh_V_ce0 = 1'b1;
    end else begin
        b_hh_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond6_reg_4807_pp5_iter2_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter3 == 1'b1))) begin
        b_hh_V_we0 = 1'b1;
    end else begin
        b_hh_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        b_ih_V_address0 = tmp_91_reg_4886;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1))) begin
        b_ih_V_address0 = tmp_62_fu_2358_p1;
    end else begin
        b_ih_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1)))) begin
        b_ih_V_ce0 = 1'b1;
    end else begin
        b_ih_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_reg_4742_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1))) begin
        b_ih_V_we0 = 1'b1;
    end else begin
        b_ih_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        grp_fu_1019_ce = 1'b1;
    end else begin
        grp_fu_1019_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        h0_V_address0 = tmp_125_14_fu_3932_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        h0_V_address0 = tmp_125_12_fu_3740_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        h0_V_address0 = tmp_125_10_fu_3548_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        h0_V_address0 = tmp_125_9_fu_3356_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        h0_V_address0 = tmp_125_7_fu_3164_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        h0_V_address0 = tmp_125_5_fu_2970_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        h0_V_address0 = tmp_125_3_fu_2868_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        h0_V_address0 = tmp_105_fu_2788_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        h0_V_address0 = tmp_7_fu_1518_p1;
    end else begin
        h0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        h0_V_address1 = tmp_125_13_fu_3909_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        h0_V_address1 = tmp_125_11_fu_3717_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        h0_V_address1 = tmp_125_s_fu_3525_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        h0_V_address1 = tmp_125_8_fu_3333_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        h0_V_address1 = tmp_125_6_fu_3141_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        h0_V_address1 = tmp_125_4_fu_2947_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        h0_V_address1 = tmp_125_2_fu_2845_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        h0_V_address1 = tmp_125_1_fu_2816_p1;
    end else begin
        h0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        h0_V_ce0 = 1'b1;
    end else begin
        h0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        h0_V_ce1 = 1'b1;
    end else begin
        h0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_4547_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        h0_V_we0 = 1'b1;
    end else begin
        h0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond6_reg_4807 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((exitcond5_reg_4742 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((exitcond4_reg_4677 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((exitcond3_reg_4612 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond2_reg_4547 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1_reg_4482 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_data_0_ack_out = 1'b1;
    end else begin
        input_data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((input_data_0_sel == 1'b1)) begin
        input_data_0_data_out = input_data_0_payload_B;
    end else begin
        input_data_0_data_out = input_data_0_payload_A;
    end
end

always @ (*) begin
    if ((((exitcond6_reg_4807 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((exitcond5_reg_4742 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((exitcond4_reg_4677 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((exitcond3_reg_4612 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond2_reg_4547 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1_reg_4482 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_last_0_ack_out = 1'b1;
    end else begin
        input_last_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond6_reg_4807 == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((exitcond5_reg_4742 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((exitcond4_reg_4677 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((exitcond3_reg_4612 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond2_reg_4547 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1_reg_4482 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_r_TDATA_blk_n = input_data_0_state[1'd0];
    end else begin
        input_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        last_ce0 = 1'b1;
    end else begin
        last_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        out1_V_address0 = tmp_94_fu_4360_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        out1_V_address0 = tmp_91_reg_4886;
    end else begin
        out1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        out1_V_ce0 = 1'b1;
    end else begin
        out1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        out1_V_ce1 = 1'b1;
    end else begin
        out1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        out1_V_we0 = 1'b1;
    end else begin
        out1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        out1_V_we1 = 1'b1;
    end else begin
        out1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((output_data_1_sel == 1'b1)) begin
        output_data_1_data_out = output_data_1_payload_B;
    end else begin
        output_data_1_data_out = output_data_1_payload_A;
    end
end

always @ (*) begin
    if (((exitcond_reg_5509_pp6_iter8_reg == 1'd0) & (ap_enable_reg_pp6_iter9 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        output_data_1_vld_in = 1'b1;
    end else begin
        output_data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((output_last_1_sel == 1'b1)) begin
        output_last_1_data_out = output_last_1_payload_B;
    end else begin
        output_last_1_data_out = output_last_1_payload_A;
    end
end

always @ (*) begin
    if (((exitcond_reg_5509_pp6_iter8_reg == 1'd0) & (ap_enable_reg_pp6_iter9 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        output_last_1_vld_in = 1'b1;
    end else begin
        output_last_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_reg_5509_pp6_iter9_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter10 == 1'b1)) | ((exitcond_reg_5509_pp6_iter8_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter9 == 1'b1)))) begin
        output_r_TDATA_blk_n = output_data_1_state[1'd1];
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        w_hh_V_address0 = tmp_124_14_fu_3926_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        w_hh_V_address0 = tmp_124_12_fu_3734_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        w_hh_V_address0 = tmp_124_10_fu_3542_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        w_hh_V_address0 = tmp_124_9_fu_3350_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        w_hh_V_address0 = tmp_124_7_fu_3158_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        w_hh_V_address0 = tmp_124_5_fu_2964_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        w_hh_V_address0 = tmp_124_3_fu_2862_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        w_hh_V_address0 = tmp_104_fu_2782_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        w_hh_V_address0 = tmp_45_fu_2078_p1;
    end else begin
        w_hh_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        w_hh_V_address1 = tmp_124_13_fu_3903_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        w_hh_V_address1 = tmp_124_11_fu_3711_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        w_hh_V_address1 = tmp_124_s_fu_3519_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        w_hh_V_address1 = tmp_124_8_fu_3327_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        w_hh_V_address1 = tmp_124_6_fu_3135_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        w_hh_V_address1 = tmp_124_4_fu_2941_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        w_hh_V_address1 = tmp_124_2_fu_2839_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        w_hh_V_address1 = tmp_124_1_fu_2810_p1;
    end else begin
        w_hh_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)))) begin
        w_hh_V_ce0 = 1'b1;
    end else begin
        w_hh_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        w_hh_V_ce1 = 1'b1;
    end else begin
        w_hh_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_reg_4677_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        w_hh_V_we0 = 1'b1;
    end else begin
        w_hh_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        w_ih_V_address0 = tmp_124_14_fu_3926_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        w_ih_V_address0 = tmp_124_12_fu_3734_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        w_ih_V_address0 = tmp_124_10_fu_3542_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        w_ih_V_address0 = tmp_124_9_fu_3350_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        w_ih_V_address0 = tmp_124_7_fu_3158_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        w_ih_V_address0 = tmp_124_5_fu_2964_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        w_ih_V_address0 = tmp_124_3_fu_2862_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        w_ih_V_address0 = tmp_104_fu_2782_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        w_ih_V_address0 = tmp_25_fu_1798_p1;
    end else begin
        w_ih_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        w_ih_V_address1 = tmp_124_13_fu_3903_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        w_ih_V_address1 = tmp_124_11_fu_3711_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        w_ih_V_address1 = tmp_124_s_fu_3519_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        w_ih_V_address1 = tmp_124_8_fu_3327_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        w_ih_V_address1 = tmp_124_6_fu_3135_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        w_ih_V_address1 = tmp_124_4_fu_2941_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        w_ih_V_address1 = tmp_124_2_fu_2839_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        w_ih_V_address1 = tmp_124_1_fu_2810_p1;
    end else begin
        w_ih_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
        w_ih_V_ce0 = 1'b1;
    end else begin
        w_ih_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        w_ih_V_ce1 = 1'b1;
    end else begin
        w_ih_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_4612_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        w_ih_V_we0 = 1'b1;
    end else begin
        w_ih_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        x_V_address0 = tmp_125_14_fu_3932_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        x_V_address0 = tmp_125_12_fu_3740_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        x_V_address0 = tmp_125_10_fu_3548_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        x_V_address0 = tmp_125_9_fu_3356_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        x_V_address0 = tmp_125_7_fu_3164_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        x_V_address0 = tmp_125_5_fu_2970_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        x_V_address0 = tmp_125_3_fu_2868_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        x_V_address0 = tmp_105_fu_2788_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        x_V_address0 = tmp_fu_1238_p1;
    end else begin
        x_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        x_V_address1 = tmp_125_13_fu_3909_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        x_V_address1 = tmp_125_11_fu_3717_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        x_V_address1 = tmp_125_s_fu_3525_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        x_V_address1 = tmp_125_8_fu_3333_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        x_V_address1 = tmp_125_6_fu_3141_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        x_V_address1 = tmp_125_4_fu_2947_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        x_V_address1 = tmp_125_2_fu_2845_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        x_V_address1 = tmp_125_1_fu_2816_p1;
    end else begin
        x_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        x_V_ce0 = 1'b1;
    end else begin
        x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        x_V_ce1 = 1'b1;
    end else begin
        x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_4482_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        x_V_we0 = 1'b1;
    end else begin
        x_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond1_fu_1070_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((exitcond1_fu_1070_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((exitcond2_fu_1350_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((exitcond2_fu_1350_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((exitcond3_fu_1630_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((exitcond3_fu_1630_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((exitcond4_fu_1910_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((exitcond4_fu_1910_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((exitcond5_fu_2190_p2 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((exitcond5_fu_2190_p2 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((exitcond6_fu_2470_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter3 == 1'b1) & (ap_enable_reg_pp5_iter2 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((exitcond6_fu_2470_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (ap_enable_reg_pp5_iter2 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((exitcond7_fu_2754_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((exitcond8_fu_2776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((exitcond_fu_4348_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0)) & ~((ap_enable_reg_pp6_iter9 == 1'b0) & (ap_enable_reg_pp6_iter10 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter9 == 1'b0) & (ap_enable_reg_pp6_iter10 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((exitcond_fu_4348_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state57 : begin
            if ((~((output_last_1_ack_in == 1'b0) | (output_data_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_1425_p2 = (12'd1075 - tmp_12_fu_1398_p1);

assign F2_2_fu_1705_p2 = (12'd1075 - tmp_27_fu_1678_p1);

assign F2_3_fu_1985_p2 = (12'd1075 - tmp_46_fu_1958_p1);

assign F2_4_fu_2265_p2 = (12'd1075 - tmp_63_fu_2238_p1);

assign F2_5_fu_2545_p2 = (12'd1075 - tmp_78_fu_2518_p1);

assign F2_fu_1145_p2 = (12'd1075 - tmp_4_fu_1118_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond1_reg_4482 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond1_reg_4482 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((exitcond2_reg_4547 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((exitcond2_reg_4547 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((exitcond3_reg_4612 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((exitcond3_reg_4612 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((exitcond4_reg_4677 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((exitcond4_reg_4677 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((exitcond5_reg_4742 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((exitcond5_reg_4742 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((exitcond6_reg_4807 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((exitcond6_reg_4807 == 1'd0) & (input_data_0_vld_out == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = (((1'b1 == ap_block_state56_io) & (ap_enable_reg_pp6_iter10 == 1'b1)) | ((1'b1 == ap_block_state55_io) & (ap_enable_reg_pp6_iter9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = (((1'b1 == ap_block_state56_io) & (ap_enable_reg_pp6_iter10 == 1'b1)) | ((1'b1 == ap_block_state55_io) & (ap_enable_reg_pp6_iter9 == 1'b1)));
end

assign ap_block_state10_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp2_stage0_iter1 = ((exitcond3_reg_4612 == 1'd0) & (input_data_0_vld_out == 1'b0));
end

assign ap_block_state14_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp3_stage0_iter1 = ((exitcond4_reg_4677 == 1'd0) & (input_data_0_vld_out == 1'b0));
end

assign ap_block_state19_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp4_stage0_iter1 = ((exitcond5_reg_4742 == 1'd0) & (input_data_0_vld_out == 1'b0));
end

assign ap_block_state24_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state28_pp5_stage0_iter1 = ((exitcond6_reg_4807 == 1'd0) & (input_data_0_vld_out == 1'b0));
end

assign ap_block_state29_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((exitcond1_reg_4482 == 1'd0) & (input_data_0_vld_out == 1'b0));
end

assign ap_block_state46_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp6_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp6_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp6_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp6_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp6_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state55_io = ((exitcond_reg_5509_pp6_iter8_reg == 1'd0) & (output_data_1_ack_in == 1'b0));
end

assign ap_block_state55_pp6_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state56_io = ((exitcond_reg_5509_pp6_iter9_reg == 1'd0) & (output_data_1_ack_in == 1'b0));
end

assign ap_block_state56_pp6_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state57 = ((output_last_1_ack_in == 1'b0) | (output_data_1_ack_in == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp1_stage0_iter1 = ((exitcond2_reg_4547 == 1'd0) & (input_data_0_vld_out == 1'b0));
end

assign ap_block_state9_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b_hh_V_d0 = ((or_cond17_fu_2735_p2[0:0] === 1'b1) ? newSel22_fu_2727_p3 : 32'd0);

assign b_ih_V_d0 = ((or_cond14_fu_2455_p2[0:0] === 1'b1) ? newSel18_fu_2447_p3 : 32'd0);

assign counter_1_fu_2770_p2 = (counter_reg_950 + 14'd64);

assign exitcond1_fu_1070_p2 = ((ap_phi_mux_i_phi_fu_871_p4 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond2_fu_1350_p2 = ((ap_phi_mux_i_1_phi_fu_883_p4 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond3_fu_1630_p2 = ((ap_phi_mux_i_2_phi_fu_895_p4 == 14'd12288) ? 1'b1 : 1'b0);

assign exitcond4_fu_1910_p2 = ((ap_phi_mux_i_3_phi_fu_907_p4 == 14'd12288) ? 1'b1 : 1'b0);

assign exitcond5_fu_2190_p2 = ((ap_phi_mux_i_4_phi_fu_919_p4 == 8'd192) ? 1'b1 : 1'b0);

assign exitcond6_fu_2470_p2 = ((ap_phi_mux_i_5_phi_fu_931_p4 == 8'd192) ? 1'b1 : 1'b0);

assign exitcond7_fu_2754_p2 = ((i_6_reg_939 == 8'd192) ? 1'b1 : 1'b0);

assign exitcond8_fu_2776_p2 = ((j_reg_986 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_4348_p2 = ((i_7_reg_1008 == 9'd384) ? 1'b1 : 1'b0);

assign f_fu_4470_p1 = p_Result_8_fu_4459_p5;

assign h0_V_d0 = ((or_cond5_fu_1615_p2[0:0] === 1'b1) ? newSel6_fu_1607_p3 : 32'd0);

assign i_10_fu_1636_p2 = (ap_phi_mux_i_2_phi_fu_895_p4 + 14'd1);

assign i_11_fu_1916_p2 = (ap_phi_mux_i_3_phi_fu_907_p4 + 14'd1);

assign i_12_fu_2196_p2 = (ap_phi_mux_i_4_phi_fu_919_p4 + 8'd1);

assign i_13_fu_2476_p2 = (ap_phi_mux_i_5_phi_fu_931_p4 + 8'd1);

assign i_14_fu_4354_p2 = (i_7_reg_1008 + 9'd1);

assign i_15_fu_2760_p2 = (i_6_reg_939 + 8'd1);

assign i_6_cast_fu_2750_p1 = i_6_reg_939;

assign i_8_fu_1076_p2 = (ap_phi_mux_i_phi_fu_871_p4 + 7'd1);

assign i_9_fu_1356_p2 = (ap_phi_mux_i_1_phi_fu_883_p4 + 7'd1);

assign icmp1_fu_1477_p2 = ((tmp_58_fu_1467_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp2_fu_1757_p2 = ((tmp_90_fu_1747_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_2037_p2 = ((tmp_144_fu_2027_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp4_fu_2317_p2 = ((tmp_150_fu_2307_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp5_fu_2597_p2 = ((tmp_156_fu_2587_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1197_p2 = ((tmp_31_fu_1187_p4 == 7'd0) ? 1'b1 : 1'b0);

assign input_data_0_ack_in = input_data_0_state[1'd1];

assign input_data_0_load_A = (input_data_0_state_cmp_full & ~input_data_0_sel_wr);

assign input_data_0_load_B = (input_data_0_state_cmp_full & input_data_0_sel_wr);

assign input_data_0_sel = input_data_0_sel_rd;

assign input_data_0_state_cmp_full = ((input_data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign input_data_0_vld_in = input_r_TVALID;

assign input_data_0_vld_out = input_data_0_state[1'd0];

assign input_last_0_vld_in = input_r_TVALID;

assign input_r_TREADY = input_last_0_state[1'd1];

assign ireg_V_1_fu_1362_p1 = grp_fu_1022_p1;

assign ireg_V_2_fu_1642_p1 = grp_fu_1022_p1;

assign ireg_V_3_fu_1922_p1 = grp_fu_1022_p1;

assign ireg_V_4_fu_2202_p1 = grp_fu_1022_p1;

assign ireg_V_5_fu_2482_p1 = grp_fu_1022_p1;

assign ireg_V_fu_1082_p1 = grp_fu_1022_p1;

assign j_1_10_fu_3537_p2 = (tmp_160_reg_4921 | 6'd11);

assign j_1_11_fu_3706_p2 = (tmp_160_reg_4921 | 6'd12);

assign j_1_12_fu_3729_p2 = (tmp_160_reg_4921 | 6'd13);

assign j_1_13_fu_3898_p2 = (tmp_160_reg_4921 | 6'd14);

assign j_1_14_fu_3921_p2 = (tmp_160_reg_4921 | 6'd15);

assign j_1_15_fu_2822_p2 = (7'd16 + j_reg_986);

assign j_1_1_fu_2834_p2 = (tmp_160_reg_4921 | 6'd2);

assign j_1_2_fu_2857_p2 = (tmp_160_reg_4921 | 6'd3);

assign j_1_3_fu_2936_p2 = (tmp_160_reg_4921 | 6'd4);

assign j_1_4_fu_2959_p2 = (tmp_160_reg_4921 | 6'd5);

assign j_1_5_fu_3130_p2 = (tmp_160_reg_4921 | 6'd6);

assign j_1_6_fu_3153_p2 = (tmp_160_reg_4921 | 6'd7);

assign j_1_7_fu_3322_p2 = (tmp_160_reg_4921 | 6'd8);

assign j_1_8_fu_3345_p2 = (tmp_160_reg_4921 | 6'd9);

assign j_1_9_fu_3514_p2 = (tmp_160_reg_4921 | 6'd10);

assign j_1_s_fu_2804_p2 = (tmp_160_fu_2800_p1 | 6'd1);

assign last_address0 = tmp_94_fu_4360_p1;

assign man_V_10_fu_1972_p2 = (54'd0 - p_Result_3_fu_1968_p1);

assign man_V_11_fu_1978_p3 = ((isneg_3_reg_4686[0:0] === 1'b1) ? man_V_10_fu_1972_p2 : p_Result_3_fu_1968_p1);

assign man_V_13_fu_2252_p2 = (54'd0 - p_Result_5_fu_2248_p1);

assign man_V_14_fu_2258_p3 = ((isneg_4_reg_4751[0:0] === 1'b1) ? man_V_13_fu_2252_p2 : p_Result_5_fu_2248_p1);

assign man_V_16_fu_2532_p2 = (54'd0 - p_Result_6_fu_2528_p1);

assign man_V_17_fu_2538_p3 = ((isneg_5_reg_4816[0:0] === 1'b1) ? man_V_16_fu_2532_p2 : p_Result_6_fu_2528_p1);

assign man_V_1_fu_1132_p2 = (54'd0 - p_Result_s_fu_1128_p1);

assign man_V_2_fu_1138_p3 = ((isneg_reg_4491[0:0] === 1'b1) ? man_V_1_fu_1132_p2 : p_Result_s_fu_1128_p1);

assign man_V_4_fu_1412_p2 = (54'd0 - p_Result_1_fu_1408_p1);

assign man_V_5_fu_1418_p3 = ((isneg_1_reg_4556[0:0] === 1'b1) ? man_V_4_fu_1412_p2 : p_Result_1_fu_1408_p1);

assign man_V_7_fu_1692_p2 = (54'd0 - p_Result_2_fu_1688_p1);

assign man_V_8_fu_1698_p3 = ((isneg_2_reg_4621[0:0] === 1'b1) ? man_V_7_fu_1692_p2 : p_Result_2_fu_1688_p1);

assign newSel10_fu_1887_p3 = ((or_cond6_fu_1869_p2[0:0] === 1'b1) ? newSel8_fu_1862_p3 : newSel9_fu_1874_p3);

assign newSel12_fu_2142_p3 = ((sel_tmp35_reg_4736[0:0] === 1'b1) ? tmp_59_fu_2111_p2 : tmp_145_fu_2100_p1);

assign newSel13_fu_2154_p3 = ((sel_tmp32_fu_2132_p2[0:0] === 1'b1) ? storemerge6_fu_2104_p3 : tmp_143_reg_4724);

assign newSel14_fu_2167_p3 = ((or_cond9_fu_2149_p2[0:0] === 1'b1) ? newSel12_fu_2142_p3 : newSel13_fu_2154_p3);

assign newSel16_fu_2422_p3 = ((sel_tmp44_reg_4801[0:0] === 1'b1) ? tmp_74_fu_2391_p2 : tmp_151_fu_2380_p1);

assign newSel17_fu_2434_p3 = ((sel_tmp41_fu_2412_p2[0:0] === 1'b1) ? storemerge8_fu_2384_p3 : tmp_149_reg_4789);

assign newSel18_fu_2447_p3 = ((or_cond12_fu_2429_p2[0:0] === 1'b1) ? newSel16_fu_2422_p3 : newSel17_fu_2434_p3);

assign newSel1_fu_1314_p3 = ((sel_tmp9_fu_1292_p2[0:0] === 1'b1) ? storemerge_fu_1264_p3 : tmp_24_reg_4529);

assign newSel20_fu_2702_p3 = ((sel_tmp53_reg_4866[0:0] === 1'b1) ? tmp_89_fu_2671_p2 : tmp_157_fu_2660_p1);

assign newSel21_fu_2714_p3 = ((sel_tmp50_fu_2692_p2[0:0] === 1'b1) ? storemerge1_fu_2664_p3 : tmp_155_reg_4854);

assign newSel22_fu_2727_p3 = ((or_cond15_fu_2709_p2[0:0] === 1'b1) ? newSel20_fu_2702_p3 : newSel21_fu_2714_p3);

assign newSel2_fu_1327_p3 = ((or_cond_fu_1309_p2[0:0] === 1'b1) ? newSel_fu_1302_p3 : newSel1_fu_1314_p3);

assign newSel4_fu_1582_p3 = ((sel_tmp17_reg_4606[0:0] === 1'b1) ? tmp_33_fu_1551_p2 : tmp_61_fu_1540_p1);

assign newSel5_fu_1594_p3 = ((sel_tmp14_fu_1572_p2[0:0] === 1'b1) ? storemerge2_fu_1544_p3 : tmp_56_reg_4594);

assign newSel6_fu_1607_p3 = ((or_cond3_fu_1589_p2[0:0] === 1'b1) ? newSel4_fu_1582_p3 : newSel5_fu_1594_p3);

assign newSel8_fu_1862_p3 = ((sel_tmp26_reg_4671[0:0] === 1'b1) ? tmp_43_fu_1831_p2 : tmp_93_fu_1820_p1);

assign newSel9_fu_1874_p3 = ((sel_tmp23_fu_1852_p2[0:0] === 1'b1) ? storemerge4_fu_1824_p3 : tmp_88_reg_4659);

assign newSel_fu_1302_p3 = ((sel_tmp4_reg_4541[0:0] === 1'b1) ? tmp_17_fu_1271_p2 : tmp_34_fu_1260_p1);


always @ (p_Result_7_fu_4390_p4) begin
    if (p_Result_7_fu_4390_p4[0] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd0;
    end else if (p_Result_7_fu_4390_p4[1] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd1;
    end else if (p_Result_7_fu_4390_p4[2] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd2;
    end else if (p_Result_7_fu_4390_p4[3] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd3;
    end else if (p_Result_7_fu_4390_p4[4] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd4;
    end else if (p_Result_7_fu_4390_p4[5] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd5;
    end else if (p_Result_7_fu_4390_p4[6] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd6;
    end else if (p_Result_7_fu_4390_p4[7] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd7;
    end else if (p_Result_7_fu_4390_p4[8] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd8;
    end else if (p_Result_7_fu_4390_p4[9] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd9;
    end else if (p_Result_7_fu_4390_p4[10] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd10;
    end else if (p_Result_7_fu_4390_p4[11] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd11;
    end else if (p_Result_7_fu_4390_p4[12] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd12;
    end else if (p_Result_7_fu_4390_p4[13] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd13;
    end else if (p_Result_7_fu_4390_p4[14] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd14;
    end else if (p_Result_7_fu_4390_p4[15] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd15;
    end else if (p_Result_7_fu_4390_p4[16] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd16;
    end else if (p_Result_7_fu_4390_p4[17] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd17;
    end else if (p_Result_7_fu_4390_p4[18] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd18;
    end else if (p_Result_7_fu_4390_p4[19] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd19;
    end else if (p_Result_7_fu_4390_p4[20] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd20;
    end else if (p_Result_7_fu_4390_p4[21] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd21;
    end else if (p_Result_7_fu_4390_p4[22] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd22;
    end else if (p_Result_7_fu_4390_p4[23] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd23;
    end else if (p_Result_7_fu_4390_p4[24] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd24;
    end else if (p_Result_7_fu_4390_p4[25] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd25;
    end else if (p_Result_7_fu_4390_p4[26] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd26;
    end else if (p_Result_7_fu_4390_p4[27] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd27;
    end else if (p_Result_7_fu_4390_p4[28] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd28;
    end else if (p_Result_7_fu_4390_p4[29] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd29;
    end else if (p_Result_7_fu_4390_p4[30] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd30;
    end else if (p_Result_7_fu_4390_p4[31] == 1'b1) begin
        num_zeros_fu_4400_p3 = 32'd31;
    end else begin
        num_zeros_fu_4400_p3 = 32'd32;
    end
end

assign or_cond10_fu_2161_p2 = (sel_tmp32_fu_2132_p2 | sel_tmp28_fu_2121_p2);

assign or_cond11_fu_2175_p2 = (or_cond9_fu_2149_p2 | or_cond10_fu_2161_p2);

assign or_cond12_fu_2429_p2 = (sel_tmp44_reg_4801 | sel_tmp42_fu_2417_p2);

assign or_cond13_fu_2441_p2 = (sel_tmp41_fu_2412_p2 | sel_tmp37_fu_2401_p2);

assign or_cond14_fu_2455_p2 = (or_cond13_fu_2441_p2 | or_cond12_fu_2429_p2);

assign or_cond15_fu_2709_p2 = (sel_tmp53_reg_4866 | sel_tmp51_fu_2697_p2);

assign or_cond16_fu_2721_p2 = (sel_tmp50_fu_2692_p2 | sel_tmp46_fu_2681_p2);

assign or_cond17_fu_2735_p2 = (or_cond16_fu_2721_p2 | or_cond15_fu_2709_p2);

assign or_cond1_fu_1321_p2 = (sel_tmp9_fu_1292_p2 | sel_tmp2_fu_1281_p2);

assign or_cond2_fu_1335_p2 = (or_cond_fu_1309_p2 | or_cond1_fu_1321_p2);

assign or_cond3_fu_1589_p2 = (sel_tmp17_reg_4606 | sel_tmp15_fu_1577_p2);

assign or_cond4_fu_1601_p2 = (sel_tmp14_fu_1572_p2 | sel_tmp10_fu_1561_p2);

assign or_cond5_fu_1615_p2 = (or_cond4_fu_1601_p2 | or_cond3_fu_1589_p2);

assign or_cond6_fu_1869_p2 = (sel_tmp26_reg_4671 | sel_tmp24_fu_1857_p2);

assign or_cond7_fu_1881_p2 = (sel_tmp23_fu_1852_p2 | sel_tmp19_fu_1841_p2);

assign or_cond8_fu_1895_p2 = (or_cond7_fu_1881_p2 | or_cond6_fu_1869_p2);

assign or_cond9_fu_2149_p2 = (sel_tmp35_reg_4736 | sel_tmp33_fu_2137_p2);

assign or_cond_fu_1309_p2 = (sel_tmp_fu_1297_p2 | sel_tmp4_reg_4541);

assign out1_V_address1 = tmp_103_fu_4337_p1;

assign out1_V_d0 = (p_Val2_19_reg_5499 + p_Val2_9_reg_962);

assign out1_V_d1 = (p_Val2_20_reg_5504 + p_Val2_6_reg_974);

assign output_data_1_ack_in = output_data_1_state[1'd1];

assign output_data_1_ack_out = output_r_TREADY;

assign output_data_1_load_A = (output_data_1_state_cmp_full & ~output_data_1_sel_wr);

assign output_data_1_load_B = (output_data_1_state_cmp_full & output_data_1_sel_wr);

assign output_data_1_sel = output_data_1_sel_rd;

assign output_data_1_state_cmp_full = ((output_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign output_data_1_vld_out = output_data_1_state[1'd0];

assign output_last_1_ack_in = output_last_1_state[1'd1];

assign output_last_1_ack_out = output_r_TREADY;

assign output_last_1_load_A = (output_last_1_state_cmp_full & ~output_last_1_sel_wr);

assign output_last_1_load_B = (output_last_1_state_cmp_full & output_last_1_sel_wr);

assign output_last_1_sel = output_last_1_sel_rd;

assign output_last_1_state_cmp_full = ((output_last_1_state != 2'd1) ? 1'b1 : 1'b0);

assign output_last_1_vld_out = output_last_1_state[1'd0];

assign output_r_TDATA = output_data_1_data_out;

assign output_r_TLAST = output_last_1_data_out;

assign output_r_TVALID = output_last_1_state[1'd0];

assign p_03_i_fu_4474_p3 = ((tmp_95_reg_5550_pp6_iter8_reg[0:0] === 1'b1) ? 32'd0 : f_fu_4470_p1);

assign p_Repl2_1_trunc_fu_4446_p2 = (tmp_98_fu_4438_p2 + tmp_99_fu_4443_p1);

assign p_Result_1_fu_1408_p1 = tmp_13_fu_1401_p3;

assign p_Result_2_fu_1688_p1 = tmp_28_fu_1681_p3;

assign p_Result_3_fu_1968_p1 = tmp_47_fu_1961_p3;

assign p_Result_4_fu_4422_p4 = {{tmp32_V_fu_4418_p1[30:23]}};

assign p_Result_5_fu_2248_p1 = tmp_64_fu_2241_p3;

assign p_Result_6_fu_2528_p1 = tmp_79_fu_2521_p3;

integer ap_tvar_int_0;

always @ (p_Val2_s_35_fu_4385_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_7_fu_4390_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_7_fu_4390_p4[ap_tvar_int_0] = p_Val2_s_35_fu_4385_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_8_fu_4459_p5 = {{tmp_100_fu_4452_p3}, {tmp32_V_reg_5565[22:0]}};

assign p_Result_s_fu_1128_p1 = tmp_s_fu_1121_p3;

assign p_Val2_11_fu_2984_p2 = (p_Val2_8_reg_5014 + tmp_106_fu_2976_p3);

assign p_Val2_12_fu_2896_p0 = reg_1045;

assign p_Val2_12_fu_2896_p1 = reg_1040;

assign p_Val2_12_fu_2896_p2 = ($signed(p_Val2_12_fu_2896_p0) * $signed(p_Val2_12_fu_2896_p1));

assign p_Val2_13_fu_2997_p2 = (p_Val2_12_reg_5019 + tmp_107_fu_2989_p3);

assign p_Val2_19_10_fu_3872_p0 = reg_1055;

assign p_Val2_19_10_fu_3872_p1 = reg_1050;

assign p_Val2_19_10_fu_3872_p2 = ($signed(p_Val2_19_10_fu_3872_p0) * $signed(p_Val2_19_10_fu_3872_p1));

assign p_Val2_19_11_fu_4022_p0 = reg_1035;

assign p_Val2_19_11_fu_4022_p1 = reg_1030;

assign p_Val2_19_11_fu_4022_p2 = ($signed(p_Val2_19_11_fu_4022_p0) * $signed(p_Val2_19_11_fu_4022_p1));

assign p_Val2_19_12_fu_4070_p0 = reg_1055;

assign p_Val2_19_12_fu_4070_p1 = reg_1050;

assign p_Val2_19_12_fu_4070_p2 = ($signed(p_Val2_19_12_fu_4070_p0) * $signed(p_Val2_19_12_fu_4070_p1));

assign p_Val2_19_13_fu_4168_p0 = reg_1035;

assign p_Val2_19_13_fu_4168_p1 = reg_1030;

assign p_Val2_19_13_fu_4168_p2 = ($signed(p_Val2_19_13_fu_4168_p0) * $signed(p_Val2_19_13_fu_4168_p1));

assign p_Val2_19_14_fu_4216_p0 = reg_1055;

assign p_Val2_19_14_fu_4216_p1 = reg_1050;

assign p_Val2_19_14_fu_4216_p2 = ($signed(p_Val2_19_14_fu_4216_p0) * $signed(p_Val2_19_14_fu_4216_p1));

assign p_Val2_19_1_fu_2910_p0 = reg_1055;

assign p_Val2_19_1_fu_2910_p1 = reg_1050;

assign p_Val2_19_1_fu_2910_p2 = ($signed(p_Val2_19_1_fu_2910_p0) * $signed(p_Val2_19_1_fu_2910_p1));

assign p_Val2_19_2_fu_3056_p0 = reg_1035;

assign p_Val2_19_2_fu_3056_p1 = reg_1030;

assign p_Val2_19_2_fu_3056_p2 = ($signed(p_Val2_19_2_fu_3056_p0) * $signed(p_Val2_19_2_fu_3056_p1));

assign p_Val2_19_3_fu_3104_p0 = reg_1055;

assign p_Val2_19_3_fu_3104_p1 = reg_1050;

assign p_Val2_19_3_fu_3104_p2 = ($signed(p_Val2_19_3_fu_3104_p0) * $signed(p_Val2_19_3_fu_3104_p1));

assign p_Val2_19_4_fu_3248_p0 = reg_1035;

assign p_Val2_19_4_fu_3248_p1 = reg_1030;

assign p_Val2_19_4_fu_3248_p2 = ($signed(p_Val2_19_4_fu_3248_p0) * $signed(p_Val2_19_4_fu_3248_p1));

assign p_Val2_19_5_fu_3296_p0 = reg_1055;

assign p_Val2_19_5_fu_3296_p1 = reg_1050;

assign p_Val2_19_5_fu_3296_p2 = ($signed(p_Val2_19_5_fu_3296_p0) * $signed(p_Val2_19_5_fu_3296_p1));

assign p_Val2_19_6_fu_3440_p0 = reg_1035;

assign p_Val2_19_6_fu_3440_p1 = reg_1030;

assign p_Val2_19_6_fu_3440_p2 = ($signed(p_Val2_19_6_fu_3440_p0) * $signed(p_Val2_19_6_fu_3440_p1));

assign p_Val2_19_7_fu_3488_p0 = reg_1055;

assign p_Val2_19_7_fu_3488_p1 = reg_1050;

assign p_Val2_19_7_fu_3488_p2 = ($signed(p_Val2_19_7_fu_3488_p0) * $signed(p_Val2_19_7_fu_3488_p1));

assign p_Val2_19_8_fu_3632_p0 = reg_1035;

assign p_Val2_19_8_fu_3632_p1 = reg_1030;

assign p_Val2_19_8_fu_3632_p2 = ($signed(p_Val2_19_8_fu_3632_p0) * $signed(p_Val2_19_8_fu_3632_p1));

assign p_Val2_19_9_fu_3680_p0 = reg_1055;

assign p_Val2_19_9_fu_3680_p1 = reg_1050;

assign p_Val2_19_9_fu_3680_p2 = ($signed(p_Val2_19_9_fu_3680_p0) * $signed(p_Val2_19_9_fu_3680_p1));

assign p_Val2_19_s_fu_3824_p0 = reg_1035;

assign p_Val2_19_s_fu_3824_p1 = reg_1030;

assign p_Val2_19_s_fu_3824_p2 = ($signed(p_Val2_19_s_fu_3824_p0) * $signed(p_Val2_19_s_fu_3824_p1));

assign p_Val2_20_10_fu_3986_p2 = (p_Val2_19_10_reg_5374 + tmp_127_10_fu_3978_p3);

assign p_Val2_20_11_fu_4097_p2 = (p_Val2_19_11_reg_5429 + tmp_127_11_fu_4090_p3);

assign p_Val2_20_12_fu_4132_p2 = (p_Val2_19_12_reg_5449 + tmp_127_12_fu_4124_p3);

assign p_Val2_20_13_fu_4243_p2 = (p_Val2_19_13_reg_5459 + tmp_127_13_fu_4236_p3);

assign p_Val2_20_14_fu_4278_p2 = (p_Val2_19_14_reg_5479 + tmp_127_14_fu_4270_p3);

assign p_Val2_20_1_fu_3020_p2 = (p_Val2_19_1_reg_5024 + tmp_127_1_fu_3012_p3);

assign p_Val2_20_2_fu_3177_p2 = (p_Val2_19_2_reg_5074 + tmp_127_2_fu_3170_p3);

assign p_Val2_20_3_fu_3212_p2 = (p_Val2_19_3_reg_5094 + tmp_127_3_fu_3204_p3);

assign p_Val2_20_4_fu_3369_p2 = (p_Val2_19_4_reg_5144 + tmp_127_4_fu_3362_p3);

assign p_Val2_20_5_fu_3404_p2 = (p_Val2_19_5_reg_5164 + tmp_127_5_fu_3396_p3);

assign p_Val2_20_6_fu_3561_p2 = (p_Val2_19_6_reg_5214 + tmp_127_6_fu_3554_p3);

assign p_Val2_20_7_fu_3596_p2 = (p_Val2_19_7_reg_5234 + tmp_127_7_fu_3588_p3);

assign p_Val2_20_8_fu_3753_p2 = (p_Val2_19_8_reg_5284 + tmp_127_8_fu_3746_p3);

assign p_Val2_20_9_fu_3788_p2 = (p_Val2_19_9_reg_5304 + tmp_127_9_fu_3780_p3);

assign p_Val2_20_s_fu_3951_p2 = (p_Val2_19_s_reg_5354 + tmp_127_s_fu_3944_p3);

assign p_Val2_22_10_fu_3886_p0 = reg_1065;

assign p_Val2_22_10_fu_3886_p1 = reg_1060;

assign p_Val2_22_10_fu_3886_p2 = ($signed(p_Val2_22_10_fu_3886_p0) * $signed(p_Val2_22_10_fu_3886_p1));

assign p_Val2_22_11_fu_4046_p0 = reg_1045;

assign p_Val2_22_11_fu_4046_p1 = reg_1040;

assign p_Val2_22_11_fu_4046_p2 = ($signed(p_Val2_22_11_fu_4046_p0) * $signed(p_Val2_22_11_fu_4046_p1));

assign p_Val2_22_12_fu_4084_p0 = reg_1065;

assign p_Val2_22_12_fu_4084_p1 = reg_1060;

assign p_Val2_22_12_fu_4084_p2 = ($signed(p_Val2_22_12_fu_4084_p0) * $signed(p_Val2_22_12_fu_4084_p1));

assign p_Val2_22_13_fu_4192_p0 = reg_1045;

assign p_Val2_22_13_fu_4192_p1 = reg_1040;

assign p_Val2_22_13_fu_4192_p2 = ($signed(p_Val2_22_13_fu_4192_p0) * $signed(p_Val2_22_13_fu_4192_p1));

assign p_Val2_22_14_fu_4230_p0 = reg_1065;

assign p_Val2_22_14_fu_4230_p1 = reg_1060;

assign p_Val2_22_14_fu_4230_p2 = ($signed(p_Val2_22_14_fu_4230_p0) * $signed(p_Val2_22_14_fu_4230_p1));

assign p_Val2_22_1_fu_2924_p0 = reg_1065;

assign p_Val2_22_1_fu_2924_p1 = reg_1060;

assign p_Val2_22_1_fu_2924_p2 = ($signed(p_Val2_22_1_fu_2924_p0) * $signed(p_Val2_22_1_fu_2924_p1));

assign p_Val2_22_2_fu_3080_p0 = reg_1045;

assign p_Val2_22_2_fu_3080_p1 = reg_1040;

assign p_Val2_22_2_fu_3080_p2 = ($signed(p_Val2_22_2_fu_3080_p0) * $signed(p_Val2_22_2_fu_3080_p1));

assign p_Val2_22_3_fu_3118_p0 = reg_1065;

assign p_Val2_22_3_fu_3118_p1 = reg_1060;

assign p_Val2_22_3_fu_3118_p2 = ($signed(p_Val2_22_3_fu_3118_p0) * $signed(p_Val2_22_3_fu_3118_p1));

assign p_Val2_22_4_fu_3272_p0 = reg_1045;

assign p_Val2_22_4_fu_3272_p1 = reg_1040;

assign p_Val2_22_4_fu_3272_p2 = ($signed(p_Val2_22_4_fu_3272_p0) * $signed(p_Val2_22_4_fu_3272_p1));

assign p_Val2_22_5_fu_3310_p0 = reg_1065;

assign p_Val2_22_5_fu_3310_p1 = reg_1060;

assign p_Val2_22_5_fu_3310_p2 = ($signed(p_Val2_22_5_fu_3310_p0) * $signed(p_Val2_22_5_fu_3310_p1));

assign p_Val2_22_6_fu_3464_p0 = reg_1045;

assign p_Val2_22_6_fu_3464_p1 = reg_1040;

assign p_Val2_22_6_fu_3464_p2 = ($signed(p_Val2_22_6_fu_3464_p0) * $signed(p_Val2_22_6_fu_3464_p1));

assign p_Val2_22_7_fu_3502_p0 = reg_1065;

assign p_Val2_22_7_fu_3502_p1 = reg_1060;

assign p_Val2_22_7_fu_3502_p2 = ($signed(p_Val2_22_7_fu_3502_p0) * $signed(p_Val2_22_7_fu_3502_p1));

assign p_Val2_22_8_fu_3656_p0 = reg_1045;

assign p_Val2_22_8_fu_3656_p1 = reg_1040;

assign p_Val2_22_8_fu_3656_p2 = ($signed(p_Val2_22_8_fu_3656_p0) * $signed(p_Val2_22_8_fu_3656_p1));

assign p_Val2_22_9_fu_3694_p0 = reg_1065;

assign p_Val2_22_9_fu_3694_p1 = reg_1060;

assign p_Val2_22_9_fu_3694_p2 = ($signed(p_Val2_22_9_fu_3694_p0) * $signed(p_Val2_22_9_fu_3694_p1));

assign p_Val2_22_s_fu_3848_p0 = reg_1045;

assign p_Val2_22_s_fu_3848_p1 = reg_1040;

assign p_Val2_22_s_fu_3848_p2 = ($signed(p_Val2_22_s_fu_3848_p0) * $signed(p_Val2_22_s_fu_3848_p1));

assign p_Val2_23_10_fu_4009_p2 = (p_Val2_22_10_reg_5379 + tmp_132_10_fu_4001_p3);

assign p_Val2_23_11_fu_4109_p2 = (p_Val2_22_11_reg_5439 + tmp_132_11_fu_4102_p3);

assign p_Val2_23_12_fu_4155_p2 = (p_Val2_22_12_reg_5454 + tmp_132_12_fu_4147_p3);

assign p_Val2_23_13_fu_4255_p2 = (p_Val2_22_13_reg_5469 + tmp_132_13_fu_4248_p3);

assign p_Val2_23_14_fu_4311_p2 = (p_Val2_22_14_reg_5484 + tmp_132_14_fu_4303_p3);

assign p_Val2_23_1_fu_3043_p2 = (p_Val2_22_1_reg_5029 + tmp_132_1_fu_3035_p3);

assign p_Val2_23_2_fu_3189_p2 = (p_Val2_22_2_reg_5084 + tmp_132_2_fu_3182_p3);

assign p_Val2_23_3_fu_3235_p2 = (p_Val2_22_3_reg_5099 + tmp_132_3_fu_3227_p3);

assign p_Val2_23_4_fu_3381_p2 = (p_Val2_22_4_reg_5154 + tmp_132_4_fu_3374_p3);

assign p_Val2_23_5_fu_3427_p2 = (p_Val2_22_5_reg_5169 + tmp_132_5_fu_3419_p3);

assign p_Val2_23_6_fu_3573_p2 = (p_Val2_22_6_reg_5224 + tmp_132_6_fu_3566_p3);

assign p_Val2_23_7_fu_3619_p2 = (p_Val2_22_7_reg_5239 + tmp_132_7_fu_3611_p3);

assign p_Val2_23_8_fu_3765_p2 = (p_Val2_22_8_reg_5294 + tmp_132_8_fu_3758_p3);

assign p_Val2_23_9_fu_3811_p2 = (p_Val2_22_9_reg_5309 + tmp_132_9_fu_3803_p3);

assign p_Val2_23_s_fu_3963_p2 = (p_Val2_22_s_reg_5364 + tmp_132_s_fu_3956_p3);

assign p_Val2_8_fu_2882_p0 = reg_1035;

assign p_Val2_8_fu_2882_p1 = reg_1030;

assign p_Val2_8_fu_2882_p2 = ($signed(p_Val2_8_fu_2882_p0) * $signed(p_Val2_8_fu_2882_p1));

assign p_Val2_s_35_fu_4385_p3 = ((is_neg_reg_5534[0:0] === 1'b1) ? tmp_96_reg_5540 : p_Val2_10_reg_5528);

assign sel_tmp106_demorgan_fu_2323_p2 = (tmp_69_fu_2297_p2 | tmp_65_reg_4767);

assign sel_tmp10_fu_1561_p2 = (tmp_21_reg_4589 & sel_tmp5_fu_1556_p2);

assign sel_tmp11_fu_1488_p2 = (sel_tmp31_demorgan_fu_1483_p2 ^ 1'd1);

assign sel_tmp121_demorgan_fu_2340_p2 = (tmp_66_fu_2271_p2 | sel_tmp106_demorgan_fu_2323_p2);

assign sel_tmp12_fu_1494_p2 = (tmp_18_fu_1431_p2 & sel_tmp11_fu_1488_p2);

assign sel_tmp131_demorgan_fu_2603_p2 = (tmp_84_fu_2577_p2 | tmp_80_reg_4832);

assign sel_tmp13_fu_1566_p2 = (tmp_23_fu_1526_p2 ^ 1'd1);

assign sel_tmp146_demorgan_fu_2620_p2 = (tmp_81_fu_2551_p2 | sel_tmp131_demorgan_fu_2603_p2);

assign sel_tmp14_fu_1572_p2 = (sel_tmp13_fu_1566_p2 & sel_tmp12_reg_4600);

assign sel_tmp15_fu_1577_p2 = (tmp_23_fu_1526_p2 & sel_tmp12_reg_4600);

assign sel_tmp16_fu_1506_p2 = (sel_tmp46_demorgan_fu_1500_p2 ^ 1'd1);

assign sel_tmp17_fu_1512_p2 = (sel_tmp16_fu_1506_p2 & icmp1_fu_1477_p2);

assign sel_tmp18_fu_1836_p2 = (tmp_30_reg_4637_pp2_iter2_reg ^ 1'd1);

assign sel_tmp19_fu_1841_p2 = (tmp_38_reg_4654 & sel_tmp18_fu_1836_p2);

assign sel_tmp1_fu_1276_p2 = (tmp_9_reg_4507_pp0_iter2_reg ^ 1'd1);

assign sel_tmp20_fu_1768_p2 = (sel_tmp56_demorgan_fu_1763_p2 ^ 1'd1);

assign sel_tmp21_demorgan_fu_1220_p2 = (tmp_1_fu_1151_p2 | sel_tmp6_demorgan_fu_1203_p2);

assign sel_tmp21_fu_1774_p2 = (tmp_35_fu_1711_p2 & sel_tmp20_fu_1768_p2);

assign sel_tmp22_fu_1846_p2 = (tmp_39_fu_1806_p2 ^ 1'd1);

assign sel_tmp23_fu_1852_p2 = (sel_tmp22_fu_1846_p2 & sel_tmp21_reg_4665);

assign sel_tmp24_fu_1857_p2 = (tmp_39_fu_1806_p2 & sel_tmp21_reg_4665);

assign sel_tmp25_fu_1786_p2 = (sel_tmp71_demorgan_fu_1780_p2 ^ 1'd1);

assign sel_tmp26_fu_1792_p2 = (sel_tmp25_fu_1786_p2 & icmp2_fu_1757_p2);

assign sel_tmp27_fu_2116_p2 = (tmp_48_reg_4702_pp3_iter2_reg ^ 1'd1);

assign sel_tmp28_fu_2121_p2 = (tmp_53_reg_4719 & sel_tmp27_fu_2116_p2);

assign sel_tmp29_fu_2048_p2 = (sel_tmp81_demorgan_fu_2043_p2 ^ 1'd1);

assign sel_tmp2_fu_1281_p2 = (tmp_6_reg_4524 & sel_tmp1_fu_1276_p2);

assign sel_tmp30_fu_2054_p2 = (tmp_49_fu_1991_p2 & sel_tmp29_fu_2048_p2);

assign sel_tmp31_demorgan_fu_1483_p2 = (tmp_21_fu_1457_p2 | tmp_15_reg_4572);

assign sel_tmp31_fu_2126_p2 = (tmp_54_fu_2086_p2 ^ 1'd1);

assign sel_tmp32_fu_2132_p2 = (sel_tmp31_fu_2126_p2 & sel_tmp30_reg_4730);

assign sel_tmp33_fu_2137_p2 = (tmp_54_fu_2086_p2 & sel_tmp30_reg_4730);

assign sel_tmp34_fu_2066_p2 = (sel_tmp96_demorgan_fu_2060_p2 ^ 1'd1);

assign sel_tmp35_fu_2072_p2 = (sel_tmp34_fu_2066_p2 & icmp3_fu_2037_p2);

assign sel_tmp36_fu_2396_p2 = (tmp_65_reg_4767_pp4_iter2_reg ^ 1'd1);

assign sel_tmp37_fu_2401_p2 = (tmp_69_reg_4784 & sel_tmp36_fu_2396_p2);

assign sel_tmp38_fu_2328_p2 = (sel_tmp106_demorgan_fu_2323_p2 ^ 1'd1);

assign sel_tmp39_fu_2334_p2 = (tmp_66_fu_2271_p2 & sel_tmp38_fu_2328_p2);

assign sel_tmp3_fu_1226_p2 = (sel_tmp21_demorgan_fu_1220_p2 ^ 1'd1);

assign sel_tmp40_fu_2406_p2 = (tmp_70_fu_2366_p2 ^ 1'd1);

assign sel_tmp41_fu_2412_p2 = (sel_tmp40_fu_2406_p2 & sel_tmp39_reg_4795);

assign sel_tmp42_fu_2417_p2 = (tmp_70_fu_2366_p2 & sel_tmp39_reg_4795);

assign sel_tmp43_fu_2346_p2 = (sel_tmp121_demorgan_fu_2340_p2 ^ 1'd1);

assign sel_tmp44_fu_2352_p2 = (sel_tmp43_fu_2346_p2 & icmp4_fu_2317_p2);

assign sel_tmp45_fu_2676_p2 = (tmp_80_reg_4832_pp5_iter2_reg ^ 1'd1);

assign sel_tmp46_demorgan_fu_1500_p2 = (tmp_18_fu_1431_p2 | sel_tmp31_demorgan_fu_1483_p2);

assign sel_tmp46_fu_2681_p2 = (tmp_84_reg_4849 & sel_tmp45_fu_2676_p2);

assign sel_tmp47_fu_2608_p2 = (sel_tmp131_demorgan_fu_2603_p2 ^ 1'd1);

assign sel_tmp48_fu_2614_p2 = (tmp_81_fu_2551_p2 & sel_tmp47_fu_2608_p2);

assign sel_tmp49_fu_2686_p2 = (tmp_85_fu_2646_p2 ^ 1'd1);

assign sel_tmp4_fu_1232_p2 = (sel_tmp3_fu_1226_p2 & icmp_fu_1197_p2);

assign sel_tmp50_fu_2692_p2 = (sel_tmp49_fu_2686_p2 & sel_tmp48_reg_4860);

assign sel_tmp51_fu_2697_p2 = (tmp_85_fu_2646_p2 & sel_tmp48_reg_4860);

assign sel_tmp52_fu_2626_p2 = (sel_tmp146_demorgan_fu_2620_p2 ^ 1'd1);

assign sel_tmp53_fu_2632_p2 = (sel_tmp52_fu_2626_p2 & icmp5_fu_2597_p2);

assign sel_tmp56_demorgan_fu_1763_p2 = (tmp_38_fu_1737_p2 | tmp_30_reg_4637);

assign sel_tmp5_fu_1556_p2 = (tmp_15_reg_4572_pp1_iter2_reg ^ 1'd1);

assign sel_tmp6_demorgan_fu_1203_p2 = (tmp_9_reg_4507 | tmp_6_fu_1177_p2);

assign sel_tmp6_fu_1208_p2 = (sel_tmp6_demorgan_fu_1203_p2 ^ 1'd1);

assign sel_tmp71_demorgan_fu_1780_p2 = (tmp_35_fu_1711_p2 | sel_tmp56_demorgan_fu_1763_p2);

assign sel_tmp7_fu_1214_p2 = (tmp_1_fu_1151_p2 & sel_tmp6_fu_1208_p2);

assign sel_tmp81_demorgan_fu_2043_p2 = (tmp_53_fu_2017_p2 | tmp_48_reg_4702);

assign sel_tmp8_fu_1286_p2 = (tmp_10_fu_1246_p2 ^ 1'd1);

assign sel_tmp96_demorgan_fu_2060_p2 = (tmp_49_fu_1991_p2 | sel_tmp81_demorgan_fu_2043_p2);

assign sel_tmp9_fu_1292_p2 = (sel_tmp8_fu_1286_p2 & sel_tmp7_reg_4535);

assign sel_tmp_fu_1297_p2 = (tmp_10_fu_1246_p2 & sel_tmp7_reg_4535);

assign sh_amt_1_cast_fu_1523_p1 = sh_amt_1_reg_4583;

assign sh_amt_1_fu_1449_p3 = ((tmp_18_fu_1431_p2[0:0] === 1'b1) ? tmp_19_fu_1437_p2 : tmp_20_fu_1443_p2);

assign sh_amt_2_cast_fu_1803_p1 = sh_amt_2_reg_4648;

assign sh_amt_2_fu_1729_p3 = ((tmp_35_fu_1711_p2[0:0] === 1'b1) ? tmp_36_fu_1717_p2 : tmp_37_fu_1723_p2);

assign sh_amt_3_cast_fu_2083_p1 = sh_amt_3_reg_4713;

assign sh_amt_3_fu_2009_p3 = ((tmp_49_fu_1991_p2[0:0] === 1'b1) ? tmp_51_fu_1997_p2 : tmp_52_fu_2003_p2);

assign sh_amt_4_cast_fu_2363_p1 = sh_amt_4_reg_4778;

assign sh_amt_4_fu_2289_p3 = ((tmp_66_fu_2271_p2[0:0] === 1'b1) ? tmp_67_fu_2277_p2 : tmp_68_fu_2283_p2);

assign sh_amt_5_cast_fu_2643_p1 = sh_amt_5_reg_4843;

assign sh_amt_5_fu_2569_p3 = ((tmp_81_fu_2551_p2[0:0] === 1'b1) ? tmp_82_fu_2557_p2 : tmp_83_fu_2563_p2);

assign sh_amt_cast_fu_1243_p1 = sh_amt_reg_4518;

assign sh_amt_fu_1169_p3 = ((tmp_1_fu_1151_p2[0:0] === 1'b1) ? tmp_3_fu_1157_p2 : tmp_5_fu_1163_p2);

assign storemerge1_fu_2664_p3 = ((isneg_5_reg_4816_pp5_iter2_reg[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign storemerge2_fu_1544_p3 = ((isneg_1_reg_4556_pp1_iter2_reg[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign storemerge4_fu_1824_p3 = ((isneg_2_reg_4621_pp2_iter2_reg[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign storemerge6_fu_2104_p3 = ((isneg_3_reg_4686_pp3_iter2_reg[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign storemerge8_fu_2384_p3 = ((isneg_4_reg_4751_pp4_iter2_reg[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign storemerge_fu_1264_p3 = ((isneg_reg_4491_pp0_iter2_reg[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp32_V_1_fu_4408_p2 = p_Val2_s_35_fu_4385_p3 << num_zeros_fu_4400_p3;

assign tmp32_V_fu_4418_p1 = grp_fu_1019_p1;

assign tmp_100_fu_4452_p3 = {{is_neg_reg_5534_pp6_iter8_reg}, {p_Repl2_1_trunc_fu_4446_p2}};

assign tmp_101_fu_1926_p1 = ireg_V_3_fu_1922_p1[62:0];

assign tmp_102_fu_4332_p2 = (i_6_cast_reg_4872 + 9'd192);

assign tmp_103_fu_4337_p1 = tmp_102_fu_4332_p2;

assign tmp_104_fu_2782_p1 = counter_s_reg_997;

assign tmp_105_fu_2788_p1 = j_reg_986;

assign tmp_106_fu_2976_p3 = {{p_Val2_9_reg_962}, {16'd0}};

assign tmp_107_fu_2989_p3 = {{p_Val2_6_reg_974}, {16'd0}};

assign tmp_108_fu_3002_p4 = {{p_Val2_11_fu_2984_p2[47:16]}};

assign tmp_109_fu_3025_p4 = {{p_Val2_13_fu_2997_p2[47:16]}};

assign tmp_10_fu_1246_p2 = ((sh_amt_reg_4518 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_112_fu_3194_p4 = {{p_Val2_20_2_fu_3177_p2[47:16]}};

assign tmp_113_fu_3217_p4 = {{p_Val2_23_2_fu_3189_p2[47:16]}};

assign tmp_116_fu_3386_p4 = {{p_Val2_20_4_fu_3369_p2[47:16]}};

assign tmp_117_fu_3409_p4 = {{p_Val2_23_4_fu_3381_p2[47:16]}};

assign tmp_120_fu_3578_p4 = {{p_Val2_20_6_fu_3561_p2[47:16]}};

assign tmp_121_fu_3601_p4 = {{p_Val2_23_6_fu_3573_p2[47:16]}};

assign tmp_124_10_fu_3542_p1 = tmp_136_10_fu_3531_p2;

assign tmp_124_11_fu_3711_p1 = tmp_136_11_fu_3700_p2;

assign tmp_124_12_fu_3734_p1 = tmp_136_12_fu_3723_p2;

assign tmp_124_13_fu_3903_p1 = tmp_136_13_fu_3892_p2;

assign tmp_124_14_fu_3926_p1 = tmp_136_14_fu_3915_p2;

assign tmp_124_1_fu_2810_p1 = tmp_136_s_fu_2794_p2;

assign tmp_124_2_fu_2839_p1 = tmp_136_1_fu_2828_p2;

assign tmp_124_3_fu_2862_p1 = tmp_136_2_fu_2851_p2;

assign tmp_124_4_fu_2941_p1 = tmp_136_3_fu_2930_p2;

assign tmp_124_5_fu_2964_p1 = tmp_136_4_fu_2953_p2;

assign tmp_124_6_fu_3135_p1 = tmp_136_5_fu_3124_p2;

assign tmp_124_7_fu_3158_p1 = tmp_136_6_fu_3147_p2;

assign tmp_124_8_fu_3327_p1 = tmp_136_7_fu_3316_p2;

assign tmp_124_9_fu_3350_p1 = tmp_136_8_fu_3339_p2;

assign tmp_124_fu_3770_p4 = {{p_Val2_20_8_fu_3753_p2[47:16]}};

assign tmp_124_s_fu_3519_p1 = tmp_136_9_fu_3508_p2;

assign tmp_125_10_fu_3548_p1 = j_1_10_fu_3537_p2;

assign tmp_125_11_fu_3717_p1 = j_1_11_fu_3706_p2;

assign tmp_125_12_fu_3740_p1 = j_1_12_fu_3729_p2;

assign tmp_125_13_fu_3909_p1 = j_1_13_fu_3898_p2;

assign tmp_125_14_fu_3932_p1 = j_1_14_fu_3921_p2;

assign tmp_125_1_fu_2816_p1 = j_1_s_fu_2804_p2;

assign tmp_125_2_fu_2845_p1 = j_1_1_fu_2834_p2;

assign tmp_125_3_fu_2868_p1 = j_1_2_fu_2857_p2;

assign tmp_125_4_fu_2947_p1 = j_1_3_fu_2936_p2;

assign tmp_125_5_fu_2970_p1 = j_1_4_fu_2959_p2;

assign tmp_125_6_fu_3141_p1 = j_1_5_fu_3130_p2;

assign tmp_125_7_fu_3164_p1 = j_1_6_fu_3153_p2;

assign tmp_125_8_fu_3333_p1 = j_1_7_fu_3322_p2;

assign tmp_125_9_fu_3356_p1 = j_1_8_fu_3345_p2;

assign tmp_125_fu_3793_p4 = {{p_Val2_23_8_fu_3765_p2[47:16]}};

assign tmp_125_s_fu_3525_p1 = j_1_9_fu_3514_p2;

assign tmp_127_10_fu_3978_p3 = {{tmp_128_fu_3968_p4}, {16'd0}};

assign tmp_127_11_fu_4090_p3 = {{tmp_130_reg_5434}, {16'd0}};

assign tmp_127_12_fu_4124_p3 = {{tmp_132_fu_4114_p4}, {16'd0}};

assign tmp_127_13_fu_4236_p3 = {{tmp_134_reg_5464}, {16'd0}};

assign tmp_127_14_fu_4270_p3 = {{tmp_136_fu_4260_p4}, {16'd0}};

assign tmp_127_1_fu_3012_p3 = {{tmp_108_fu_3002_p4}, {16'd0}};

assign tmp_127_2_fu_3170_p3 = {{tmp_110_reg_5079}, {16'd0}};

assign tmp_127_3_fu_3204_p3 = {{tmp_112_fu_3194_p4}, {16'd0}};

assign tmp_127_4_fu_3362_p3 = {{tmp_114_reg_5149}, {16'd0}};

assign tmp_127_5_fu_3396_p3 = {{tmp_116_fu_3386_p4}, {16'd0}};

assign tmp_127_6_fu_3554_p3 = {{tmp_118_reg_5219}, {16'd0}};

assign tmp_127_7_fu_3588_p3 = {{tmp_120_fu_3578_p4}, {16'd0}};

assign tmp_127_8_fu_3746_p3 = {{tmp_122_reg_5289}, {16'd0}};

assign tmp_127_9_fu_3780_p3 = {{tmp_124_fu_3770_p4}, {16'd0}};

assign tmp_127_s_fu_3944_p3 = {{tmp_126_reg_5359}, {16'd0}};

assign tmp_128_fu_3968_p4 = {{p_Val2_20_s_fu_3951_p2[47:16]}};

assign tmp_129_fu_3991_p4 = {{p_Val2_23_s_fu_3963_p2[47:16]}};

assign tmp_12_fu_1398_p1 = exp_tmp_V_1_reg_4562;

assign tmp_132_10_fu_4001_p3 = {{tmp_129_fu_3991_p4}, {16'd0}};

assign tmp_132_11_fu_4102_p3 = {{tmp_131_reg_5444}, {16'd0}};

assign tmp_132_12_fu_4147_p3 = {{tmp_133_fu_4137_p4}, {16'd0}};

assign tmp_132_13_fu_4248_p3 = {{tmp_135_reg_5474}, {16'd0}};

assign tmp_132_14_fu_4303_p3 = {{tmp_137_fu_4293_p4}, {16'd0}};

assign tmp_132_1_fu_3035_p3 = {{tmp_109_fu_3025_p4}, {16'd0}};

assign tmp_132_2_fu_3182_p3 = {{tmp_111_reg_5089}, {16'd0}};

assign tmp_132_3_fu_3227_p3 = {{tmp_113_fu_3217_p4}, {16'd0}};

assign tmp_132_4_fu_3374_p3 = {{tmp_115_reg_5159}, {16'd0}};

assign tmp_132_5_fu_3419_p3 = {{tmp_117_fu_3409_p4}, {16'd0}};

assign tmp_132_6_fu_3566_p3 = {{tmp_119_reg_5229}, {16'd0}};

assign tmp_132_7_fu_3611_p3 = {{tmp_121_fu_3601_p4}, {16'd0}};

assign tmp_132_8_fu_3758_p3 = {{tmp_123_reg_5299}, {16'd0}};

assign tmp_132_9_fu_3803_p3 = {{tmp_125_fu_3793_p4}, {16'd0}};

assign tmp_132_fu_4114_p4 = {{p_Val2_20_11_fu_4097_p2[47:16]}};

assign tmp_132_s_fu_3956_p3 = {{tmp_127_reg_5369}, {16'd0}};

assign tmp_133_fu_4137_p4 = {{p_Val2_23_11_fu_4109_p2[47:16]}};

assign tmp_136_10_fu_3531_p2 = (counter_s_reg_997 | 14'd11);

assign tmp_136_11_fu_3700_p2 = (counter_s_reg_997 | 14'd12);

assign tmp_136_12_fu_3723_p2 = (counter_s_reg_997 | 14'd13);

assign tmp_136_13_fu_3892_p2 = (counter_s_reg_997 | 14'd14);

assign tmp_136_14_fu_3915_p2 = (counter_s_reg_997 | 14'd15);

assign tmp_136_15_fu_3938_p2 = (14'd16 + counter_s_reg_997);

assign tmp_136_1_fu_2828_p2 = (counter_s_reg_997 | 14'd2);

assign tmp_136_2_fu_2851_p2 = (counter_s_reg_997 | 14'd3);

assign tmp_136_3_fu_2930_p2 = (counter_s_reg_997 | 14'd4);

assign tmp_136_4_fu_2953_p2 = (counter_s_reg_997 | 14'd5);

assign tmp_136_5_fu_3124_p2 = (counter_s_reg_997 | 14'd6);

assign tmp_136_6_fu_3147_p2 = (counter_s_reg_997 | 14'd7);

assign tmp_136_7_fu_3316_p2 = (counter_s_reg_997 | 14'd8);

assign tmp_136_8_fu_3339_p2 = (counter_s_reg_997 | 14'd9);

assign tmp_136_9_fu_3508_p2 = (counter_s_reg_997 | 14'd10);

assign tmp_136_fu_4260_p4 = {{p_Val2_20_13_fu_4243_p2[47:16]}};

assign tmp_136_s_fu_2794_p2 = (counter_s_reg_997 | 14'd1);

assign tmp_137_fu_4293_p4 = {{p_Val2_23_13_fu_4255_p2[47:16]}};

assign tmp_13_fu_1401_p3 = {{1'd1}, {tmp_50_reg_4567}};

assign tmp_142_fu_1948_p1 = ireg_V_3_fu_1922_p1[51:0];

assign tmp_143_fu_2023_p1 = man_V_11_fu_1978_p3[31:0];

assign tmp_144_fu_2027_p4 = {{sh_amt_3_fu_2009_p3[11:5]}};

assign tmp_145_fu_2100_p1 = tmp_57_fu_2095_p2[31:0];

assign tmp_146_fu_2206_p1 = ireg_V_4_fu_2202_p1[62:0];

assign tmp_148_fu_2228_p1 = ireg_V_4_fu_2202_p1[51:0];

assign tmp_149_fu_2303_p1 = man_V_14_fu_2258_p3[31:0];

assign tmp_14_fu_1251_p1 = $unsigned(sh_amt_cast_fu_1243_p1);

assign tmp_150_fu_2307_p4 = {{sh_amt_4_fu_2289_p3[11:5]}};

assign tmp_151_fu_2380_p1 = tmp_73_fu_2375_p2[31:0];

assign tmp_152_fu_2486_p1 = ireg_V_5_fu_2482_p1[62:0];

assign tmp_154_fu_2508_p1 = ireg_V_5_fu_2482_p1[51:0];

assign tmp_155_fu_2583_p1 = man_V_17_fu_2538_p3[31:0];

assign tmp_156_fu_2587_p4 = {{sh_amt_5_fu_2569_p3[11:5]}};

assign tmp_157_fu_2660_p1 = tmp_87_fu_2655_p2[31:0];

assign tmp_159_fu_4414_p1 = num_zeros_fu_4400_p3[7:0];

assign tmp_15_fu_1392_p2 = ((tmp_40_fu_1366_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_160_fu_2800_p1 = j_reg_986[5:0];

assign tmp_16_fu_1255_p2 = $signed(man_V_2_reg_4513) >>> tmp_14_fu_1251_p1;

assign tmp_17_fu_1271_p2 = tmp_24_reg_4529 << sh_amt_cast_fu_1243_p1;

assign tmp_18_fu_1431_p2 = (($signed(F2_1_fu_1425_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_19_fu_1437_p2 = ($signed(12'd4080) + $signed(F2_1_fu_1425_p2));

assign tmp_1_fu_1151_p2 = (($signed(F2_fu_1145_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_20_fu_1443_p2 = (12'd16 - F2_1_fu_1425_p2);

assign tmp_21_fu_1457_p2 = ((F2_1_fu_1425_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_22_fu_1108_p1 = ireg_V_fu_1082_p1[51:0];

assign tmp_23_fu_1526_p2 = ((sh_amt_1_reg_4583 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_24_fu_1183_p1 = man_V_2_fu_1138_p3[31:0];

assign tmp_25_fu_1798_p1 = i_2_reg_891_pp2_iter2_reg;

assign tmp_27_fu_1678_p1 = exp_tmp_V_2_reg_4627;

assign tmp_28_fu_1681_p3 = {{1'd1}, {tmp_77_reg_4632}};

assign tmp_29_fu_1531_p1 = $unsigned(sh_amt_1_cast_fu_1523_p1);

assign tmp_30_fu_1672_p2 = ((tmp_72_fu_1646_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_31_fu_1187_p4 = {{sh_amt_fu_1169_p3[11:5]}};

assign tmp_32_fu_1535_p2 = $signed(man_V_5_reg_4578) >>> tmp_29_fu_1531_p1;

assign tmp_33_fu_1551_p2 = tmp_56_reg_4594 << sh_amt_1_cast_fu_1523_p1;

assign tmp_34_fu_1260_p1 = tmp_16_fu_1255_p2[31:0];

assign tmp_35_fu_1711_p2 = (($signed(F2_2_fu_1705_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_36_fu_1717_p2 = ($signed(12'd4080) + $signed(F2_2_fu_1705_p2));

assign tmp_37_fu_1723_p2 = (12'd16 - F2_2_fu_1705_p2);

assign tmp_38_fu_1737_p2 = ((F2_2_fu_1705_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_39_fu_1806_p2 = ((sh_amt_2_reg_4648 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_3_fu_1157_p2 = ($signed(12'd4080) + $signed(F2_fu_1145_p2));

assign tmp_40_fu_1366_p1 = ireg_V_1_fu_1362_p1[62:0];

assign tmp_41_fu_1811_p1 = $unsigned(sh_amt_2_cast_fu_1803_p1);

assign tmp_42_fu_1815_p2 = $signed(man_V_8_reg_4643) >>> tmp_41_fu_1811_p1;

assign tmp_43_fu_1831_p2 = tmp_88_reg_4659 << sh_amt_2_cast_fu_1803_p1;

assign tmp_45_fu_2078_p1 = i_3_reg_903_pp3_iter2_reg;

assign tmp_46_fu_1958_p1 = exp_tmp_V_3_reg_4692;

assign tmp_47_fu_1961_p3 = {{1'd1}, {tmp_142_reg_4697}};

assign tmp_48_fu_1952_p2 = ((tmp_101_fu_1926_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_49_fu_1991_p2 = (($signed(F2_3_fu_1985_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_4_fu_1118_p1 = exp_tmp_V_reg_4497;

assign tmp_50_fu_1388_p1 = ireg_V_1_fu_1362_p1[51:0];

assign tmp_51_fu_1997_p2 = ($signed(12'd4080) + $signed(F2_3_fu_1985_p2));

assign tmp_52_fu_2003_p2 = (12'd16 - F2_3_fu_1985_p2);

assign tmp_53_fu_2017_p2 = ((F2_3_fu_1985_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_54_fu_2086_p2 = ((sh_amt_3_reg_4713 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_55_fu_2091_p1 = $unsigned(sh_amt_3_cast_fu_2083_p1);

assign tmp_56_fu_1463_p1 = man_V_5_fu_1418_p3[31:0];

assign tmp_57_fu_2095_p2 = $signed(man_V_11_reg_4708) >>> tmp_55_fu_2091_p1;

assign tmp_58_fu_1467_p4 = {{sh_amt_1_fu_1449_p3[11:5]}};

assign tmp_59_fu_2111_p2 = tmp_143_reg_4724 << sh_amt_3_cast_fu_2083_p1;

assign tmp_5_fu_1163_p2 = (12'd16 - F2_fu_1145_p2);

assign tmp_61_fu_1540_p1 = tmp_32_fu_1535_p2[31:0];

assign tmp_62_fu_2358_p1 = i_4_reg_915_pp4_iter2_reg;

assign tmp_63_fu_2238_p1 = exp_tmp_V_4_reg_4757;

assign tmp_64_fu_2241_p3 = {{1'd1}, {tmp_148_reg_4762}};

assign tmp_65_fu_2232_p2 = ((tmp_146_fu_2206_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_66_fu_2271_p2 = (($signed(F2_4_fu_2265_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_67_fu_2277_p2 = ($signed(12'd4080) + $signed(F2_4_fu_2265_p2));

assign tmp_68_fu_2283_p2 = (12'd16 - F2_4_fu_2265_p2);

assign tmp_69_fu_2297_p2 = ((F2_4_fu_2265_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_6_fu_1177_p2 = ((F2_fu_1145_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_70_fu_2366_p2 = ((sh_amt_4_reg_4778 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_71_fu_2371_p1 = $unsigned(sh_amt_4_cast_fu_2363_p1);

assign tmp_72_fu_1646_p1 = ireg_V_2_fu_1642_p1[62:0];

assign tmp_73_fu_2375_p2 = $signed(man_V_14_reg_4773) >>> tmp_71_fu_2371_p1;

assign tmp_74_fu_2391_p2 = tmp_149_reg_4789 << sh_amt_4_cast_fu_2363_p1;

assign tmp_76_fu_2638_p1 = i_5_reg_927_pp5_iter2_reg;

assign tmp_77_fu_1668_p1 = ireg_V_2_fu_1642_p1[51:0];

assign tmp_78_fu_2518_p1 = exp_tmp_V_5_reg_4822;

assign tmp_79_fu_2521_p3 = {{1'd1}, {tmp_154_reg_4827}};

assign tmp_7_fu_1518_p1 = i_1_reg_879_pp1_iter2_reg;

assign tmp_80_fu_2512_p2 = ((tmp_152_fu_2486_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_81_fu_2551_p2 = (($signed(F2_5_fu_2545_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_82_fu_2557_p2 = ($signed(12'd4080) + $signed(F2_5_fu_2545_p2));

assign tmp_83_fu_2563_p2 = (12'd16 - F2_5_fu_2545_p2);

assign tmp_84_fu_2577_p2 = ((F2_5_fu_2545_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_85_fu_2646_p2 = ((sh_amt_5_reg_4843 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_86_fu_2651_p1 = $unsigned(sh_amt_5_cast_fu_2643_p1);

assign tmp_87_fu_2655_p2 = $signed(man_V_17_reg_4838) >>> tmp_86_fu_2651_p1;

assign tmp_88_fu_1743_p1 = man_V_8_fu_1698_p3[31:0];

assign tmp_89_fu_2671_p2 = tmp_155_reg_4854 << sh_amt_5_cast_fu_2643_p1;

assign tmp_8_fu_1086_p1 = ireg_V_fu_1082_p1[62:0];

assign tmp_90_fu_1747_p4 = {{sh_amt_2_fu_1729_p3[11:5]}};

assign tmp_91_fu_2766_p1 = i_6_reg_939;

assign tmp_93_fu_1820_p1 = tmp_42_fu_1815_p2[31:0];

assign tmp_94_fu_4360_p1 = i_7_reg_1008;

assign tmp_95_fu_4380_p2 = ((p_Val2_10_reg_5528 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_96_fu_4374_p2 = (32'd0 - out1_V_q0);

assign tmp_97_fu_4432_p2 = ((p_Result_4_fu_4422_p4 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_98_fu_4438_p2 = ($signed(8'd142) - $signed(tmp_159_reg_5560_pp6_iter8_reg));

assign tmp_99_fu_4443_p1 = tmp_97_reg_5570;

assign tmp_9_fu_1112_p2 = ((tmp_8_fu_1086_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_fu_1238_p1 = i_reg_867_pp0_iter2_reg;

assign tmp_s_fu_1121_p3 = {{1'd1}, {tmp_22_reg_4502}};

assign w_hh_V_d0 = ((or_cond11_fu_2175_p2[0:0] === 1'b1) ? newSel14_fu_2167_p3 : 32'd0);

assign w_ih_V_d0 = ((or_cond8_fu_1895_p2[0:0] === 1'b1) ? newSel10_fu_1887_p3 : 32'd0);

assign x_V_d0 = ((or_cond2_fu_1335_p2[0:0] === 1'b1) ? newSel2_fu_1327_p3 : 32'd0);

always @ (posedge ap_clk) begin
    i_6_cast_reg_4872[8] <= 1'b0;
    tmp_91_reg_4886[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //sampleRNN_GRU
