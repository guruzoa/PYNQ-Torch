// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="backward_lite,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.564083,HLS_SYN_LAT=596,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=15,HLS_SYN_FF=9857,HLS_SYN_LUT=12378,HLS_VERSION=2018_2}" *)

module backward_lite (
        ap_clk,
        ap_rst_n,
        in_stream_TDATA,
        in_stream_TVALID,
        in_stream_TREADY,
        in_stream_TLAST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_pp0_stage0 = 33'd2;
parameter    ap_ST_fsm_state6 = 33'd4;
parameter    ap_ST_fsm_pp1_stage0 = 33'd8;
parameter    ap_ST_fsm_state11 = 33'd16;
parameter    ap_ST_fsm_pp2_stage0 = 33'd32;
parameter    ap_ST_fsm_state16 = 33'd64;
parameter    ap_ST_fsm_pp3_stage0 = 33'd128;
parameter    ap_ST_fsm_state71 = 33'd256;
parameter    ap_ST_fsm_state72 = 33'd512;
parameter    ap_ST_fsm_state73 = 33'd1024;
parameter    ap_ST_fsm_state74 = 33'd2048;
parameter    ap_ST_fsm_state75 = 33'd4096;
parameter    ap_ST_fsm_state76 = 33'd8192;
parameter    ap_ST_fsm_state77 = 33'd16384;
parameter    ap_ST_fsm_state78 = 33'd32768;
parameter    ap_ST_fsm_state79 = 33'd65536;
parameter    ap_ST_fsm_state80 = 33'd131072;
parameter    ap_ST_fsm_state81 = 33'd262144;
parameter    ap_ST_fsm_state82 = 33'd524288;
parameter    ap_ST_fsm_state83 = 33'd1048576;
parameter    ap_ST_fsm_state84 = 33'd2097152;
parameter    ap_ST_fsm_state85 = 33'd4194304;
parameter    ap_ST_fsm_state86 = 33'd8388608;
parameter    ap_ST_fsm_state87 = 33'd16777216;
parameter    ap_ST_fsm_state88 = 33'd33554432;
parameter    ap_ST_fsm_state89 = 33'd67108864;
parameter    ap_ST_fsm_state90 = 33'd134217728;
parameter    ap_ST_fsm_state91 = 33'd268435456;
parameter    ap_ST_fsm_state92 = 33'd536870912;
parameter    ap_ST_fsm_state93 = 33'd1073741824;
parameter    ap_ST_fsm_state94 = 33'd2147483648;
parameter    ap_ST_fsm_state95 = 33'd4294967296;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_stream_TDATA;
input   in_stream_TVALID;
output   in_stream_TREADY;
input   in_stream_TLAST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

 reg    ap_rst_n_inv;
reg   [31:0] in_stream_data_0_data_out;
wire    in_stream_data_0_vld_in;
wire    in_stream_data_0_vld_out;
wire    in_stream_data_0_ack_in;
reg    in_stream_data_0_ack_out;
reg   [31:0] in_stream_data_0_payload_A;
reg   [31:0] in_stream_data_0_payload_B;
reg    in_stream_data_0_sel_rd;
reg    in_stream_data_0_sel_wr;
wire    in_stream_data_0_sel;
wire    in_stream_data_0_load_A;
wire    in_stream_data_0_load_B;
reg   [1:0] in_stream_data_0_state;
wire    in_stream_data_0_state_cmp_full;
wire    in_stream_last_0_vld_in;
reg    in_stream_last_0_ack_out;
reg   [1:0] in_stream_last_0_state;
wire   [31:0] bias;
reg    bias_ap_vld;
wire   [31:0] w1;
reg    w1_ap_vld;
wire   [31:0] w2;
reg    w2_ap_vld;
wire   [31:0] w3;
reg    w3_ap_vld;
wire   [31:0] w4;
reg    w4_ap_vld;
wire   [31:0] w5;
reg    w5_ap_vld;
reg    in_stream_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond1_reg_2413;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond2_reg_2478;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond3_reg_2548;
reg   [5:0] i_reg_364;
reg   [5:0] i_reg_364_pp0_iter1_reg;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [5:0] i_reg_364_pp0_iter2_reg;
reg   [6:0] i_1_reg_376;
reg   [7:0] i_2_reg_387;
reg   [5:0] i_3_reg_398;
wire   [31:0] batch_x_mat_V_q0;
reg   [31:0] reg_527;
wire    ap_CS_fsm_state83;
wire   [31:0] batch_x_mat_V_q1;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
reg   [31:0] reg_532;
wire   [0:0] exitcond1_fu_537_p2;
reg   [0:0] exitcond1_reg_2413_pp0_iter1_reg;
reg   [0:0] exitcond1_reg_2413_pp0_iter2_reg;
wire   [5:0] i_6_fu_543_p2;
reg   [5:0] i_6_reg_2417;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] isneg_reg_2422;
reg   [0:0] isneg_reg_2422_pp0_iter2_reg;
reg   [10:0] exp_tmp_V_reg_2428;
wire   [51:0] tmp_23_fu_575_p1;
reg   [51:0] tmp_23_reg_2433;
wire   [0:0] tmp_2_fu_579_p2;
reg   [0:0] tmp_2_reg_2438;
reg   [0:0] tmp_2_reg_2438_pp0_iter2_reg;
wire   [53:0] man_V_2_fu_605_p3;
reg   [53:0] man_V_2_reg_2444;
wire  signed [11:0] sh_amt_fu_636_p3;
reg  signed [11:0] sh_amt_reg_2449;
wire   [0:0] tmp_9_fu_644_p2;
reg   [0:0] tmp_9_reg_2455;
wire   [31:0] tmp_25_fu_650_p1;
reg   [31:0] tmp_25_reg_2460;
wire   [0:0] sel_tmp7_fu_681_p2;
reg   [0:0] sel_tmp7_reg_2466;
wire   [0:0] sel_tmp4_fu_699_p2;
reg   [0:0] sel_tmp4_reg_2472;
wire   [0:0] exitcond2_fu_817_p2;
wire    ap_block_state7_pp1_stage0_iter0;
reg    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_state9_pp1_stage0_iter2;
wire    ap_block_state10_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond2_reg_2478_pp1_iter1_reg;
reg   [0:0] exitcond2_reg_2478_pp1_iter2_reg;
wire   [6:0] tmp_10_fu_823_p2;
reg   [6:0] tmp_10_reg_2482;
reg   [6:0] tmp_10_reg_2482_pp1_iter1_reg;
reg   [6:0] tmp_10_reg_2482_pp1_iter2_reg;
wire   [6:0] i_7_fu_829_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [0:0] isneg_1_reg_2492;
reg   [0:0] isneg_1_reg_2492_pp1_iter2_reg;
reg   [10:0] exp_tmp_V_1_reg_2498;
wire   [51:0] tmp_49_fu_861_p1;
reg   [51:0] tmp_49_reg_2503;
wire   [0:0] tmp_16_fu_865_p2;
reg   [0:0] tmp_16_reg_2508;
reg   [0:0] tmp_16_reg_2508_pp1_iter2_reg;
wire   [53:0] man_V_5_fu_891_p3;
reg   [53:0] man_V_5_reg_2514;
wire  signed [11:0] sh_amt_1_fu_922_p3;
reg  signed [11:0] sh_amt_1_reg_2519;
wire   [0:0] tmp_22_fu_930_p2;
reg   [0:0] tmp_22_reg_2525;
wire   [31:0] tmp_51_fu_936_p1;
reg   [31:0] tmp_51_reg_2530;
wire   [0:0] sel_tmp12_fu_967_p2;
reg   [0:0] sel_tmp12_reg_2536;
wire   [0:0] sel_tmp17_fu_985_p2;
reg   [0:0] sel_tmp17_reg_2542;
wire   [0:0] exitcond3_fu_1102_p2;
wire    ap_block_state12_pp2_stage0_iter0;
reg    ap_block_state13_pp2_stage0_iter1;
wire    ap_block_state14_pp2_stage0_iter2;
wire    ap_block_state15_pp2_stage0_iter3;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond3_reg_2548_pp2_iter1_reg;
reg   [0:0] exitcond3_reg_2548_pp2_iter2_reg;
wire   [7:0] tmp_26_fu_1108_p2;
reg   [7:0] tmp_26_reg_2552;
reg   [7:0] tmp_26_reg_2552_pp2_iter1_reg;
reg   [7:0] tmp_26_reg_2552_pp2_iter2_reg;
wire   [7:0] i_9_fu_1114_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [0:0] isneg_2_reg_2562;
reg   [0:0] isneg_2_reg_2562_pp2_iter2_reg;
reg   [10:0] exp_tmp_V_2_reg_2568;
wire   [51:0] tmp_88_fu_1146_p1;
reg   [51:0] tmp_88_reg_2573;
wire   [0:0] tmp_32_fu_1150_p2;
reg   [0:0] tmp_32_reg_2578;
reg   [0:0] tmp_32_reg_2578_pp2_iter2_reg;
wire   [53:0] man_V_8_fu_1176_p3;
reg   [53:0] man_V_8_reg_2584;
wire  signed [11:0] sh_amt_2_fu_1207_p3;
reg  signed [11:0] sh_amt_2_reg_2589;
wire   [0:0] tmp_40_fu_1215_p2;
reg   [0:0] tmp_40_reg_2595;
wire   [31:0] tmp_97_fu_1221_p1;
reg   [31:0] tmp_97_reg_2600;
wire   [0:0] sel_tmp21_fu_1252_p2;
reg   [0:0] sel_tmp21_reg_2606;
wire   [0:0] sel_tmp26_fu_1270_p2;
reg   [0:0] sel_tmp26_reg_2612;
wire   [0:0] exitcond4_fu_1387_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state17_pp3_stage0_iter0;
wire    ap_block_state18_pp3_stage0_iter1;
wire    ap_block_state19_pp3_stage0_iter2;
wire    ap_block_state20_pp3_stage0_iter3;
wire    ap_block_state21_pp3_stage0_iter4;
wire    ap_block_state22_pp3_stage0_iter5;
wire    ap_block_state23_pp3_stage0_iter6;
wire    ap_block_state24_pp3_stage0_iter7;
wire    ap_block_state25_pp3_stage0_iter8;
wire    ap_block_state26_pp3_stage0_iter9;
wire    ap_block_state27_pp3_stage0_iter10;
wire    ap_block_state28_pp3_stage0_iter11;
wire    ap_block_state29_pp3_stage0_iter12;
wire    ap_block_state30_pp3_stage0_iter13;
wire    ap_block_state31_pp3_stage0_iter14;
wire    ap_block_state32_pp3_stage0_iter15;
wire    ap_block_state33_pp3_stage0_iter16;
wire    ap_block_state34_pp3_stage0_iter17;
wire    ap_block_state35_pp3_stage0_iter18;
wire    ap_block_state36_pp3_stage0_iter19;
wire    ap_block_state37_pp3_stage0_iter20;
wire    ap_block_state38_pp3_stage0_iter21;
wire    ap_block_state39_pp3_stage0_iter22;
wire    ap_block_state40_pp3_stage0_iter23;
wire    ap_block_state41_pp3_stage0_iter24;
wire    ap_block_state42_pp3_stage0_iter25;
wire    ap_block_state43_pp3_stage0_iter26;
wire    ap_block_state44_pp3_stage0_iter27;
wire    ap_block_state45_pp3_stage0_iter28;
wire    ap_block_state46_pp3_stage0_iter29;
wire    ap_block_state47_pp3_stage0_iter30;
wire    ap_block_state48_pp3_stage0_iter31;
wire    ap_block_state49_pp3_stage0_iter32;
wire    ap_block_state50_pp3_stage0_iter33;
wire    ap_block_state51_pp3_stage0_iter34;
wire    ap_block_state52_pp3_stage0_iter35;
wire    ap_block_state53_pp3_stage0_iter36;
wire    ap_block_state54_pp3_stage0_iter37;
wire    ap_block_state55_pp3_stage0_iter38;
wire    ap_block_state56_pp3_stage0_iter39;
wire    ap_block_state57_pp3_stage0_iter40;
wire    ap_block_state58_pp3_stage0_iter41;
wire    ap_block_state59_pp3_stage0_iter42;
wire    ap_block_state60_pp3_stage0_iter43;
wire    ap_block_state61_pp3_stage0_iter44;
wire    ap_block_state62_pp3_stage0_iter45;
wire    ap_block_state63_pp3_stage0_iter46;
wire    ap_block_state64_pp3_stage0_iter47;
wire    ap_block_state65_pp3_stage0_iter48;
wire    ap_block_state66_pp3_stage0_iter49;
wire    ap_block_state67_pp3_stage0_iter50;
wire    ap_block_state68_pp3_stage0_iter51;
wire    ap_block_state69_pp3_stage0_iter52;
wire    ap_block_state70_pp3_stage0_iter53;
wire    ap_block_pp3_stage0_11001;
wire   [5:0] i_10_fu_1393_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [63:0] tmp_46_fu_1399_p1;
reg   [63:0] tmp_46_reg_2627;
reg   [63:0] tmp_46_reg_2627_pp3_iter1_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter2_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter3_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter4_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter5_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter6_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter7_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter8_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter9_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter10_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter11_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter12_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter13_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter14_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter15_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter16_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter17_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter18_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter19_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter20_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter21_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter22_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter23_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter24_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter25_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter26_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter27_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter28_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter29_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter30_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter31_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter32_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter33_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter34_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter35_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter36_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter37_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter38_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter39_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter40_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter41_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter42_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter43_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter44_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter45_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter46_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter47_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter48_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter49_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter50_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter51_reg;
reg   [63:0] tmp_46_reg_2627_pp3_iter52_reg;
wire   [31:0] abs_dif_V_3_fu_1405_p2;
reg   [31:0] abs_dif_V_3_reg_2643;
reg   [0:0] tmp_111_reg_2651;
wire   [0:0] icmp2_fu_1444_p2;
reg   [0:0] icmp2_reg_2661;
reg   [0:0] icmp2_reg_2661_pp3_iter3_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter4_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter5_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter6_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter7_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter8_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter9_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter10_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter11_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter12_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter13_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter14_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter15_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter16_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter17_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter18_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter19_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter20_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter21_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter22_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter23_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter24_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter25_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter26_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter27_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter28_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter29_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter30_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter31_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter32_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter33_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter34_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter35_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter36_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter37_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter38_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter39_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter40_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter41_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter42_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter43_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter44_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter45_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter46_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter47_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter48_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter49_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter50_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter51_reg;
reg   [0:0] icmp2_reg_2661_pp3_iter52_reg;
wire   [5:0] i_8_fu_1494_p2;
reg   [5:0] i_8_reg_2673;
wire    ap_CS_fsm_state72;
wire   [0:0] exitcond5_fu_1488_p2;
wire   [31:0] tmp_58_fu_1505_p2;
reg   [31:0] tmp_58_reg_2683;
wire   [31:0] bias_temp_V_fu_1511_p2;
wire    ap_CS_fsm_state73;
wire   [0:0] tmp_57_fu_1517_p2;
reg   [0:0] tmp_57_reg_2693;
wire    ap_CS_fsm_state74;
wire   [0:0] is_neg_fu_1523_p3;
reg   [0:0] is_neg_reg_2698;
wire   [31:0] tmp32_V_1_fu_1556_p2;
reg   [31:0] tmp32_V_1_reg_2703;
wire   [7:0] tmp_114_fu_1562_p1;
reg   [7:0] tmp_114_reg_2708;
wire   [31:0] tmp32_V_24_fu_1566_p1;
reg   [31:0] tmp32_V_24_reg_2713;
wire    ap_CS_fsm_state80;
wire   [0:0] tmp_59_fu_1580_p2;
reg   [0:0] tmp_59_reg_2718;
wire   [5:0] i_11_fu_1636_p2;
reg   [5:0] i_11_reg_2726;
wire    ap_CS_fsm_state82;
wire   [0:0] exitcond_fu_1630_p2;
wire  signed [5:0] tmp_82_fu_1648_p2;
reg  signed [5:0] tmp_82_reg_2741;
wire   [31:0] tmp_66_fu_1659_p2;
reg   [31:0] tmp_66_reg_2751;
wire   [31:0] tmp_73_fu_1665_p2;
reg   [31:0] tmp_73_reg_2756;
wire   [31:0] tmp_79_fu_1671_p2;
reg   [31:0] tmp_79_reg_2761;
wire   [31:0] tmp_91_fu_1677_p2;
reg   [31:0] tmp_91_reg_2766;
wire   [31:0] tmp_99_fu_1683_p2;
reg   [31:0] tmp_99_reg_2771;
wire   [31:0] smooth_grad_V_q1;
reg   [31:0] smooth_grad_V_load_reg_2776;
wire  signed [47:0] OP1_V_cast_fu_1710_p1;
reg  signed [47:0] OP1_V_cast_reg_2791;
reg   [31:0] p_Val2_11_reg_2798;
reg   [31:0] p_Val2_13_reg_2803;
wire   [31:0] w1_temp_V_fu_1766_p2;
reg   [31:0] w1_temp_V_reg_2813;
wire   [31:0] w2_temp_V_fu_1771_p2;
reg   [31:0] w2_temp_V_reg_2818;
reg   [31:0] p_Val2_15_reg_2823;
reg   [31:0] p_Val2_17_reg_2828;
wire   [31:0] w3_temp_V_fu_1814_p2;
reg   [31:0] w3_temp_V_reg_2833;
wire    ap_CS_fsm_state86;
wire   [31:0] w4_temp_V_fu_1819_p2;
reg   [31:0] w4_temp_V_reg_2838;
reg   [31:0] p_Val2_19_reg_2843;
wire   [31:0] w5_temp_V_fu_1843_p2;
wire    ap_CS_fsm_state87;
wire   [0:0] tmp_65_fu_1848_p2;
reg   [0:0] tmp_65_reg_2853;
wire    ap_CS_fsm_state88;
wire   [0:0] is_neg_1_fu_1854_p3;
reg   [0:0] is_neg_1_reg_2858;
wire   [31:0] tmp32_V_3_fu_1887_p2;
reg   [31:0] tmp32_V_3_reg_2863;
wire   [7:0] tmp_116_fu_1893_p1;
reg   [7:0] tmp_116_reg_2868;
wire   [0:0] tmp_72_fu_1897_p2;
reg   [0:0] tmp_72_reg_2873;
wire   [0:0] is_neg_2_fu_1903_p3;
reg   [0:0] is_neg_2_reg_2878;
wire   [31:0] tmp32_V_7_fu_1936_p2;
reg   [31:0] tmp32_V_7_reg_2883;
wire   [7:0] tmp_118_fu_1942_p1;
reg   [7:0] tmp_118_reg_2888;
wire   [0:0] tmp_78_fu_1946_p2;
reg   [0:0] tmp_78_reg_2893;
wire   [0:0] is_neg_3_fu_1952_p3;
reg   [0:0] is_neg_3_reg_2898;
wire   [31:0] tmp32_V_14_fu_1985_p2;
reg   [31:0] tmp32_V_14_reg_2903;
wire   [7:0] tmp_120_fu_1991_p1;
reg   [7:0] tmp_120_reg_2908;
wire   [0:0] tmp_90_fu_1995_p2;
reg   [0:0] tmp_90_reg_2913;
wire   [0:0] is_neg_4_fu_2001_p3;
reg   [0:0] is_neg_4_reg_2918;
wire   [31:0] tmp32_V_18_fu_2034_p2;
reg   [31:0] tmp32_V_18_reg_2923;
wire   [7:0] tmp_122_fu_2040_p1;
reg   [7:0] tmp_122_reg_2928;
wire   [0:0] tmp_98_fu_2044_p2;
reg   [0:0] tmp_98_reg_2933;
wire   [0:0] is_neg_5_fu_2050_p3;
reg   [0:0] is_neg_5_reg_2938;
wire   [31:0] tmp32_V_23_fu_2083_p2;
reg   [31:0] tmp32_V_23_reg_2943;
wire   [7:0] tmp_124_fu_2089_p1;
reg   [7:0] tmp_124_reg_2948;
wire   [31:0] tmp32_V_25_fu_2093_p1;
reg   [31:0] tmp32_V_25_reg_2953;
wire    ap_CS_fsm_state94;
wire   [0:0] tmp_67_fu_2107_p2;
reg   [0:0] tmp_67_reg_2958;
wire   [31:0] tmp32_V_26_fu_2113_p1;
reg   [31:0] tmp32_V_26_reg_2963;
wire   [0:0] tmp_74_fu_2127_p2;
reg   [0:0] tmp_74_reg_2968;
wire   [31:0] tmp32_V_27_fu_2133_p1;
reg   [31:0] tmp32_V_27_reg_2973;
wire   [0:0] tmp_81_fu_2147_p2;
reg   [0:0] tmp_81_reg_2978;
wire   [31:0] tmp32_V_28_fu_2153_p1;
reg   [31:0] tmp32_V_28_reg_2983;
wire   [0:0] tmp_93_fu_2167_p2;
reg   [0:0] tmp_93_reg_2988;
wire   [31:0] tmp32_V_29_fu_2173_p1;
reg   [31:0] tmp32_V_29_reg_2993;
wire   [0:0] tmp_100_fu_2187_p2;
reg   [0:0] tmp_100_reg_2998;
wire    ap_CS_fsm_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire    ap_CS_fsm_state11;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state12;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
wire    ap_CS_fsm_state16;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state17;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg    ap_enable_reg_pp3_iter9;
reg    ap_enable_reg_pp3_iter10;
reg    ap_enable_reg_pp3_iter11;
reg    ap_enable_reg_pp3_iter12;
reg    ap_enable_reg_pp3_iter13;
reg    ap_enable_reg_pp3_iter14;
reg    ap_enable_reg_pp3_iter15;
reg    ap_enable_reg_pp3_iter16;
reg    ap_enable_reg_pp3_iter17;
reg    ap_enable_reg_pp3_iter18;
reg    ap_enable_reg_pp3_iter19;
reg    ap_enable_reg_pp3_iter20;
reg    ap_enable_reg_pp3_iter21;
reg    ap_enable_reg_pp3_iter22;
reg    ap_enable_reg_pp3_iter23;
reg    ap_enable_reg_pp3_iter24;
reg    ap_enable_reg_pp3_iter25;
reg    ap_enable_reg_pp3_iter26;
reg    ap_enable_reg_pp3_iter27;
reg    ap_enable_reg_pp3_iter28;
reg    ap_enable_reg_pp3_iter29;
reg    ap_enable_reg_pp3_iter30;
reg    ap_enable_reg_pp3_iter31;
reg    ap_enable_reg_pp3_iter32;
reg    ap_enable_reg_pp3_iter33;
reg    ap_enable_reg_pp3_iter34;
reg    ap_enable_reg_pp3_iter35;
reg    ap_enable_reg_pp3_iter36;
reg    ap_enable_reg_pp3_iter37;
reg    ap_enable_reg_pp3_iter38;
reg    ap_enable_reg_pp3_iter39;
reg    ap_enable_reg_pp3_iter40;
reg    ap_enable_reg_pp3_iter41;
reg    ap_enable_reg_pp3_iter42;
reg    ap_enable_reg_pp3_iter43;
reg    ap_enable_reg_pp3_iter44;
reg    ap_enable_reg_pp3_iter45;
reg    ap_enable_reg_pp3_iter46;
reg    ap_enable_reg_pp3_iter47;
reg    ap_enable_reg_pp3_iter48;
reg    ap_enable_reg_pp3_iter49;
reg    ap_enable_reg_pp3_iter50;
reg    ap_enable_reg_pp3_iter51;
reg    ap_enable_reg_pp3_iter52;
reg    ap_enable_reg_pp3_iter53;
reg   [4:0] smooth_grad_V_address0;
reg    smooth_grad_V_ce0;
reg    smooth_grad_V_we0;
wire   [31:0] smooth_grad_V_d0;
wire   [31:0] smooth_grad_V_q0;
reg   [4:0] smooth_grad_V_address1;
reg    smooth_grad_V_ce1;
reg    smooth_grad_V_we1;
wire   [31:0] smooth_grad_V_d1;
reg   [7:0] batch_x_mat_V_address0;
reg    batch_x_mat_V_ce0;
reg    batch_x_mat_V_we0;
wire   [31:0] batch_x_mat_V_d0;
reg   [7:0] batch_x_mat_V_address1;
reg    batch_x_mat_V_ce1;
reg   [4:0] nn_out_mat_V_address0;
reg    nn_out_mat_V_ce0;
reg    nn_out_mat_V_we0;
wire   [31:0] nn_out_mat_V_d0;
wire   [31:0] nn_out_mat_V_q0;
reg   [4:0] batch_y_mat_V_address0;
reg    batch_y_mat_V_ce0;
reg    batch_y_mat_V_we0;
wire   [31:0] batch_y_mat_V_d0;
wire   [31:0] batch_y_mat_V_q0;
reg   [5:0] ap_phi_mux_i_phi_fu_368_p4;
reg   [31:0] p_Val2_6_reg_409;
wire    ap_CS_fsm_state71;
reg   [5:0] i_4_reg_421;
reg   [31:0] p_Val2_32_reg_432;
wire    ap_CS_fsm_state81;
reg   [31:0] p_Val2_8_reg_444;
reg   [31:0] p_Val2_9_reg_456;
reg   [31:0] p_Val2_3_reg_468;
reg   [31:0] p_Val2_4_reg_480;
reg   [5:0] i_5_reg_492;
wire   [63:0] tmp_6_fu_705_p1;
wire   [63:0] tmp_11_fu_991_p1;
wire   [63:0] tmp_27_fu_1276_p1;
wire    ap_block_pp3_stage0;
wire   [63:0] tmp_61_fu_1500_p1;
wire   [63:0] tmp_80_fu_1642_p1;
wire   [63:0] tmp_83_fu_1654_p1;
wire   [63:0] tmp_86_fu_1697_p1;
wire   [63:0] tmp_89_fu_1705_p1;
wire   [63:0] tmp_92_fu_1761_p1;
wire    ap_CS_fsm_state95;
reg   [31:0] grp_fu_504_p0;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state89;
wire   [63:0] grp_fu_519_p1;
wire   [63:0] ireg_V_fu_549_p1;
wire   [62:0] tmp_1_fu_553_p1;
wire   [52:0] tmp_8_fu_588_p3;
wire   [53:0] p_Result_s_fu_595_p1;
wire   [53:0] man_V_1_fu_599_p2;
wire   [11:0] tmp_s_fu_585_p1;
wire   [11:0] F2_fu_612_p2;
wire   [0:0] tmp_4_fu_618_p2;
wire   [11:0] tmp_5_fu_624_p2;
wire   [11:0] tmp_7_fu_630_p2;
wire   [6:0] tmp_33_fu_654_p4;
wire   [0:0] sel_tmp6_demorgan_fu_670_p2;
wire   [0:0] sel_tmp6_fu_675_p2;
wire   [0:0] sel_tmp21_demorgan_fu_687_p2;
wire   [0:0] icmp_fu_664_p2;
wire   [0:0] sel_tmp3_fu_693_p2;
wire  signed [31:0] sh_amt_cast_fu_710_p1;
wire   [53:0] tmp_15_fu_718_p1;
wire   [53:0] tmp_17_fu_722_p2;
wire   [0:0] sel_tmp1_fu_743_p2;
wire   [0:0] tmp_3_fu_713_p2;
wire   [0:0] sel_tmp8_fu_753_p2;
wire   [31:0] tmp_18_fu_738_p2;
wire   [31:0] tmp_36_fu_727_p1;
wire   [0:0] sel_tmp_fu_764_p2;
wire   [0:0] sel_tmp9_fu_759_p2;
wire   [31:0] storemerge_fu_731_p3;
wire   [0:0] sel_tmp2_fu_748_p2;
wire   [0:0] or_cond_fu_776_p2;
wire   [31:0] newSel_fu_769_p3;
wire   [31:0] newSel1_fu_781_p3;
wire   [0:0] or_cond1_fu_788_p2;
wire   [0:0] or_cond2_fu_802_p2;
wire   [31:0] newSel2_fu_794_p3;
wire   [63:0] ireg_V_1_fu_835_p1;
wire   [62:0] tmp_42_fu_839_p1;
wire   [52:0] tmp_14_fu_874_p3;
wire   [53:0] p_Result_2_fu_881_p1;
wire   [53:0] man_V_4_fu_885_p2;
wire   [11:0] tmp_13_fu_871_p1;
wire   [11:0] F2_1_fu_898_p2;
wire   [0:0] tmp_19_fu_904_p2;
wire   [11:0] tmp_20_fu_910_p2;
wire   [11:0] tmp_21_fu_916_p2;
wire   [6:0] tmp_53_fu_940_p4;
wire   [0:0] sel_tmp31_demorgan_fu_956_p2;
wire   [0:0] sel_tmp11_fu_961_p2;
wire   [0:0] sel_tmp46_demorgan_fu_973_p2;
wire   [0:0] icmp7_fu_950_p2;
wire   [0:0] sel_tmp16_fu_979_p2;
wire  signed [31:0] sh_amt_1_cast_fu_995_p1;
wire   [53:0] tmp_31_fu_1003_p1;
wire   [53:0] tmp_34_fu_1007_p2;
wire   [0:0] sel_tmp5_fu_1028_p2;
wire   [0:0] tmp_24_fu_998_p2;
wire   [0:0] sel_tmp13_fu_1038_p2;
wire   [31:0] tmp_35_fu_1023_p2;
wire   [31:0] tmp_63_fu_1012_p1;
wire   [0:0] sel_tmp15_fu_1049_p2;
wire   [0:0] sel_tmp14_fu_1044_p2;
wire   [31:0] storemerge2_fu_1016_p3;
wire   [0:0] sel_tmp10_fu_1033_p2;
wire   [0:0] or_cond3_fu_1061_p2;
wire   [31:0] newSel4_fu_1054_p3;
wire   [31:0] newSel5_fu_1066_p3;
wire   [0:0] or_cond4_fu_1073_p2;
wire   [0:0] or_cond5_fu_1087_p2;
wire   [31:0] newSel6_fu_1079_p3;
wire   [63:0] ireg_V_2_fu_1120_p1;
wire   [62:0] tmp_70_fu_1124_p1;
wire   [52:0] tmp_30_fu_1159_p3;
wire   [53:0] p_Result_3_fu_1166_p1;
wire   [53:0] man_V_7_fu_1170_p2;
wire   [11:0] tmp_29_fu_1156_p1;
wire   [11:0] F2_2_fu_1183_p2;
wire   [0:0] tmp_37_fu_1189_p2;
wire   [11:0] tmp_38_fu_1195_p2;
wire   [11:0] tmp_39_fu_1201_p2;
wire   [6:0] tmp_104_fu_1225_p4;
wire   [0:0] sel_tmp56_demorgan_fu_1241_p2;
wire   [0:0] sel_tmp20_fu_1246_p2;
wire   [0:0] sel_tmp71_demorgan_fu_1258_p2;
wire   [0:0] icmp1_fu_1235_p2;
wire   [0:0] sel_tmp25_fu_1264_p2;
wire  signed [31:0] sh_amt_2_cast_fu_1280_p1;
wire   [53:0] tmp_43_fu_1288_p1;
wire   [53:0] tmp_44_fu_1292_p2;
wire   [0:0] sel_tmp18_fu_1313_p2;
wire   [0:0] tmp_41_fu_1283_p2;
wire   [0:0] sel_tmp22_fu_1323_p2;
wire   [31:0] tmp_45_fu_1308_p2;
wire   [31:0] tmp_110_fu_1297_p1;
wire   [0:0] sel_tmp24_fu_1334_p2;
wire   [0:0] sel_tmp23_fu_1329_p2;
wire   [31:0] storemerge4_fu_1301_p3;
wire   [0:0] sel_tmp19_fu_1318_p2;
wire   [0:0] or_cond6_fu_1346_p2;
wire   [31:0] newSel8_fu_1339_p3;
wire   [31:0] newSel9_fu_1351_p3;
wire   [0:0] or_cond7_fu_1358_p2;
wire   [0:0] or_cond8_fu_1372_p2;
wire   [31:0] newSel10_fu_1364_p3;
wire   [31:0] abs_dif_V_fu_1419_p2;
wire  signed [31:0] abs_dif_V_1_fu_1424_p3;
wire   [15:0] tmp_112_fu_1434_p4;
wire   [47:0] grp_fu_1457_p0;
wire   [26:0] tmp_50_fu_1463_p4;
wire   [47:0] grp_fu_1457_p2;
wire   [31:0] p_Val2_36_fu_1531_p3;
reg   [31:0] p_Result_7_fu_1538_p4;
reg   [31:0] num_zeros_fu_1548_p3;
wire   [31:0] grp_fu_504_p1;
wire   [7:0] p_Result_5_fu_1570_p4;
wire   [7:0] tmp_60_fu_1586_p2;
wire   [7:0] tmp_62_fu_1591_p1;
wire   [7:0] p_Repl2_1_trunc_fu_1594_p2;
wire   [8:0] tmp_64_fu_1600_p3;
wire   [31:0] p_Result_8_fu_1607_p5;
wire   [31:0] f_fu_1618_p1;
wire   [6:0] tmp_105_fu_1689_p3;
wire  signed [6:0] tmp_88_cast_fu_1702_p1;
wire  signed [31:0] p_Val2_7_fu_1717_p0;
wire  signed [31:0] p_Val2_7_fu_1717_p1;
wire   [47:0] p_Val2_7_fu_1717_p2;
wire  signed [31:0] p_Val2_12_fu_1737_p0;
wire  signed [31:0] p_Val2_12_fu_1737_p1;
wire   [47:0] p_Val2_12_fu_1737_p2;
wire   [7:0] tmp_106_fu_1753_p3;
wire  signed [31:0] p_Val2_14_fu_1780_p0;
wire  signed [31:0] p_Val2_14_fu_1780_p1;
wire   [47:0] p_Val2_14_fu_1780_p2;
wire  signed [31:0] p_Val2_16_fu_1799_p0;
wire  signed [31:0] p_Val2_16_fu_1799_p1;
wire   [47:0] p_Val2_16_fu_1799_p2;
wire  signed [31:0] p_Val2_18_fu_1828_p0;
wire  signed [31:0] p_Val2_18_fu_1828_p1;
wire   [47:0] p_Val2_18_fu_1828_p2;
wire   [31:0] p_Val2_37_fu_1862_p3;
reg   [31:0] p_Result_10_fu_1869_p4;
reg   [31:0] num_zeros_1_fu_1879_p3;
wire   [31:0] p_Val2_38_fu_1911_p3;
reg   [31:0] p_Result_12_fu_1918_p4;
reg   [31:0] num_zeros_2_fu_1928_p3;
wire   [31:0] p_Val2_39_fu_1960_p3;
reg   [31:0] p_Result_14_fu_1967_p4;
reg   [31:0] num_zeros_3_fu_1977_p3;
wire   [31:0] p_Val2_s_fu_2009_p3;
reg   [31:0] p_Result_16_fu_2016_p4;
reg   [31:0] num_zeros_4_fu_2026_p3;
wire   [31:0] p_Val2_40_fu_2058_p3;
reg   [31:0] p_Result_18_fu_2065_p4;
reg   [31:0] num_zeros_5_fu_2075_p3;
wire   [7:0] p_Result_1_fu_2097_p4;
wire   [31:0] grp_fu_507_p1;
wire   [7:0] p_Result_4_fu_2117_p4;
wire   [31:0] grp_fu_510_p1;
wire   [7:0] p_Result_9_fu_2137_p4;
wire   [31:0] grp_fu_513_p1;
wire   [7:0] p_Result_s_27_fu_2157_p4;
wire   [31:0] grp_fu_516_p1;
wire   [7:0] p_Result_6_fu_2177_p4;
wire   [7:0] tmp_68_fu_2193_p2;
wire   [7:0] tmp_69_fu_2198_p1;
wire   [7:0] p_Repl2_4_trunc_fu_2201_p2;
wire   [8:0] tmp_71_fu_2207_p3;
wire   [31:0] p_Result_11_fu_2214_p5;
wire   [31:0] f_2_fu_2225_p1;
wire   [7:0] tmp_75_fu_2237_p2;
wire   [7:0] tmp_76_fu_2242_p1;
wire   [7:0] p_Repl2_7_trunc_fu_2245_p2;
wire   [8:0] tmp_77_fu_2251_p3;
wire   [31:0] p_Result_13_fu_2258_p5;
wire   [31:0] f_4_fu_2269_p1;
wire   [7:0] tmp_84_fu_2281_p2;
wire   [7:0] tmp_85_fu_2286_p1;
wire   [7:0] p_Repl2_10_trunc_fu_2289_p2;
wire   [8:0] tmp_87_fu_2295_p3;
wire   [31:0] p_Result_15_fu_2302_p5;
wire   [31:0] f_6_fu_2313_p1;
wire   [7:0] tmp_94_fu_2325_p2;
wire   [7:0] tmp_95_fu_2330_p1;
wire   [7:0] p_Repl2_13_trunc_fu_2333_p2;
wire   [8:0] tmp_96_fu_2339_p3;
wire   [31:0] p_Result_17_fu_2346_p5;
wire   [31:0] f_8_fu_2357_p1;
wire   [7:0] tmp_101_fu_2369_p2;
wire   [7:0] tmp_102_fu_2374_p1;
wire   [7:0] p_Repl2_16_trunc_fu_2377_p2;
wire   [8:0] tmp_103_fu_2383_p3;
wire   [31:0] p_Result_19_fu_2390_p5;
wire   [31:0] f_11_fu_2401_p1;
reg   [32:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 in_stream_data_0_sel_rd = 1'b0;
#0 in_stream_data_0_sel_wr = 1'b0;
#0 in_stream_data_0_state = 2'd0;
#0 in_stream_last_0_state = 2'd0;
#0 ap_CS_fsm = 33'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter11 = 1'b0;
#0 ap_enable_reg_pp3_iter12 = 1'b0;
#0 ap_enable_reg_pp3_iter13 = 1'b0;
#0 ap_enable_reg_pp3_iter14 = 1'b0;
#0 ap_enable_reg_pp3_iter15 = 1'b0;
#0 ap_enable_reg_pp3_iter16 = 1'b0;
#0 ap_enable_reg_pp3_iter17 = 1'b0;
#0 ap_enable_reg_pp3_iter18 = 1'b0;
#0 ap_enable_reg_pp3_iter19 = 1'b0;
#0 ap_enable_reg_pp3_iter20 = 1'b0;
#0 ap_enable_reg_pp3_iter21 = 1'b0;
#0 ap_enable_reg_pp3_iter22 = 1'b0;
#0 ap_enable_reg_pp3_iter23 = 1'b0;
#0 ap_enable_reg_pp3_iter24 = 1'b0;
#0 ap_enable_reg_pp3_iter25 = 1'b0;
#0 ap_enable_reg_pp3_iter26 = 1'b0;
#0 ap_enable_reg_pp3_iter27 = 1'b0;
#0 ap_enable_reg_pp3_iter28 = 1'b0;
#0 ap_enable_reg_pp3_iter29 = 1'b0;
#0 ap_enable_reg_pp3_iter30 = 1'b0;
#0 ap_enable_reg_pp3_iter31 = 1'b0;
#0 ap_enable_reg_pp3_iter32 = 1'b0;
#0 ap_enable_reg_pp3_iter33 = 1'b0;
#0 ap_enable_reg_pp3_iter34 = 1'b0;
#0 ap_enable_reg_pp3_iter35 = 1'b0;
#0 ap_enable_reg_pp3_iter36 = 1'b0;
#0 ap_enable_reg_pp3_iter37 = 1'b0;
#0 ap_enable_reg_pp3_iter38 = 1'b0;
#0 ap_enable_reg_pp3_iter39 = 1'b0;
#0 ap_enable_reg_pp3_iter40 = 1'b0;
#0 ap_enable_reg_pp3_iter41 = 1'b0;
#0 ap_enable_reg_pp3_iter42 = 1'b0;
#0 ap_enable_reg_pp3_iter43 = 1'b0;
#0 ap_enable_reg_pp3_iter44 = 1'b0;
#0 ap_enable_reg_pp3_iter45 = 1'b0;
#0 ap_enable_reg_pp3_iter46 = 1'b0;
#0 ap_enable_reg_pp3_iter47 = 1'b0;
#0 ap_enable_reg_pp3_iter48 = 1'b0;
#0 ap_enable_reg_pp3_iter49 = 1'b0;
#0 ap_enable_reg_pp3_iter50 = 1'b0;
#0 ap_enable_reg_pp3_iter51 = 1'b0;
#0 ap_enable_reg_pp3_iter52 = 1'b0;
#0 ap_enable_reg_pp3_iter53 = 1'b0;
end

backward_lite_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
backward_lite_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .bias(bias),
    .bias_ap_vld(bias_ap_vld),
    .w1(w1),
    .w1_ap_vld(w1_ap_vld),
    .w2(w2),
    .w2_ap_vld(w2_ap_vld),
    .w3(w3),
    .w3_ap_vld(w3_ap_vld),
    .w4(w4),
    .w4_ap_vld(w4_ap_vld),
    .w5(w5),
    .w5_ap_vld(w5_ap_vld)
);

backward_lite_smobkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
smooth_grad_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(smooth_grad_V_address0),
    .ce0(smooth_grad_V_ce0),
    .we0(smooth_grad_V_we0),
    .d0(smooth_grad_V_d0),
    .q0(smooth_grad_V_q0),
    .address1(smooth_grad_V_address1),
    .ce1(smooth_grad_V_ce1),
    .we1(smooth_grad_V_we1),
    .d1(smooth_grad_V_d1),
    .q1(smooth_grad_V_q1)
);

backward_lite_batcud #(
    .DataWidth( 32 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
batch_x_mat_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(batch_x_mat_V_address0),
    .ce0(batch_x_mat_V_ce0),
    .we0(batch_x_mat_V_we0),
    .d0(batch_x_mat_V_d0),
    .q0(batch_x_mat_V_q0),
    .address1(batch_x_mat_V_address1),
    .ce1(batch_x_mat_V_ce1),
    .q1(batch_x_mat_V_q1)
);

backward_lite_nn_dEe #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
nn_out_mat_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(nn_out_mat_V_address0),
    .ce0(nn_out_mat_V_ce0),
    .we0(nn_out_mat_V_we0),
    .d0(nn_out_mat_V_d0),
    .q0(nn_out_mat_V_q0)
);

backward_lite_nn_dEe #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
batch_y_mat_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(batch_y_mat_V_address0),
    .ce0(batch_y_mat_V_ce0),
    .we0(batch_y_mat_V_we0),
    .d0(batch_y_mat_V_d0),
    .q0(batch_y_mat_V_q0)
);

backward_lite_uitfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backward_lite_uitfYi_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_504_p0),
    .ce(1'b1),
    .dout(grp_fu_504_p1)
);

backward_lite_uitfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backward_lite_uitfYi_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp32_V_7_reg_2883),
    .ce(1'b1),
    .dout(grp_fu_507_p1)
);

backward_lite_uitfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backward_lite_uitfYi_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp32_V_14_reg_2903),
    .ce(1'b1),
    .dout(grp_fu_510_p1)
);

backward_lite_uitfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backward_lite_uitfYi_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp32_V_18_reg_2923),
    .ce(1'b1),
    .dout(grp_fu_513_p1)
);

backward_lite_uitfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backward_lite_uitfYi_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp32_V_23_reg_2943),
    .ce(1'b1),
    .dout(grp_fu_516_p1)
);

backward_lite_fpeg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
backward_lite_fpeg8j_U6(
    .din0(in_stream_data_0_data_out),
    .dout(grp_fu_519_p1)
);

backward_lite_sdihbi #(
    .ID( 1 ),
    .NUM_STAGE( 52 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
backward_lite_sdihbi_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1457_p0),
    .din1(abs_dif_V_1_fu_1424_p3),
    .ce(1'b1),
    .dout(grp_fu_1457_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state7)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state12) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state12)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state17) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state17)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state17);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter12 <= ap_enable_reg_pp3_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter13 <= ap_enable_reg_pp3_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter14 <= ap_enable_reg_pp3_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter15 <= ap_enable_reg_pp3_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter16 <= ap_enable_reg_pp3_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter17 <= ap_enable_reg_pp3_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter18 <= ap_enable_reg_pp3_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter19 <= ap_enable_reg_pp3_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter20 <= ap_enable_reg_pp3_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter21 <= ap_enable_reg_pp3_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter22 <= ap_enable_reg_pp3_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter23 <= ap_enable_reg_pp3_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter24 <= ap_enable_reg_pp3_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter25 <= ap_enable_reg_pp3_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter26 <= ap_enable_reg_pp3_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter27 <= ap_enable_reg_pp3_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter28 <= ap_enable_reg_pp3_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter29 <= ap_enable_reg_pp3_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter30 <= ap_enable_reg_pp3_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter31 <= ap_enable_reg_pp3_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter32 <= ap_enable_reg_pp3_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter33 <= ap_enable_reg_pp3_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter34 <= ap_enable_reg_pp3_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter35 <= ap_enable_reg_pp3_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter36 <= ap_enable_reg_pp3_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter37 <= ap_enable_reg_pp3_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter38 <= ap_enable_reg_pp3_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter39 <= ap_enable_reg_pp3_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter40 <= ap_enable_reg_pp3_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter41 <= ap_enable_reg_pp3_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter42 <= ap_enable_reg_pp3_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter43 <= ap_enable_reg_pp3_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter44 <= ap_enable_reg_pp3_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter45 <= ap_enable_reg_pp3_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter46 <= ap_enable_reg_pp3_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter47 <= ap_enable_reg_pp3_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter48 <= ap_enable_reg_pp3_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter49 <= ap_enable_reg_pp3_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter50 <= ap_enable_reg_pp3_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter51 <= ap_enable_reg_pp3_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter52 <= ap_enable_reg_pp3_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter53 <= ap_enable_reg_pp3_iter52;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp3_iter53 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_stream_data_0_sel_rd <= 1'b0;
    end else begin
        if (((in_stream_data_0_ack_out == 1'b1) & (in_stream_data_0_vld_out == 1'b1))) begin
            in_stream_data_0_sel_rd <= ~in_stream_data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_stream_data_0_sel_wr <= 1'b0;
    end else begin
        if (((in_stream_data_0_ack_in == 1'b1) & (in_stream_data_0_vld_in == 1'b1))) begin
            in_stream_data_0_sel_wr <= ~in_stream_data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_stream_data_0_state <= 2'd0;
    end else begin
        if ((((in_stream_data_0_state == 2'd2) & (in_stream_data_0_vld_in == 1'b0)) | ((in_stream_data_0_state == 2'd3) & (in_stream_data_0_vld_in == 1'b0) & (in_stream_data_0_ack_out == 1'b1)))) begin
            in_stream_data_0_state <= 2'd2;
        end else if ((((in_stream_data_0_state == 2'd1) & (in_stream_data_0_ack_out == 1'b0)) | ((in_stream_data_0_state == 2'd3) & (in_stream_data_0_ack_out == 1'b0) & (in_stream_data_0_vld_in == 1'b1)))) begin
            in_stream_data_0_state <= 2'd1;
        end else if (((~((in_stream_data_0_vld_in == 1'b0) & (in_stream_data_0_ack_out == 1'b1)) & ~((in_stream_data_0_ack_out == 1'b0) & (in_stream_data_0_vld_in == 1'b1)) & (in_stream_data_0_state == 2'd3)) | ((in_stream_data_0_state == 2'd1) & (in_stream_data_0_ack_out == 1'b1)) | ((in_stream_data_0_state == 2'd2) & (in_stream_data_0_vld_in == 1'b1)))) begin
            in_stream_data_0_state <= 2'd3;
        end else begin
            in_stream_data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_stream_last_0_state <= 2'd0;
    end else begin
        if ((((in_stream_last_0_state == 2'd2) & (in_stream_last_0_vld_in == 1'b0)) | ((in_stream_last_0_state == 2'd3) & (in_stream_last_0_vld_in == 1'b0) & (in_stream_last_0_ack_out == 1'b1)))) begin
            in_stream_last_0_state <= 2'd2;
        end else if ((((in_stream_last_0_state == 2'd1) & (in_stream_last_0_ack_out == 1'b0)) | ((in_stream_last_0_state == 2'd3) & (in_stream_last_0_ack_out == 1'b0) & (in_stream_last_0_vld_in == 1'b1)))) begin
            in_stream_last_0_state <= 2'd1;
        end else if (((~((in_stream_last_0_vld_in == 1'b0) & (in_stream_last_0_ack_out == 1'b1)) & ~((in_stream_last_0_ack_out == 1'b0) & (in_stream_last_0_vld_in == 1'b1)) & (in_stream_last_0_state == 2'd3)) | ((in_stream_last_0_state == 2'd1) & (in_stream_last_0_ack_out == 1'b1)) | ((in_stream_last_0_state == 2'd2) & (in_stream_last_0_vld_in == 1'b1)))) begin
            in_stream_last_0_state <= 2'd3;
        end else begin
            in_stream_last_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_1_reg_376 <= 7'd32;
    end else if (((exitcond2_fu_817_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_376 <= i_7_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_2_reg_387 <= 8'd64;
    end else if (((exitcond3_fu_1102_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_2_reg_387 <= i_9_fu_1114_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_3_reg_398 <= 6'd0;
    end else if (((exitcond4_fu_1387_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_3_reg_398 <= i_10_fu_1393_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        i_4_reg_421 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        i_4_reg_421 <= i_8_reg_2673;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        i_5_reg_492 <= i_11_reg_2726;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        i_5_reg_492 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_2413 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_364 <= i_6_reg_2417;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_364 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        p_Val2_32_reg_432 <= w5_temp_V_fu_1843_p2;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        p_Val2_32_reg_432 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        p_Val2_3_reg_468 <= w2_temp_V_reg_2818;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        p_Val2_3_reg_468 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        p_Val2_4_reg_480 <= w1_temp_V_reg_2813;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        p_Val2_4_reg_480 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        p_Val2_6_reg_409 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        p_Val2_6_reg_409 <= bias_temp_V_fu_1511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        p_Val2_8_reg_444 <= w4_temp_V_reg_2838;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        p_Val2_8_reg_444 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        p_Val2_9_reg_456 <= w3_temp_V_reg_2833;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        p_Val2_9_reg_456 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84))) begin
        reg_527 <= batch_x_mat_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        reg_527 <= batch_x_mat_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        reg_532 <= batch_x_mat_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        reg_532 <= batch_x_mat_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        OP1_V_cast_reg_2791 <= OP1_V_cast_fu_1710_p1;
        p_Val2_11_reg_2798 <= {{p_Val2_7_fu_1717_p2[47:16]}};
        p_Val2_13_reg_2803 <= {{p_Val2_12_fu_1737_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        abs_dif_V_3_reg_2643 <= abs_dif_V_3_fu_1405_p2;
        tmp_111_reg_2651 <= abs_dif_V_3_fu_1405_p2[32'd31];
        tmp_46_reg_2627_pp3_iter1_reg[5 : 0] <= tmp_46_reg_2627[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond1_reg_2413 <= exitcond1_fu_537_p2;
        exitcond1_reg_2413_pp0_iter1_reg <= exitcond1_reg_2413;
        i_reg_364_pp0_iter1_reg <= i_reg_364;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond1_reg_2413_pp0_iter2_reg <= exitcond1_reg_2413_pp0_iter1_reg;
        i_reg_364_pp0_iter2_reg <= i_reg_364_pp0_iter1_reg;
        isneg_reg_2422_pp0_iter2_reg <= isneg_reg_2422;
        tmp_2_reg_2438_pp0_iter2_reg <= tmp_2_reg_2438;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond2_reg_2478 <= exitcond2_fu_817_p2;
        exitcond2_reg_2478_pp1_iter1_reg <= exitcond2_reg_2478;
        tmp_10_reg_2482_pp1_iter1_reg <= tmp_10_reg_2482;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond2_reg_2478_pp1_iter2_reg <= exitcond2_reg_2478_pp1_iter1_reg;
        isneg_1_reg_2492_pp1_iter2_reg <= isneg_1_reg_2492;
        tmp_10_reg_2482_pp1_iter2_reg <= tmp_10_reg_2482_pp1_iter1_reg;
        tmp_16_reg_2508_pp1_iter2_reg <= tmp_16_reg_2508;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond3_reg_2548 <= exitcond3_fu_1102_p2;
        exitcond3_reg_2548_pp2_iter1_reg <= exitcond3_reg_2548;
        tmp_26_reg_2552_pp2_iter1_reg <= tmp_26_reg_2552;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond3_reg_2548_pp2_iter2_reg <= exitcond3_reg_2548_pp2_iter1_reg;
        isneg_2_reg_2562_pp2_iter2_reg <= isneg_2_reg_2562;
        tmp_26_reg_2552_pp2_iter2_reg <= tmp_26_reg_2552_pp2_iter1_reg;
        tmp_32_reg_2578_pp2_iter2_reg <= tmp_32_reg_2578;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_2478 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exp_tmp_V_1_reg_2498 <= {{ireg_V_1_fu_835_p1[62:52]}};
        isneg_1_reg_2492 <= ireg_V_1_fu_835_p1[32'd63];
        tmp_16_reg_2508 <= tmp_16_fu_865_p2;
        tmp_49_reg_2503 <= tmp_49_fu_861_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_2548 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exp_tmp_V_2_reg_2568 <= {{ireg_V_2_fu_1120_p1[62:52]}};
        isneg_2_reg_2562 <= ireg_V_2_fu_1120_p1[32'd63];
        tmp_32_reg_2578 <= tmp_32_fu_1150_p2;
        tmp_88_reg_2573 <= tmp_88_fu_1146_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_2413 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_tmp_V_reg_2428 <= {{ireg_V_fu_549_p1[62:52]}};
        isneg_reg_2422 <= ireg_V_fu_549_p1[32'd63];
        tmp_23_reg_2433 <= tmp_23_fu_575_p1;
        tmp_2_reg_2438 <= tmp_2_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        i_11_reg_2726 <= i_11_fu_1636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_6_reg_2417 <= i_6_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        i_8_reg_2673 <= i_8_fu_1494_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp2_reg_2661 <= icmp2_fu_1444_p2;
        icmp2_reg_2661_pp3_iter10_reg <= icmp2_reg_2661_pp3_iter9_reg;
        icmp2_reg_2661_pp3_iter11_reg <= icmp2_reg_2661_pp3_iter10_reg;
        icmp2_reg_2661_pp3_iter12_reg <= icmp2_reg_2661_pp3_iter11_reg;
        icmp2_reg_2661_pp3_iter13_reg <= icmp2_reg_2661_pp3_iter12_reg;
        icmp2_reg_2661_pp3_iter14_reg <= icmp2_reg_2661_pp3_iter13_reg;
        icmp2_reg_2661_pp3_iter15_reg <= icmp2_reg_2661_pp3_iter14_reg;
        icmp2_reg_2661_pp3_iter16_reg <= icmp2_reg_2661_pp3_iter15_reg;
        icmp2_reg_2661_pp3_iter17_reg <= icmp2_reg_2661_pp3_iter16_reg;
        icmp2_reg_2661_pp3_iter18_reg <= icmp2_reg_2661_pp3_iter17_reg;
        icmp2_reg_2661_pp3_iter19_reg <= icmp2_reg_2661_pp3_iter18_reg;
        icmp2_reg_2661_pp3_iter20_reg <= icmp2_reg_2661_pp3_iter19_reg;
        icmp2_reg_2661_pp3_iter21_reg <= icmp2_reg_2661_pp3_iter20_reg;
        icmp2_reg_2661_pp3_iter22_reg <= icmp2_reg_2661_pp3_iter21_reg;
        icmp2_reg_2661_pp3_iter23_reg <= icmp2_reg_2661_pp3_iter22_reg;
        icmp2_reg_2661_pp3_iter24_reg <= icmp2_reg_2661_pp3_iter23_reg;
        icmp2_reg_2661_pp3_iter25_reg <= icmp2_reg_2661_pp3_iter24_reg;
        icmp2_reg_2661_pp3_iter26_reg <= icmp2_reg_2661_pp3_iter25_reg;
        icmp2_reg_2661_pp3_iter27_reg <= icmp2_reg_2661_pp3_iter26_reg;
        icmp2_reg_2661_pp3_iter28_reg <= icmp2_reg_2661_pp3_iter27_reg;
        icmp2_reg_2661_pp3_iter29_reg <= icmp2_reg_2661_pp3_iter28_reg;
        icmp2_reg_2661_pp3_iter30_reg <= icmp2_reg_2661_pp3_iter29_reg;
        icmp2_reg_2661_pp3_iter31_reg <= icmp2_reg_2661_pp3_iter30_reg;
        icmp2_reg_2661_pp3_iter32_reg <= icmp2_reg_2661_pp3_iter31_reg;
        icmp2_reg_2661_pp3_iter33_reg <= icmp2_reg_2661_pp3_iter32_reg;
        icmp2_reg_2661_pp3_iter34_reg <= icmp2_reg_2661_pp3_iter33_reg;
        icmp2_reg_2661_pp3_iter35_reg <= icmp2_reg_2661_pp3_iter34_reg;
        icmp2_reg_2661_pp3_iter36_reg <= icmp2_reg_2661_pp3_iter35_reg;
        icmp2_reg_2661_pp3_iter37_reg <= icmp2_reg_2661_pp3_iter36_reg;
        icmp2_reg_2661_pp3_iter38_reg <= icmp2_reg_2661_pp3_iter37_reg;
        icmp2_reg_2661_pp3_iter39_reg <= icmp2_reg_2661_pp3_iter38_reg;
        icmp2_reg_2661_pp3_iter3_reg <= icmp2_reg_2661;
        icmp2_reg_2661_pp3_iter40_reg <= icmp2_reg_2661_pp3_iter39_reg;
        icmp2_reg_2661_pp3_iter41_reg <= icmp2_reg_2661_pp3_iter40_reg;
        icmp2_reg_2661_pp3_iter42_reg <= icmp2_reg_2661_pp3_iter41_reg;
        icmp2_reg_2661_pp3_iter43_reg <= icmp2_reg_2661_pp3_iter42_reg;
        icmp2_reg_2661_pp3_iter44_reg <= icmp2_reg_2661_pp3_iter43_reg;
        icmp2_reg_2661_pp3_iter45_reg <= icmp2_reg_2661_pp3_iter44_reg;
        icmp2_reg_2661_pp3_iter46_reg <= icmp2_reg_2661_pp3_iter45_reg;
        icmp2_reg_2661_pp3_iter47_reg <= icmp2_reg_2661_pp3_iter46_reg;
        icmp2_reg_2661_pp3_iter48_reg <= icmp2_reg_2661_pp3_iter47_reg;
        icmp2_reg_2661_pp3_iter49_reg <= icmp2_reg_2661_pp3_iter48_reg;
        icmp2_reg_2661_pp3_iter4_reg <= icmp2_reg_2661_pp3_iter3_reg;
        icmp2_reg_2661_pp3_iter50_reg <= icmp2_reg_2661_pp3_iter49_reg;
        icmp2_reg_2661_pp3_iter51_reg <= icmp2_reg_2661_pp3_iter50_reg;
        icmp2_reg_2661_pp3_iter52_reg <= icmp2_reg_2661_pp3_iter51_reg;
        icmp2_reg_2661_pp3_iter5_reg <= icmp2_reg_2661_pp3_iter4_reg;
        icmp2_reg_2661_pp3_iter6_reg <= icmp2_reg_2661_pp3_iter5_reg;
        icmp2_reg_2661_pp3_iter7_reg <= icmp2_reg_2661_pp3_iter6_reg;
        icmp2_reg_2661_pp3_iter8_reg <= icmp2_reg_2661_pp3_iter7_reg;
        icmp2_reg_2661_pp3_iter9_reg <= icmp2_reg_2661_pp3_iter8_reg;
        tmp_46_reg_2627_pp3_iter10_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter9_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter11_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter10_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter12_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter11_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter13_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter12_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter14_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter13_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter15_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter14_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter16_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter15_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter17_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter16_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter18_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter17_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter19_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter18_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter20_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter19_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter21_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter20_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter22_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter21_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter23_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter22_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter24_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter23_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter25_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter24_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter26_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter25_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter27_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter26_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter28_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter27_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter29_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter28_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter2_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter1_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter30_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter29_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter31_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter30_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter32_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter31_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter33_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter32_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter34_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter33_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter35_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter34_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter36_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter35_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter37_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter36_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter38_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter37_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter39_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter38_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter3_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter2_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter40_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter39_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter41_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter40_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter42_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter41_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter43_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter42_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter44_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter43_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter45_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter44_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter46_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter45_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter47_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter46_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter48_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter47_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter49_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter48_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter4_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter3_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter50_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter49_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter51_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter50_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter52_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter51_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter5_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter4_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter6_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter5_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter7_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter6_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter8_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter7_reg[5 : 0];
        tmp_46_reg_2627_pp3_iter9_reg[5 : 0] <= tmp_46_reg_2627_pp3_iter8_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((in_stream_data_0_load_A == 1'b1)) begin
        in_stream_data_0_payload_A <= in_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((in_stream_data_0_load_B == 1'b1)) begin
        in_stream_data_0_payload_B <= in_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        is_neg_1_reg_2858 <= p_Val2_4_reg_480[32'd31];
        is_neg_2_reg_2878 <= p_Val2_3_reg_468[32'd31];
        is_neg_3_reg_2898 <= p_Val2_9_reg_456[32'd31];
        is_neg_4_reg_2918 <= p_Val2_8_reg_444[32'd31];
        is_neg_5_reg_2938 <= p_Val2_32_reg_432[32'd31];
        tmp32_V_14_reg_2903 <= tmp32_V_14_fu_1985_p2;
        tmp32_V_18_reg_2923 <= tmp32_V_18_fu_2034_p2;
        tmp32_V_23_reg_2943 <= tmp32_V_23_fu_2083_p2;
        tmp32_V_3_reg_2863 <= tmp32_V_3_fu_1887_p2;
        tmp32_V_7_reg_2883 <= tmp32_V_7_fu_1936_p2;
        tmp_116_reg_2868 <= tmp_116_fu_1893_p1;
        tmp_118_reg_2888 <= tmp_118_fu_1942_p1;
        tmp_120_reg_2908 <= tmp_120_fu_1991_p1;
        tmp_122_reg_2928 <= tmp_122_fu_2040_p1;
        tmp_124_reg_2948 <= tmp_124_fu_2089_p1;
        tmp_65_reg_2853 <= tmp_65_fu_1848_p2;
        tmp_72_reg_2873 <= tmp_72_fu_1897_p2;
        tmp_78_reg_2893 <= tmp_78_fu_1946_p2;
        tmp_90_reg_2913 <= tmp_90_fu_1995_p2;
        tmp_98_reg_2933 <= tmp_98_fu_2044_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        is_neg_reg_2698 <= p_Val2_6_reg_409[32'd31];
        tmp32_V_1_reg_2703 <= tmp32_V_1_fu_1556_p2;
        tmp_114_reg_2708 <= tmp_114_fu_1562_p1;
        tmp_57_reg_2693 <= tmp_57_fu_1517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_2413_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        man_V_2_reg_2444 <= man_V_2_fu_605_p3;
        sel_tmp4_reg_2472 <= sel_tmp4_fu_699_p2;
        sel_tmp7_reg_2466 <= sel_tmp7_fu_681_p2;
        sh_amt_reg_2449 <= sh_amt_fu_636_p3;
        tmp_25_reg_2460 <= tmp_25_fu_650_p1;
        tmp_9_reg_2455 <= tmp_9_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_2478_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        man_V_5_reg_2514 <= man_V_5_fu_891_p3;
        sel_tmp12_reg_2536 <= sel_tmp12_fu_967_p2;
        sel_tmp17_reg_2542 <= sel_tmp17_fu_985_p2;
        sh_amt_1_reg_2519 <= sh_amt_1_fu_922_p3;
        tmp_22_reg_2525 <= tmp_22_fu_930_p2;
        tmp_51_reg_2530 <= tmp_51_fu_936_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_2548_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        man_V_8_reg_2584 <= man_V_8_fu_1176_p3;
        sel_tmp21_reg_2606 <= sel_tmp21_fu_1252_p2;
        sel_tmp26_reg_2612 <= sel_tmp26_fu_1270_p2;
        sh_amt_2_reg_2589 <= sh_amt_2_fu_1207_p3;
        tmp_40_reg_2595 <= tmp_40_fu_1215_p2;
        tmp_97_reg_2600 <= tmp_97_fu_1221_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        p_Val2_15_reg_2823 <= {{p_Val2_14_fu_1780_p2[47:16]}};
        p_Val2_17_reg_2828 <= {{p_Val2_16_fu_1799_p2[47:16]}};
        w1_temp_V_reg_2813 <= w1_temp_V_fu_1766_p2;
        w2_temp_V_reg_2818 <= w2_temp_V_fu_1771_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        p_Val2_19_reg_2843 <= {{p_Val2_18_fu_1828_p2[47:16]}};
        w3_temp_V_reg_2833 <= w3_temp_V_fu_1814_p2;
        w4_temp_V_reg_2838 <= w4_temp_V_fu_1819_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        smooth_grad_V_load_reg_2776 <= smooth_grad_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_57_reg_2693 == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
        tmp32_V_24_reg_2713 <= tmp32_V_24_fu_1566_p1;
        tmp_59_reg_2718 <= tmp_59_fu_1580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_65_reg_2853 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
        tmp32_V_25_reg_2953 <= tmp32_V_25_fu_2093_p1;
        tmp_67_reg_2958 <= tmp_67_fu_2107_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_72_reg_2873 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
        tmp32_V_26_reg_2963 <= tmp32_V_26_fu_2113_p1;
        tmp_74_reg_2968 <= tmp_74_fu_2127_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_78_reg_2893 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
        tmp32_V_27_reg_2973 <= tmp32_V_27_fu_2133_p1;
        tmp_81_reg_2978 <= tmp_81_fu_2147_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_90_reg_2913 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
        tmp32_V_28_reg_2983 <= tmp32_V_28_fu_2153_p1;
        tmp_93_reg_2988 <= tmp_93_fu_2167_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_98_reg_2933 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
        tmp32_V_29_reg_2993 <= tmp32_V_29_fu_2173_p1;
        tmp_100_reg_2998 <= tmp_100_fu_2187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_817_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_10_reg_2482 <= tmp_10_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1102_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_26_reg_2552 <= tmp_26_fu_1108_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1387_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_46_reg_2627[5 : 0] <= tmp_46_fu_1399_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
        tmp_58_reg_2683 <= tmp_58_fu_1505_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        tmp_66_reg_2751 <= tmp_66_fu_1659_p2;
        tmp_73_reg_2756 <= tmp_73_fu_1665_p2;
        tmp_79_reg_2761 <= tmp_79_fu_1671_p2;
        tmp_91_reg_2766 <= tmp_91_fu_1677_p2;
        tmp_99_reg_2771 <= tmp_99_fu_1683_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1630_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state82))) begin
        tmp_82_reg_2741 <= tmp_82_fu_1648_p2;
    end
end

always @ (*) begin
    if ((exitcond1_fu_537_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_817_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_1102_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_1387_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter53 == 1'b0) & (ap_enable_reg_pp3_iter52 == 1'b0) & (ap_enable_reg_pp3_iter51 == 1'b0) & (ap_enable_reg_pp3_iter50 == 1'b0) & (ap_enable_reg_pp3_iter49 == 1'b0) & (ap_enable_reg_pp3_iter48 == 1'b0) & (ap_enable_reg_pp3_iter47 == 1'b0) & (ap_enable_reg_pp3_iter46 == 1'b0) & (ap_enable_reg_pp3_iter45 == 1'b0) & (ap_enable_reg_pp3_iter44 == 1'b0) & (ap_enable_reg_pp3_iter43 == 1'b0) & (ap_enable_reg_pp3_iter42 == 1'b0) & (ap_enable_reg_pp3_iter41 == 1'b0) & (ap_enable_reg_pp3_iter40 == 1'b0) & (ap_enable_reg_pp3_iter39 == 1'b0) & (ap_enable_reg_pp3_iter38 == 1'b0) & (ap_enable_reg_pp3_iter37 == 1'b0) & (ap_enable_reg_pp3_iter36 == 1'b0) & (ap_enable_reg_pp3_iter35 == 1'b0) & (ap_enable_reg_pp3_iter34 == 1'b0) & (ap_enable_reg_pp3_iter33 == 1'b0) & (ap_enable_reg_pp3_iter32 == 1'b0) & (ap_enable_reg_pp3_iter31 == 1'b0) & (ap_enable_reg_pp3_iter30 == 1'b0) & (ap_enable_reg_pp3_iter29 == 1'b0) & (ap_enable_reg_pp3_iter28 == 1'b0) & (ap_enable_reg_pp3_iter27 == 1'b0) & (ap_enable_reg_pp3_iter26 == 1'b0) & (ap_enable_reg_pp3_iter25 == 1'b0) & (ap_enable_reg_pp3_iter24 == 1'b0) & (ap_enable_reg_pp3_iter23 == 1'b0) & (ap_enable_reg_pp3_iter22 == 1'b0) & (ap_enable_reg_pp3_iter21 == 1'b0) & (ap_enable_reg_pp3_iter20 == 1'b0) & (ap_enable_reg_pp3_iter19 == 1'b0) & (ap_enable_reg_pp3_iter18 == 1'b0) & (ap_enable_reg_pp3_iter17 == 1'b0) & (ap_enable_reg_pp3_iter16 == 1'b0) & (ap_enable_reg_pp3_iter15 == 1'b0) & (ap_enable_reg_pp3_iter14 == 1'b0) & (ap_enable_reg_pp3_iter13 == 1'b0) & (ap_enable_reg_pp3_iter12 == 1'b0) & (ap_enable_reg_pp3_iter11 == 1'b0) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_2413 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_368_p4 = i_6_reg_2417;
    end else begin
        ap_phi_mux_i_phi_fu_368_p4 = i_reg_364;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        batch_x_mat_V_address0 = tmp_89_fu_1705_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        batch_x_mat_V_address0 = tmp_80_fu_1642_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        batch_x_mat_V_address0 = tmp_27_fu_1276_p1;
    end else begin
        batch_x_mat_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        batch_x_mat_V_address1 = tmp_92_fu_1761_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        batch_x_mat_V_address1 = tmp_86_fu_1697_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        batch_x_mat_V_address1 = tmp_83_fu_1654_p1;
    end else begin
        batch_x_mat_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state83) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
        batch_x_mat_V_ce0 = 1'b1;
    end else begin
        batch_x_mat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83))) begin
        batch_x_mat_V_ce1 = 1'b1;
    end else begin
        batch_x_mat_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_2548_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        batch_x_mat_V_we0 = 1'b1;
    end else begin
        batch_x_mat_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        batch_y_mat_V_address0 = tmp_46_fu_1399_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        batch_y_mat_V_address0 = tmp_11_fu_991_p1;
    end else begin
        batch_y_mat_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        batch_y_mat_V_ce0 = 1'b1;
    end else begin
        batch_y_mat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_2478_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        batch_y_mat_V_we0 = 1'b1;
    end else begin
        batch_y_mat_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        bias_ap_vld = 1'b1;
    end else begin
        bias_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_504_p0 = tmp32_V_3_reg_2863;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_504_p0 = tmp32_V_1_reg_2703;
    end else begin
        grp_fu_504_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond3_reg_2548 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond2_reg_2478 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1_reg_2413 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        in_stream_TDATA_blk_n = in_stream_data_0_state[1'd0];
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond3_reg_2548 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond2_reg_2478 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1_reg_2413 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_stream_data_0_ack_out = 1'b1;
    end else begin
        in_stream_data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_data_0_sel == 1'b1)) begin
        in_stream_data_0_data_out = in_stream_data_0_payload_B;
    end else begin
        in_stream_data_0_data_out = in_stream_data_0_payload_A;
    end
end

always @ (*) begin
    if ((((exitcond3_reg_2548 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond2_reg_2478 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond1_reg_2413 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_stream_last_0_ack_out = 1'b1;
    end else begin
        in_stream_last_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        nn_out_mat_V_address0 = tmp_46_fu_1399_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        nn_out_mat_V_address0 = tmp_6_fu_705_p1;
    end else begin
        nn_out_mat_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        nn_out_mat_V_ce0 = 1'b1;
    end else begin
        nn_out_mat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_2413_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        nn_out_mat_V_we0 = 1'b1;
    end else begin
        nn_out_mat_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        smooth_grad_V_address0 = tmp_61_fu_1500_p1;
    end else if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        smooth_grad_V_address0 = tmp_46_reg_2627_pp3_iter1_reg;
    end else begin
        smooth_grad_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        smooth_grad_V_address1 = tmp_80_fu_1642_p1;
    end else if (((ap_enable_reg_pp3_iter53 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        smooth_grad_V_address1 = tmp_46_reg_2627_pp3_iter52_reg;
    end else begin
        smooth_grad_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        smooth_grad_V_ce0 = 1'b1;
    end else begin
        smooth_grad_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter53 == 1'b1)))) begin
        smooth_grad_V_ce1 = 1'b1;
    end else begin
        smooth_grad_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp2_fu_1444_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        smooth_grad_V_we0 = 1'b1;
    end else begin
        smooth_grad_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp2_reg_2661_pp3_iter52_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter53 == 1'b1))) begin
        smooth_grad_V_we1 = 1'b1;
    end else begin
        smooth_grad_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        w1_ap_vld = 1'b1;
    end else begin
        w1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        w2_ap_vld = 1'b1;
    end else begin
        w2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        w3_ap_vld = 1'b1;
    end else begin
        w3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        w4_ap_vld = 1'b1;
    end else begin
        w4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        w5_ap_vld = 1'b1;
    end else begin
        w5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond1_fu_537_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((exitcond1_fu_537_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((exitcond2_fu_817_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((exitcond2_fu_817_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((exitcond3_fu_1102_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((exitcond3_fu_1102_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((exitcond4_fu_1387_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter53 == 1'b1) & (ap_enable_reg_pp3_iter52 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((exitcond4_fu_1387_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter53 == 1'b1) & (ap_enable_reg_pp3_iter52 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((exitcond5_fu_1488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((exitcond_fu_1630_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_898_p2 = (12'd1075 - tmp_13_fu_871_p1);

assign F2_2_fu_1183_p2 = (12'd1075 - tmp_29_fu_1156_p1);

assign F2_fu_612_p2 = (12'd1075 - tmp_s_fu_585_p1);

assign OP1_V_cast_fu_1710_p1 = $signed(smooth_grad_V_load_reg_2776);

assign abs_dif_V_1_fu_1424_p3 = ((tmp_111_reg_2651[0:0] === 1'b1) ? abs_dif_V_fu_1419_p2 : abs_dif_V_3_reg_2643);

assign abs_dif_V_3_fu_1405_p2 = (nn_out_mat_V_q0 - batch_y_mat_V_q0);

assign abs_dif_V_fu_1419_p2 = (32'd0 - abs_dif_V_3_reg_2643);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd32];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond1_reg_2413 == 1'd0) & (in_stream_data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond1_reg_2413 == 1'd0) & (in_stream_data_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((exitcond2_reg_2478 == 1'd0) & (in_stream_data_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((exitcond2_reg_2478 == 1'd0) & (in_stream_data_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((exitcond3_reg_2548 == 1'd0) & (in_stream_data_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((exitcond3_reg_2548 == 1'd0) & (in_stream_data_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp2_stage0_iter1 = ((exitcond3_reg_2548 == 1'd0) & (in_stream_data_0_vld_out == 1'b0));
end

assign ap_block_state14_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp3_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp3_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp3_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp3_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp3_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp3_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp3_stage0_iter22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((exitcond1_reg_2413 == 1'd0) & (in_stream_data_0_vld_out == 1'b0));
end

assign ap_block_state40_pp3_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp3_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp3_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp3_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp3_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp3_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp3_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp3_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp3_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp3_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp3_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp3_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp3_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp3_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp3_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp3_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp3_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp3_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp3_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp3_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp3_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp3_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp3_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp3_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp3_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp3_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp3_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp3_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp3_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp3_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp1_stage0_iter1 = ((exitcond2_reg_2478 == 1'd0) & (in_stream_data_0_vld_out == 1'b0));
end

assign ap_block_state9_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign batch_x_mat_V_d0 = ((or_cond8_fu_1372_p2[0:0] === 1'b1) ? newSel10_fu_1364_p3 : 32'd0);

assign batch_y_mat_V_d0 = ((or_cond5_fu_1087_p2[0:0] === 1'b1) ? newSel6_fu_1079_p3 : 32'd0);

assign bias = ((tmp_57_reg_2693[0:0] === 1'b1) ? 32'd0 : f_fu_1618_p1);

assign bias_temp_V_fu_1511_p2 = (smooth_grad_V_q0 + p_Val2_6_reg_409);

assign exitcond1_fu_537_p2 = ((ap_phi_mux_i_phi_fu_368_p4 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond2_fu_817_p2 = ((i_1_reg_376 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond3_fu_1102_p2 = ((i_2_reg_387 == 8'd224) ? 1'b1 : 1'b0);

assign exitcond4_fu_1387_p2 = ((i_3_reg_398 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond5_fu_1488_p2 = ((i_4_reg_421 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond_fu_1630_p2 = ((i_5_reg_492 == 6'd32) ? 1'b1 : 1'b0);

assign f_11_fu_2401_p1 = p_Result_19_fu_2390_p5;

assign f_2_fu_2225_p1 = p_Result_11_fu_2214_p5;

assign f_4_fu_2269_p1 = p_Result_13_fu_2258_p5;

assign f_6_fu_2313_p1 = p_Result_15_fu_2302_p5;

assign f_8_fu_2357_p1 = p_Result_17_fu_2346_p5;

assign f_fu_1618_p1 = p_Result_8_fu_1607_p5;

assign grp_fu_1457_p0 = {{abs_dif_V_3_reg_2643}, {16'd0}};

assign i_10_fu_1393_p2 = (i_3_reg_398 + 6'd1);

assign i_11_fu_1636_p2 = (i_5_reg_492 + 6'd1);

assign i_6_fu_543_p2 = (ap_phi_mux_i_phi_fu_368_p4 + 6'd1);

assign i_7_fu_829_p2 = (7'd1 + i_1_reg_376);

assign i_8_fu_1494_p2 = (i_4_reg_421 + 6'd1);

assign i_9_fu_1114_p2 = (8'd1 + i_2_reg_387);

assign icmp1_fu_1235_p2 = ((tmp_104_fu_1225_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp2_fu_1444_p2 = (($signed(tmp_112_fu_1434_p4) < $signed(16'd1)) ? 1'b1 : 1'b0);

assign icmp7_fu_950_p2 = ((tmp_53_fu_940_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_664_p2 = ((tmp_33_fu_654_p4 == 7'd0) ? 1'b1 : 1'b0);

assign in_stream_TREADY = in_stream_last_0_state[1'd1];

assign in_stream_data_0_ack_in = in_stream_data_0_state[1'd1];

assign in_stream_data_0_load_A = (in_stream_data_0_state_cmp_full & ~in_stream_data_0_sel_wr);

assign in_stream_data_0_load_B = (in_stream_data_0_state_cmp_full & in_stream_data_0_sel_wr);

assign in_stream_data_0_sel = in_stream_data_0_sel_rd;

assign in_stream_data_0_state_cmp_full = ((in_stream_data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign in_stream_data_0_vld_in = in_stream_TVALID;

assign in_stream_data_0_vld_out = in_stream_data_0_state[1'd0];

assign in_stream_last_0_vld_in = in_stream_TVALID;

assign ireg_V_1_fu_835_p1 = grp_fu_519_p1;

assign ireg_V_2_fu_1120_p1 = grp_fu_519_p1;

assign ireg_V_fu_549_p1 = grp_fu_519_p1;

assign is_neg_1_fu_1854_p3 = p_Val2_4_reg_480[32'd31];

assign is_neg_2_fu_1903_p3 = p_Val2_3_reg_468[32'd31];

assign is_neg_3_fu_1952_p3 = p_Val2_9_reg_456[32'd31];

assign is_neg_4_fu_2001_p3 = p_Val2_8_reg_444[32'd31];

assign is_neg_5_fu_2050_p3 = p_Val2_32_reg_432[32'd31];

assign is_neg_fu_1523_p3 = p_Val2_6_reg_409[32'd31];

assign man_V_1_fu_599_p2 = (54'd0 - p_Result_s_fu_595_p1);

assign man_V_2_fu_605_p3 = ((isneg_reg_2422[0:0] === 1'b1) ? man_V_1_fu_599_p2 : p_Result_s_fu_595_p1);

assign man_V_4_fu_885_p2 = (54'd0 - p_Result_2_fu_881_p1);

assign man_V_5_fu_891_p3 = ((isneg_1_reg_2492[0:0] === 1'b1) ? man_V_4_fu_885_p2 : p_Result_2_fu_881_p1);

assign man_V_7_fu_1170_p2 = (54'd0 - p_Result_3_fu_1166_p1);

assign man_V_8_fu_1176_p3 = ((isneg_2_reg_2562[0:0] === 1'b1) ? man_V_7_fu_1170_p2 : p_Result_3_fu_1166_p1);

assign newSel10_fu_1364_p3 = ((or_cond6_fu_1346_p2[0:0] === 1'b1) ? newSel8_fu_1339_p3 : newSel9_fu_1351_p3);

assign newSel1_fu_781_p3 = ((sel_tmp9_fu_759_p2[0:0] === 1'b1) ? storemerge_fu_731_p3 : tmp_25_reg_2460);

assign newSel2_fu_794_p3 = ((or_cond_fu_776_p2[0:0] === 1'b1) ? newSel_fu_769_p3 : newSel1_fu_781_p3);

assign newSel4_fu_1054_p3 = ((sel_tmp17_reg_2542[0:0] === 1'b1) ? tmp_35_fu_1023_p2 : tmp_63_fu_1012_p1);

assign newSel5_fu_1066_p3 = ((sel_tmp14_fu_1044_p2[0:0] === 1'b1) ? storemerge2_fu_1016_p3 : tmp_51_reg_2530);

assign newSel6_fu_1079_p3 = ((or_cond3_fu_1061_p2[0:0] === 1'b1) ? newSel4_fu_1054_p3 : newSel5_fu_1066_p3);

assign newSel8_fu_1339_p3 = ((sel_tmp26_reg_2612[0:0] === 1'b1) ? tmp_45_fu_1308_p2 : tmp_110_fu_1297_p1);

assign newSel9_fu_1351_p3 = ((sel_tmp23_fu_1329_p2[0:0] === 1'b1) ? storemerge4_fu_1301_p3 : tmp_97_reg_2600);

assign newSel_fu_769_p3 = ((sel_tmp4_reg_2472[0:0] === 1'b1) ? tmp_18_fu_738_p2 : tmp_36_fu_727_p1);

assign nn_out_mat_V_d0 = ((or_cond2_fu_802_p2[0:0] === 1'b1) ? newSel2_fu_794_p3 : 32'd0);


always @ (p_Result_10_fu_1869_p4) begin
    if (p_Result_10_fu_1869_p4[0] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd0;
    end else if (p_Result_10_fu_1869_p4[1] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd1;
    end else if (p_Result_10_fu_1869_p4[2] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd2;
    end else if (p_Result_10_fu_1869_p4[3] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd3;
    end else if (p_Result_10_fu_1869_p4[4] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd4;
    end else if (p_Result_10_fu_1869_p4[5] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd5;
    end else if (p_Result_10_fu_1869_p4[6] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd6;
    end else if (p_Result_10_fu_1869_p4[7] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd7;
    end else if (p_Result_10_fu_1869_p4[8] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd8;
    end else if (p_Result_10_fu_1869_p4[9] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd9;
    end else if (p_Result_10_fu_1869_p4[10] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd10;
    end else if (p_Result_10_fu_1869_p4[11] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd11;
    end else if (p_Result_10_fu_1869_p4[12] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd12;
    end else if (p_Result_10_fu_1869_p4[13] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd13;
    end else if (p_Result_10_fu_1869_p4[14] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd14;
    end else if (p_Result_10_fu_1869_p4[15] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd15;
    end else if (p_Result_10_fu_1869_p4[16] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd16;
    end else if (p_Result_10_fu_1869_p4[17] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd17;
    end else if (p_Result_10_fu_1869_p4[18] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd18;
    end else if (p_Result_10_fu_1869_p4[19] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd19;
    end else if (p_Result_10_fu_1869_p4[20] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd20;
    end else if (p_Result_10_fu_1869_p4[21] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd21;
    end else if (p_Result_10_fu_1869_p4[22] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd22;
    end else if (p_Result_10_fu_1869_p4[23] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd23;
    end else if (p_Result_10_fu_1869_p4[24] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd24;
    end else if (p_Result_10_fu_1869_p4[25] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd25;
    end else if (p_Result_10_fu_1869_p4[26] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd26;
    end else if (p_Result_10_fu_1869_p4[27] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd27;
    end else if (p_Result_10_fu_1869_p4[28] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd28;
    end else if (p_Result_10_fu_1869_p4[29] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd29;
    end else if (p_Result_10_fu_1869_p4[30] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd30;
    end else if (p_Result_10_fu_1869_p4[31] == 1'b1) begin
        num_zeros_1_fu_1879_p3 = 32'd31;
    end else begin
        num_zeros_1_fu_1879_p3 = 32'd32;
    end
end


always @ (p_Result_12_fu_1918_p4) begin
    if (p_Result_12_fu_1918_p4[0] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd0;
    end else if (p_Result_12_fu_1918_p4[1] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd1;
    end else if (p_Result_12_fu_1918_p4[2] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd2;
    end else if (p_Result_12_fu_1918_p4[3] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd3;
    end else if (p_Result_12_fu_1918_p4[4] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd4;
    end else if (p_Result_12_fu_1918_p4[5] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd5;
    end else if (p_Result_12_fu_1918_p4[6] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd6;
    end else if (p_Result_12_fu_1918_p4[7] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd7;
    end else if (p_Result_12_fu_1918_p4[8] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd8;
    end else if (p_Result_12_fu_1918_p4[9] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd9;
    end else if (p_Result_12_fu_1918_p4[10] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd10;
    end else if (p_Result_12_fu_1918_p4[11] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd11;
    end else if (p_Result_12_fu_1918_p4[12] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd12;
    end else if (p_Result_12_fu_1918_p4[13] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd13;
    end else if (p_Result_12_fu_1918_p4[14] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd14;
    end else if (p_Result_12_fu_1918_p4[15] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd15;
    end else if (p_Result_12_fu_1918_p4[16] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd16;
    end else if (p_Result_12_fu_1918_p4[17] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd17;
    end else if (p_Result_12_fu_1918_p4[18] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd18;
    end else if (p_Result_12_fu_1918_p4[19] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd19;
    end else if (p_Result_12_fu_1918_p4[20] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd20;
    end else if (p_Result_12_fu_1918_p4[21] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd21;
    end else if (p_Result_12_fu_1918_p4[22] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd22;
    end else if (p_Result_12_fu_1918_p4[23] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd23;
    end else if (p_Result_12_fu_1918_p4[24] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd24;
    end else if (p_Result_12_fu_1918_p4[25] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd25;
    end else if (p_Result_12_fu_1918_p4[26] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd26;
    end else if (p_Result_12_fu_1918_p4[27] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd27;
    end else if (p_Result_12_fu_1918_p4[28] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd28;
    end else if (p_Result_12_fu_1918_p4[29] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd29;
    end else if (p_Result_12_fu_1918_p4[30] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd30;
    end else if (p_Result_12_fu_1918_p4[31] == 1'b1) begin
        num_zeros_2_fu_1928_p3 = 32'd31;
    end else begin
        num_zeros_2_fu_1928_p3 = 32'd32;
    end
end


always @ (p_Result_14_fu_1967_p4) begin
    if (p_Result_14_fu_1967_p4[0] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd0;
    end else if (p_Result_14_fu_1967_p4[1] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd1;
    end else if (p_Result_14_fu_1967_p4[2] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd2;
    end else if (p_Result_14_fu_1967_p4[3] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd3;
    end else if (p_Result_14_fu_1967_p4[4] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd4;
    end else if (p_Result_14_fu_1967_p4[5] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd5;
    end else if (p_Result_14_fu_1967_p4[6] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd6;
    end else if (p_Result_14_fu_1967_p4[7] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd7;
    end else if (p_Result_14_fu_1967_p4[8] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd8;
    end else if (p_Result_14_fu_1967_p4[9] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd9;
    end else if (p_Result_14_fu_1967_p4[10] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd10;
    end else if (p_Result_14_fu_1967_p4[11] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd11;
    end else if (p_Result_14_fu_1967_p4[12] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd12;
    end else if (p_Result_14_fu_1967_p4[13] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd13;
    end else if (p_Result_14_fu_1967_p4[14] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd14;
    end else if (p_Result_14_fu_1967_p4[15] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd15;
    end else if (p_Result_14_fu_1967_p4[16] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd16;
    end else if (p_Result_14_fu_1967_p4[17] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd17;
    end else if (p_Result_14_fu_1967_p4[18] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd18;
    end else if (p_Result_14_fu_1967_p4[19] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd19;
    end else if (p_Result_14_fu_1967_p4[20] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd20;
    end else if (p_Result_14_fu_1967_p4[21] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd21;
    end else if (p_Result_14_fu_1967_p4[22] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd22;
    end else if (p_Result_14_fu_1967_p4[23] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd23;
    end else if (p_Result_14_fu_1967_p4[24] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd24;
    end else if (p_Result_14_fu_1967_p4[25] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd25;
    end else if (p_Result_14_fu_1967_p4[26] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd26;
    end else if (p_Result_14_fu_1967_p4[27] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd27;
    end else if (p_Result_14_fu_1967_p4[28] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd28;
    end else if (p_Result_14_fu_1967_p4[29] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd29;
    end else if (p_Result_14_fu_1967_p4[30] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd30;
    end else if (p_Result_14_fu_1967_p4[31] == 1'b1) begin
        num_zeros_3_fu_1977_p3 = 32'd31;
    end else begin
        num_zeros_3_fu_1977_p3 = 32'd32;
    end
end


always @ (p_Result_16_fu_2016_p4) begin
    if (p_Result_16_fu_2016_p4[0] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd0;
    end else if (p_Result_16_fu_2016_p4[1] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd1;
    end else if (p_Result_16_fu_2016_p4[2] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd2;
    end else if (p_Result_16_fu_2016_p4[3] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd3;
    end else if (p_Result_16_fu_2016_p4[4] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd4;
    end else if (p_Result_16_fu_2016_p4[5] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd5;
    end else if (p_Result_16_fu_2016_p4[6] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd6;
    end else if (p_Result_16_fu_2016_p4[7] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd7;
    end else if (p_Result_16_fu_2016_p4[8] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd8;
    end else if (p_Result_16_fu_2016_p4[9] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd9;
    end else if (p_Result_16_fu_2016_p4[10] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd10;
    end else if (p_Result_16_fu_2016_p4[11] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd11;
    end else if (p_Result_16_fu_2016_p4[12] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd12;
    end else if (p_Result_16_fu_2016_p4[13] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd13;
    end else if (p_Result_16_fu_2016_p4[14] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd14;
    end else if (p_Result_16_fu_2016_p4[15] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd15;
    end else if (p_Result_16_fu_2016_p4[16] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd16;
    end else if (p_Result_16_fu_2016_p4[17] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd17;
    end else if (p_Result_16_fu_2016_p4[18] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd18;
    end else if (p_Result_16_fu_2016_p4[19] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd19;
    end else if (p_Result_16_fu_2016_p4[20] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd20;
    end else if (p_Result_16_fu_2016_p4[21] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd21;
    end else if (p_Result_16_fu_2016_p4[22] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd22;
    end else if (p_Result_16_fu_2016_p4[23] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd23;
    end else if (p_Result_16_fu_2016_p4[24] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd24;
    end else if (p_Result_16_fu_2016_p4[25] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd25;
    end else if (p_Result_16_fu_2016_p4[26] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd26;
    end else if (p_Result_16_fu_2016_p4[27] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd27;
    end else if (p_Result_16_fu_2016_p4[28] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd28;
    end else if (p_Result_16_fu_2016_p4[29] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd29;
    end else if (p_Result_16_fu_2016_p4[30] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd30;
    end else if (p_Result_16_fu_2016_p4[31] == 1'b1) begin
        num_zeros_4_fu_2026_p3 = 32'd31;
    end else begin
        num_zeros_4_fu_2026_p3 = 32'd32;
    end
end


always @ (p_Result_18_fu_2065_p4) begin
    if (p_Result_18_fu_2065_p4[0] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd0;
    end else if (p_Result_18_fu_2065_p4[1] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd1;
    end else if (p_Result_18_fu_2065_p4[2] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd2;
    end else if (p_Result_18_fu_2065_p4[3] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd3;
    end else if (p_Result_18_fu_2065_p4[4] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd4;
    end else if (p_Result_18_fu_2065_p4[5] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd5;
    end else if (p_Result_18_fu_2065_p4[6] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd6;
    end else if (p_Result_18_fu_2065_p4[7] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd7;
    end else if (p_Result_18_fu_2065_p4[8] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd8;
    end else if (p_Result_18_fu_2065_p4[9] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd9;
    end else if (p_Result_18_fu_2065_p4[10] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd10;
    end else if (p_Result_18_fu_2065_p4[11] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd11;
    end else if (p_Result_18_fu_2065_p4[12] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd12;
    end else if (p_Result_18_fu_2065_p4[13] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd13;
    end else if (p_Result_18_fu_2065_p4[14] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd14;
    end else if (p_Result_18_fu_2065_p4[15] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd15;
    end else if (p_Result_18_fu_2065_p4[16] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd16;
    end else if (p_Result_18_fu_2065_p4[17] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd17;
    end else if (p_Result_18_fu_2065_p4[18] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd18;
    end else if (p_Result_18_fu_2065_p4[19] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd19;
    end else if (p_Result_18_fu_2065_p4[20] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd20;
    end else if (p_Result_18_fu_2065_p4[21] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd21;
    end else if (p_Result_18_fu_2065_p4[22] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd22;
    end else if (p_Result_18_fu_2065_p4[23] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd23;
    end else if (p_Result_18_fu_2065_p4[24] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd24;
    end else if (p_Result_18_fu_2065_p4[25] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd25;
    end else if (p_Result_18_fu_2065_p4[26] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd26;
    end else if (p_Result_18_fu_2065_p4[27] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd27;
    end else if (p_Result_18_fu_2065_p4[28] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd28;
    end else if (p_Result_18_fu_2065_p4[29] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd29;
    end else if (p_Result_18_fu_2065_p4[30] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd30;
    end else if (p_Result_18_fu_2065_p4[31] == 1'b1) begin
        num_zeros_5_fu_2075_p3 = 32'd31;
    end else begin
        num_zeros_5_fu_2075_p3 = 32'd32;
    end
end


always @ (p_Result_7_fu_1538_p4) begin
    if (p_Result_7_fu_1538_p4[0] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd0;
    end else if (p_Result_7_fu_1538_p4[1] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd1;
    end else if (p_Result_7_fu_1538_p4[2] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd2;
    end else if (p_Result_7_fu_1538_p4[3] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd3;
    end else if (p_Result_7_fu_1538_p4[4] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd4;
    end else if (p_Result_7_fu_1538_p4[5] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd5;
    end else if (p_Result_7_fu_1538_p4[6] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd6;
    end else if (p_Result_7_fu_1538_p4[7] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd7;
    end else if (p_Result_7_fu_1538_p4[8] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd8;
    end else if (p_Result_7_fu_1538_p4[9] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd9;
    end else if (p_Result_7_fu_1538_p4[10] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd10;
    end else if (p_Result_7_fu_1538_p4[11] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd11;
    end else if (p_Result_7_fu_1538_p4[12] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd12;
    end else if (p_Result_7_fu_1538_p4[13] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd13;
    end else if (p_Result_7_fu_1538_p4[14] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd14;
    end else if (p_Result_7_fu_1538_p4[15] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd15;
    end else if (p_Result_7_fu_1538_p4[16] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd16;
    end else if (p_Result_7_fu_1538_p4[17] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd17;
    end else if (p_Result_7_fu_1538_p4[18] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd18;
    end else if (p_Result_7_fu_1538_p4[19] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd19;
    end else if (p_Result_7_fu_1538_p4[20] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd20;
    end else if (p_Result_7_fu_1538_p4[21] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd21;
    end else if (p_Result_7_fu_1538_p4[22] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd22;
    end else if (p_Result_7_fu_1538_p4[23] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd23;
    end else if (p_Result_7_fu_1538_p4[24] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd24;
    end else if (p_Result_7_fu_1538_p4[25] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd25;
    end else if (p_Result_7_fu_1538_p4[26] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd26;
    end else if (p_Result_7_fu_1538_p4[27] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd27;
    end else if (p_Result_7_fu_1538_p4[28] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd28;
    end else if (p_Result_7_fu_1538_p4[29] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd29;
    end else if (p_Result_7_fu_1538_p4[30] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd30;
    end else if (p_Result_7_fu_1538_p4[31] == 1'b1) begin
        num_zeros_fu_1548_p3 = 32'd31;
    end else begin
        num_zeros_fu_1548_p3 = 32'd32;
    end
end

assign or_cond1_fu_788_p2 = (sel_tmp9_fu_759_p2 | sel_tmp2_fu_748_p2);

assign or_cond2_fu_802_p2 = (or_cond_fu_776_p2 | or_cond1_fu_788_p2);

assign or_cond3_fu_1061_p2 = (sel_tmp17_reg_2542 | sel_tmp15_fu_1049_p2);

assign or_cond4_fu_1073_p2 = (sel_tmp14_fu_1044_p2 | sel_tmp10_fu_1033_p2);

assign or_cond5_fu_1087_p2 = (or_cond4_fu_1073_p2 | or_cond3_fu_1061_p2);

assign or_cond6_fu_1346_p2 = (sel_tmp26_reg_2612 | sel_tmp24_fu_1334_p2);

assign or_cond7_fu_1358_p2 = (sel_tmp23_fu_1329_p2 | sel_tmp19_fu_1318_p2);

assign or_cond8_fu_1372_p2 = (or_cond7_fu_1358_p2 | or_cond6_fu_1346_p2);

assign or_cond_fu_776_p2 = (sel_tmp_fu_764_p2 | sel_tmp4_reg_2472);

assign p_Repl2_10_trunc_fu_2289_p2 = (tmp_84_fu_2281_p2 + tmp_85_fu_2286_p1);

assign p_Repl2_13_trunc_fu_2333_p2 = (tmp_94_fu_2325_p2 + tmp_95_fu_2330_p1);

assign p_Repl2_16_trunc_fu_2377_p2 = (tmp_101_fu_2369_p2 + tmp_102_fu_2374_p1);

assign p_Repl2_1_trunc_fu_1594_p2 = (tmp_60_fu_1586_p2 + tmp_62_fu_1591_p1);

assign p_Repl2_4_trunc_fu_2201_p2 = (tmp_68_fu_2193_p2 + tmp_69_fu_2198_p1);

assign p_Repl2_7_trunc_fu_2245_p2 = (tmp_75_fu_2237_p2 + tmp_76_fu_2242_p1);

integer ap_tvar_int_0;

always @ (p_Val2_37_fu_1862_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_10_fu_1869_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_10_fu_1869_p4[ap_tvar_int_0] = p_Val2_37_fu_1862_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_11_fu_2214_p5 = {{tmp_71_fu_2207_p3}, {tmp32_V_25_reg_2953[22:0]}};

integer ap_tvar_int_1;

always @ (p_Val2_38_fu_1911_p3) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_12_fu_1918_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_12_fu_1918_p4[ap_tvar_int_1] = p_Val2_38_fu_1911_p3[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_13_fu_2258_p5 = {{tmp_77_fu_2251_p3}, {tmp32_V_26_reg_2963[22:0]}};

integer ap_tvar_int_2;

always @ (p_Val2_39_fu_1960_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_14_fu_1967_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_14_fu_1967_p4[ap_tvar_int_2] = p_Val2_39_fu_1960_p3[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_15_fu_2302_p5 = {{tmp_87_fu_2295_p3}, {tmp32_V_27_reg_2973[22:0]}};

integer ap_tvar_int_3;

always @ (p_Val2_s_fu_2009_p3) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            p_Result_16_fu_2016_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_16_fu_2016_p4[ap_tvar_int_3] = p_Val2_s_fu_2009_p3[31 - ap_tvar_int_3];
        end
    end
end

assign p_Result_17_fu_2346_p5 = {{tmp_96_fu_2339_p3}, {tmp32_V_28_reg_2983[22:0]}};

integer ap_tvar_int_4;

always @ (p_Val2_40_fu_2058_p3) begin
    for (ap_tvar_int_4 = 32 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 31 - 0) begin
            p_Result_18_fu_2065_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_18_fu_2065_p4[ap_tvar_int_4] = p_Val2_40_fu_2058_p3[31 - ap_tvar_int_4];
        end
    end
end

assign p_Result_19_fu_2390_p5 = {{tmp_103_fu_2383_p3}, {tmp32_V_29_reg_2993[22:0]}};

assign p_Result_1_fu_2097_p4 = {{tmp32_V_25_fu_2093_p1[30:23]}};

assign p_Result_2_fu_881_p1 = tmp_14_fu_874_p3;

assign p_Result_3_fu_1166_p1 = tmp_30_fu_1159_p3;

assign p_Result_4_fu_2117_p4 = {{tmp32_V_26_fu_2113_p1[30:23]}};

assign p_Result_5_fu_1570_p4 = {{tmp32_V_24_fu_1566_p1[30:23]}};

assign p_Result_6_fu_2177_p4 = {{tmp32_V_29_fu_2173_p1[30:23]}};

integer ap_tvar_int_5;

always @ (p_Val2_36_fu_1531_p3) begin
    for (ap_tvar_int_5 = 32 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 31 - 0) begin
            p_Result_7_fu_1538_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            p_Result_7_fu_1538_p4[ap_tvar_int_5] = p_Val2_36_fu_1531_p3[31 - ap_tvar_int_5];
        end
    end
end

assign p_Result_8_fu_1607_p5 = {{tmp_64_fu_1600_p3}, {tmp32_V_24_reg_2713[22:0]}};

assign p_Result_9_fu_2137_p4 = {{tmp32_V_27_fu_2133_p1[30:23]}};

assign p_Result_s_27_fu_2157_p4 = {{tmp32_V_28_fu_2153_p1[30:23]}};

assign p_Result_s_fu_595_p1 = tmp_8_fu_588_p3;

assign p_Val2_12_fu_1737_p0 = OP1_V_cast_fu_1710_p1;

assign p_Val2_12_fu_1737_p1 = reg_532;

assign p_Val2_12_fu_1737_p2 = ($signed(p_Val2_12_fu_1737_p0) * $signed(p_Val2_12_fu_1737_p1));

assign p_Val2_14_fu_1780_p0 = OP1_V_cast_reg_2791;

assign p_Val2_14_fu_1780_p1 = reg_527;

assign p_Val2_14_fu_1780_p2 = ($signed(p_Val2_14_fu_1780_p0) * $signed(p_Val2_14_fu_1780_p1));

assign p_Val2_16_fu_1799_p0 = OP1_V_cast_reg_2791;

assign p_Val2_16_fu_1799_p1 = reg_532;

assign p_Val2_16_fu_1799_p2 = ($signed(p_Val2_16_fu_1799_p0) * $signed(p_Val2_16_fu_1799_p1));

assign p_Val2_18_fu_1828_p0 = OP1_V_cast_reg_2791;

assign p_Val2_18_fu_1828_p1 = reg_527;

assign p_Val2_18_fu_1828_p2 = ($signed(p_Val2_18_fu_1828_p0) * $signed(p_Val2_18_fu_1828_p1));

assign p_Val2_36_fu_1531_p3 = ((is_neg_fu_1523_p3[0:0] === 1'b1) ? tmp_58_reg_2683 : p_Val2_6_reg_409);

assign p_Val2_37_fu_1862_p3 = ((is_neg_1_fu_1854_p3[0:0] === 1'b1) ? tmp_66_reg_2751 : p_Val2_4_reg_480);

assign p_Val2_38_fu_1911_p3 = ((is_neg_2_fu_1903_p3[0:0] === 1'b1) ? tmp_73_reg_2756 : p_Val2_3_reg_468);

assign p_Val2_39_fu_1960_p3 = ((is_neg_3_fu_1952_p3[0:0] === 1'b1) ? tmp_79_reg_2761 : p_Val2_9_reg_456);

assign p_Val2_40_fu_2058_p3 = ((is_neg_5_fu_2050_p3[0:0] === 1'b1) ? tmp_99_reg_2771 : p_Val2_32_reg_432);

assign p_Val2_7_fu_1717_p0 = OP1_V_cast_fu_1710_p1;

assign p_Val2_7_fu_1717_p1 = reg_527;

assign p_Val2_7_fu_1717_p2 = ($signed(p_Val2_7_fu_1717_p0) * $signed(p_Val2_7_fu_1717_p1));

assign p_Val2_s_fu_2009_p3 = ((is_neg_4_fu_2001_p3[0:0] === 1'b1) ? tmp_91_reg_2766 : p_Val2_8_reg_444);

assign sel_tmp10_fu_1033_p2 = (tmp_22_reg_2525 & sel_tmp5_fu_1028_p2);

assign sel_tmp11_fu_961_p2 = (sel_tmp31_demorgan_fu_956_p2 ^ 1'd1);

assign sel_tmp12_fu_967_p2 = (tmp_19_fu_904_p2 & sel_tmp11_fu_961_p2);

assign sel_tmp13_fu_1038_p2 = (tmp_24_fu_998_p2 ^ 1'd1);

assign sel_tmp14_fu_1044_p2 = (sel_tmp13_fu_1038_p2 & sel_tmp12_reg_2536);

assign sel_tmp15_fu_1049_p2 = (tmp_24_fu_998_p2 & sel_tmp12_reg_2536);

assign sel_tmp16_fu_979_p2 = (sel_tmp46_demorgan_fu_973_p2 ^ 1'd1);

assign sel_tmp17_fu_985_p2 = (sel_tmp16_fu_979_p2 & icmp7_fu_950_p2);

assign sel_tmp18_fu_1313_p2 = (tmp_32_reg_2578_pp2_iter2_reg ^ 1'd1);

assign sel_tmp19_fu_1318_p2 = (tmp_40_reg_2595 & sel_tmp18_fu_1313_p2);

assign sel_tmp1_fu_743_p2 = (tmp_2_reg_2438_pp0_iter2_reg ^ 1'd1);

assign sel_tmp20_fu_1246_p2 = (sel_tmp56_demorgan_fu_1241_p2 ^ 1'd1);

assign sel_tmp21_demorgan_fu_687_p2 = (tmp_4_fu_618_p2 | sel_tmp6_demorgan_fu_670_p2);

assign sel_tmp21_fu_1252_p2 = (tmp_37_fu_1189_p2 & sel_tmp20_fu_1246_p2);

assign sel_tmp22_fu_1323_p2 = (tmp_41_fu_1283_p2 ^ 1'd1);

assign sel_tmp23_fu_1329_p2 = (sel_tmp22_fu_1323_p2 & sel_tmp21_reg_2606);

assign sel_tmp24_fu_1334_p2 = (tmp_41_fu_1283_p2 & sel_tmp21_reg_2606);

assign sel_tmp25_fu_1264_p2 = (sel_tmp71_demorgan_fu_1258_p2 ^ 1'd1);

assign sel_tmp26_fu_1270_p2 = (sel_tmp25_fu_1264_p2 & icmp1_fu_1235_p2);

assign sel_tmp2_fu_748_p2 = (tmp_9_reg_2455 & sel_tmp1_fu_743_p2);

assign sel_tmp31_demorgan_fu_956_p2 = (tmp_22_fu_930_p2 | tmp_16_reg_2508);

assign sel_tmp3_fu_693_p2 = (sel_tmp21_demorgan_fu_687_p2 ^ 1'd1);

assign sel_tmp46_demorgan_fu_973_p2 = (tmp_19_fu_904_p2 | sel_tmp31_demorgan_fu_956_p2);

assign sel_tmp4_fu_699_p2 = (sel_tmp3_fu_693_p2 & icmp_fu_664_p2);

assign sel_tmp56_demorgan_fu_1241_p2 = (tmp_40_fu_1215_p2 | tmp_32_reg_2578);

assign sel_tmp5_fu_1028_p2 = (tmp_16_reg_2508_pp1_iter2_reg ^ 1'd1);

assign sel_tmp6_demorgan_fu_670_p2 = (tmp_9_fu_644_p2 | tmp_2_reg_2438);

assign sel_tmp6_fu_675_p2 = (sel_tmp6_demorgan_fu_670_p2 ^ 1'd1);

assign sel_tmp71_demorgan_fu_1258_p2 = (tmp_37_fu_1189_p2 | sel_tmp56_demorgan_fu_1241_p2);

assign sel_tmp7_fu_681_p2 = (tmp_4_fu_618_p2 & sel_tmp6_fu_675_p2);

assign sel_tmp8_fu_753_p2 = (tmp_3_fu_713_p2 ^ 1'd1);

assign sel_tmp9_fu_759_p2 = (sel_tmp8_fu_753_p2 & sel_tmp7_reg_2466);

assign sel_tmp_fu_764_p2 = (tmp_3_fu_713_p2 & sel_tmp7_reg_2466);

assign sh_amt_1_cast_fu_995_p1 = sh_amt_1_reg_2519;

assign sh_amt_1_fu_922_p3 = ((tmp_19_fu_904_p2[0:0] === 1'b1) ? tmp_20_fu_910_p2 : tmp_21_fu_916_p2);

assign sh_amt_2_cast_fu_1280_p1 = sh_amt_2_reg_2589;

assign sh_amt_2_fu_1207_p3 = ((tmp_37_fu_1189_p2[0:0] === 1'b1) ? tmp_38_fu_1195_p2 : tmp_39_fu_1201_p2);

assign sh_amt_cast_fu_710_p1 = sh_amt_reg_2449;

assign sh_amt_fu_636_p3 = ((tmp_4_fu_618_p2[0:0] === 1'b1) ? tmp_5_fu_624_p2 : tmp_7_fu_630_p2);

assign smooth_grad_V_d0 = $signed(tmp_50_fu_1463_p4);

assign smooth_grad_V_d1 = {{grp_fu_1457_p2[36:5]}};

assign storemerge2_fu_1016_p3 = ((isneg_1_reg_2492_pp1_iter2_reg[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign storemerge4_fu_1301_p3 = ((isneg_2_reg_2562_pp2_iter2_reg[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign storemerge_fu_731_p3 = ((isneg_reg_2422_pp0_iter2_reg[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp32_V_14_fu_1985_p2 = p_Val2_39_fu_1960_p3 << num_zeros_3_fu_1977_p3;

assign tmp32_V_18_fu_2034_p2 = p_Val2_s_fu_2009_p3 << num_zeros_4_fu_2026_p3;

assign tmp32_V_1_fu_1556_p2 = p_Val2_36_fu_1531_p3 << num_zeros_fu_1548_p3;

assign tmp32_V_23_fu_2083_p2 = p_Val2_40_fu_2058_p3 << num_zeros_5_fu_2075_p3;

assign tmp32_V_24_fu_1566_p1 = grp_fu_504_p1;

assign tmp32_V_25_fu_2093_p1 = grp_fu_504_p1;

assign tmp32_V_26_fu_2113_p1 = grp_fu_507_p1;

assign tmp32_V_27_fu_2133_p1 = grp_fu_510_p1;

assign tmp32_V_28_fu_2153_p1 = grp_fu_513_p1;

assign tmp32_V_29_fu_2173_p1 = grp_fu_516_p1;

assign tmp32_V_3_fu_1887_p2 = p_Val2_37_fu_1862_p3 << num_zeros_1_fu_1879_p3;

assign tmp32_V_7_fu_1936_p2 = p_Val2_38_fu_1911_p3 << num_zeros_2_fu_1928_p3;

assign tmp_100_fu_2187_p2 = ((p_Result_6_fu_2177_p4 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_101_fu_2369_p2 = ($signed(8'd142) - $signed(tmp_124_reg_2948));

assign tmp_102_fu_2374_p1 = tmp_100_reg_2998;

assign tmp_103_fu_2383_p3 = {{is_neg_5_reg_2938}, {p_Repl2_16_trunc_fu_2377_p2}};

assign tmp_104_fu_1225_p4 = {{sh_amt_2_fu_1207_p3[11:5]}};

assign tmp_105_fu_1689_p3 = {{1'd1}, {i_5_reg_492}};

assign tmp_106_fu_1753_p3 = {{2'd2}, {i_5_reg_492}};

assign tmp_10_fu_823_p2 = ($signed(7'd96) + $signed(i_1_reg_376));

assign tmp_110_fu_1297_p1 = tmp_44_fu_1292_p2[31:0];

assign tmp_112_fu_1434_p4 = {{abs_dif_V_1_fu_1424_p3[31:16]}};

assign tmp_114_fu_1562_p1 = num_zeros_fu_1548_p3[7:0];

assign tmp_116_fu_1893_p1 = num_zeros_1_fu_1879_p3[7:0];

assign tmp_118_fu_1942_p1 = num_zeros_2_fu_1928_p3[7:0];

assign tmp_11_fu_991_p1 = tmp_10_reg_2482_pp1_iter2_reg;

assign tmp_120_fu_1991_p1 = num_zeros_3_fu_1977_p3[7:0];

assign tmp_122_fu_2040_p1 = num_zeros_4_fu_2026_p3[7:0];

assign tmp_124_fu_2089_p1 = num_zeros_5_fu_2075_p3[7:0];

assign tmp_13_fu_871_p1 = exp_tmp_V_1_reg_2498;

assign tmp_14_fu_874_p3 = {{1'd1}, {tmp_49_reg_2503}};

assign tmp_15_fu_718_p1 = $unsigned(sh_amt_cast_fu_710_p1);

assign tmp_16_fu_865_p2 = ((tmp_42_fu_839_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_17_fu_722_p2 = $signed(man_V_2_reg_2444) >>> tmp_15_fu_718_p1;

assign tmp_18_fu_738_p2 = tmp_25_reg_2460 << sh_amt_cast_fu_710_p1;

assign tmp_19_fu_904_p2 = (($signed(F2_1_fu_898_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_1_fu_553_p1 = ireg_V_fu_549_p1[62:0];

assign tmp_20_fu_910_p2 = ($signed(12'd4080) + $signed(F2_1_fu_898_p2));

assign tmp_21_fu_916_p2 = (12'd16 - F2_1_fu_898_p2);

assign tmp_22_fu_930_p2 = ((F2_1_fu_898_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_23_fu_575_p1 = ireg_V_fu_549_p1[51:0];

assign tmp_24_fu_998_p2 = ((sh_amt_1_reg_2519 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_25_fu_650_p1 = man_V_2_fu_605_p3[31:0];

assign tmp_26_fu_1108_p2 = ($signed(8'd192) + $signed(i_2_reg_387));

assign tmp_27_fu_1276_p1 = tmp_26_reg_2552_pp2_iter2_reg;

assign tmp_29_fu_1156_p1 = exp_tmp_V_2_reg_2568;

assign tmp_2_fu_579_p2 = ((tmp_1_fu_553_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_30_fu_1159_p3 = {{1'd1}, {tmp_88_reg_2573}};

assign tmp_31_fu_1003_p1 = $unsigned(sh_amt_1_cast_fu_995_p1);

assign tmp_32_fu_1150_p2 = ((tmp_70_fu_1124_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_33_fu_654_p4 = {{sh_amt_fu_636_p3[11:5]}};

assign tmp_34_fu_1007_p2 = $signed(man_V_5_reg_2514) >>> tmp_31_fu_1003_p1;

assign tmp_35_fu_1023_p2 = tmp_51_reg_2530 << sh_amt_1_cast_fu_995_p1;

assign tmp_36_fu_727_p1 = tmp_17_fu_722_p2[31:0];

assign tmp_37_fu_1189_p2 = (($signed(F2_2_fu_1183_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_38_fu_1195_p2 = ($signed(12'd4080) + $signed(F2_2_fu_1183_p2));

assign tmp_39_fu_1201_p2 = (12'd16 - F2_2_fu_1183_p2);

assign tmp_3_fu_713_p2 = ((sh_amt_reg_2449 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_40_fu_1215_p2 = ((F2_2_fu_1183_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_41_fu_1283_p2 = ((sh_amt_2_reg_2589 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_42_fu_839_p1 = ireg_V_1_fu_835_p1[62:0];

assign tmp_43_fu_1288_p1 = $unsigned(sh_amt_2_cast_fu_1280_p1);

assign tmp_44_fu_1292_p2 = $signed(man_V_8_reg_2584) >>> tmp_43_fu_1288_p1;

assign tmp_45_fu_1308_p2 = tmp_97_reg_2600 << sh_amt_2_cast_fu_1280_p1;

assign tmp_46_fu_1399_p1 = i_3_reg_398;

assign tmp_49_fu_861_p1 = ireg_V_1_fu_835_p1[51:0];

assign tmp_4_fu_618_p2 = (($signed(F2_fu_612_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_50_fu_1463_p4 = {{abs_dif_V_3_reg_2643[31:5]}};

assign tmp_51_fu_936_p1 = man_V_5_fu_891_p3[31:0];

assign tmp_53_fu_940_p4 = {{sh_amt_1_fu_922_p3[11:5]}};

assign tmp_57_fu_1517_p2 = ((p_Val2_6_reg_409 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_58_fu_1505_p2 = (32'd0 - p_Val2_6_reg_409);

assign tmp_59_fu_1580_p2 = ((p_Result_5_fu_1570_p4 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_5_fu_624_p2 = ($signed(12'd4080) + $signed(F2_fu_612_p2));

assign tmp_60_fu_1586_p2 = ($signed(8'd142) - $signed(tmp_114_reg_2708));

assign tmp_61_fu_1500_p1 = i_4_reg_421;

assign tmp_62_fu_1591_p1 = tmp_59_reg_2718;

assign tmp_63_fu_1012_p1 = tmp_34_fu_1007_p2[31:0];

assign tmp_64_fu_1600_p3 = {{is_neg_reg_2698}, {p_Repl2_1_trunc_fu_1594_p2}};

assign tmp_65_fu_1848_p2 = ((p_Val2_4_reg_480 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_66_fu_1659_p2 = (32'd0 - p_Val2_4_reg_480);

assign tmp_67_fu_2107_p2 = ((p_Result_1_fu_2097_p4 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_68_fu_2193_p2 = ($signed(8'd142) - $signed(tmp_116_reg_2868));

assign tmp_69_fu_2198_p1 = tmp_67_reg_2958;

assign tmp_6_fu_705_p1 = i_reg_364_pp0_iter2_reg;

assign tmp_70_fu_1124_p1 = ireg_V_2_fu_1120_p1[62:0];

assign tmp_71_fu_2207_p3 = {{is_neg_1_reg_2858}, {p_Repl2_4_trunc_fu_2201_p2}};

assign tmp_72_fu_1897_p2 = ((p_Val2_3_reg_468 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_73_fu_1665_p2 = (32'd0 - p_Val2_3_reg_468);

assign tmp_74_fu_2127_p2 = ((p_Result_4_fu_2117_p4 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_75_fu_2237_p2 = ($signed(8'd142) - $signed(tmp_118_reg_2888));

assign tmp_76_fu_2242_p1 = tmp_74_reg_2968;

assign tmp_77_fu_2251_p3 = {{is_neg_2_reg_2878}, {p_Repl2_7_trunc_fu_2245_p2}};

assign tmp_78_fu_1946_p2 = ((p_Val2_9_reg_456 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_79_fu_1671_p2 = (32'd0 - p_Val2_9_reg_456);

assign tmp_7_fu_630_p2 = (12'd16 - F2_fu_612_p2);

assign tmp_80_fu_1642_p1 = i_5_reg_492;

assign tmp_81_fu_2147_p2 = ((p_Result_9_fu_2137_p4 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_82_fu_1648_p2 = (i_5_reg_492 ^ 6'd32);

assign tmp_83_fu_1654_p1 = $unsigned(tmp_82_fu_1648_p2);

assign tmp_84_fu_2281_p2 = ($signed(8'd142) - $signed(tmp_120_reg_2908));

assign tmp_85_fu_2286_p1 = tmp_81_reg_2978;

assign tmp_86_fu_1697_p1 = tmp_105_fu_1689_p3;

assign tmp_87_fu_2295_p3 = {{is_neg_3_reg_2898}, {p_Repl2_10_trunc_fu_2289_p2}};

assign tmp_88_cast_fu_1702_p1 = tmp_82_reg_2741;

assign tmp_88_fu_1146_p1 = ireg_V_2_fu_1120_p1[51:0];

assign tmp_89_fu_1705_p1 = $unsigned(tmp_88_cast_fu_1702_p1);

assign tmp_8_fu_588_p3 = {{1'd1}, {tmp_23_reg_2433}};

assign tmp_90_fu_1995_p2 = ((p_Val2_8_reg_444 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_91_fu_1677_p2 = (32'd0 - p_Val2_8_reg_444);

assign tmp_92_fu_1761_p1 = tmp_106_fu_1753_p3;

assign tmp_93_fu_2167_p2 = ((p_Result_s_27_fu_2157_p4 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_94_fu_2325_p2 = ($signed(8'd142) - $signed(tmp_122_reg_2928));

assign tmp_95_fu_2330_p1 = tmp_93_reg_2988;

assign tmp_96_fu_2339_p3 = {{is_neg_4_reg_2918}, {p_Repl2_13_trunc_fu_2333_p2}};

assign tmp_97_fu_1221_p1 = man_V_8_fu_1176_p3[31:0];

assign tmp_98_fu_2044_p2 = ((p_Val2_32_reg_432 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_99_fu_1683_p2 = (32'd0 - p_Val2_32_reg_432);

assign tmp_9_fu_644_p2 = ((F2_fu_612_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_s_fu_585_p1 = exp_tmp_V_reg_2428;

assign w1 = ((tmp_65_reg_2853[0:0] === 1'b1) ? 32'd0 : f_2_fu_2225_p1);

assign w1_temp_V_fu_1766_p2 = (p_Val2_11_reg_2798 + p_Val2_4_reg_480);

assign w2 = ((tmp_72_reg_2873[0:0] === 1'b1) ? 32'd0 : f_4_fu_2269_p1);

assign w2_temp_V_fu_1771_p2 = (p_Val2_13_reg_2803 + p_Val2_3_reg_468);

assign w3 = ((tmp_78_reg_2893[0:0] === 1'b1) ? 32'd0 : f_6_fu_2313_p1);

assign w3_temp_V_fu_1814_p2 = (p_Val2_15_reg_2823 + p_Val2_9_reg_456);

assign w4 = ((tmp_90_reg_2913[0:0] === 1'b1) ? 32'd0 : f_8_fu_2357_p1);

assign w4_temp_V_fu_1819_p2 = (p_Val2_17_reg_2828 + p_Val2_8_reg_444);

assign w5 = ((tmp_98_reg_2933[0:0] === 1'b1) ? 32'd0 : f_11_fu_2401_p1);

assign w5_temp_V_fu_1843_p2 = (p_Val2_19_reg_2843 + p_Val2_32_reg_432);

always @ (posedge ap_clk) begin
    tmp_46_reg_2627[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter4_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter5_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter6_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter7_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter8_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter9_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter10_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter11_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter12_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter13_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter14_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter15_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter16_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter17_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter18_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter19_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter20_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter21_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter22_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter23_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter24_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter25_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter26_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter27_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter28_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter29_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter30_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter31_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter32_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter33_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter34_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter35_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter36_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter37_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter38_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter39_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter40_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter41_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter42_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter43_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter44_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter45_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter46_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter47_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter48_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter49_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter50_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter51_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_46_reg_2627_pp3_iter52_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //backward_lite
